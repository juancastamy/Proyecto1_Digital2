

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 20 04:48:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.10
    24                           ; Generated 31/07/2019 GMT
    25                           ; 
    26                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  0007                     	;# 
   221  0008                     	;# 
   222  0009                     	;# 
   223  000A                     	;# 
   224  000B                     	;# 
   225  000C                     	;# 
   226  000D                     	;# 
   227  000E                     	;# 
   228  000E                     	;# 
   229  000F                     	;# 
   230  0010                     	;# 
   231  0011                     	;# 
   232  0012                     	;# 
   233  0013                     	;# 
   234  0014                     	;# 
   235  0015                     	;# 
   236  0015                     	;# 
   237  0016                     	;# 
   238  0017                     	;# 
   239  0018                     	;# 
   240  0019                     	;# 
   241  001A                     	;# 
   242  001B                     	;# 
   243  001B                     	;# 
   244  001C                     	;# 
   245  001D                     	;# 
   246  001E                     	;# 
   247  001F                     	;# 
   248  0081                     	;# 
   249  0085                     	;# 
   250  0086                     	;# 
   251  0087                     	;# 
   252  0088                     	;# 
   253  0089                     	;# 
   254  008C                     	;# 
   255  008D                     	;# 
   256  008E                     	;# 
   257  008F                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0094                     	;# 
   265  0095                     	;# 
   266  0096                     	;# 
   267  0097                     	;# 
   268  0098                     	;# 
   269  0099                     	;# 
   270  009A                     	;# 
   271  009B                     	;# 
   272  009C                     	;# 
   273  009D                     	;# 
   274  009E                     	;# 
   275  009F                     	;# 
   276  0105                     	;# 
   277  0107                     	;# 
   278  0108                     	;# 
   279  0109                     	;# 
   280  010C                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  010F                     	;# 
   285  0185                     	;# 
   286  0187                     	;# 
   287  0188                     	;# 
   288  0189                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0000                     	;# 
   292  0001                     	;# 
   293  0002                     	;# 
   294  0003                     	;# 
   295  0004                     	;# 
   296  0005                     	;# 
   297  0006                     	;# 
   298  0007                     	;# 
   299  0008                     	;# 
   300  0009                     	;# 
   301  000A                     	;# 
   302  000B                     	;# 
   303  000C                     	;# 
   304  000D                     	;# 
   305  000E                     	;# 
   306  000E                     	;# 
   307  000F                     	;# 
   308  0010                     	;# 
   309  0011                     	;# 
   310  0012                     	;# 
   311  0013                     	;# 
   312  0014                     	;# 
   313  0015                     	;# 
   314  0015                     	;# 
   315  0016                     	;# 
   316  0017                     	;# 
   317  0018                     	;# 
   318  0019                     	;# 
   319  001A                     	;# 
   320  001B                     	;# 
   321  001B                     	;# 
   322  001C                     	;# 
   323  001D                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  0081                     	;# 
   327  0085                     	;# 
   328  0086                     	;# 
   329  0087                     	;# 
   330  0088                     	;# 
   331  0089                     	;# 
   332  008C                     	;# 
   333  008D                     	;# 
   334  008E                     	;# 
   335  008F                     	;# 
   336  0090                     	;# 
   337  0091                     	;# 
   338  0092                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0095                     	;# 
   344  0096                     	;# 
   345  0097                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009A                     	;# 
   349  009B                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  0105                     	;# 
   355  0107                     	;# 
   356  0108                     	;# 
   357  0109                     	;# 
   358  010C                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  0185                     	;# 
   364  0187                     	;# 
   365  0188                     	;# 
   366  0189                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  008F                     	;# 
   414  0090                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009C                     	;# 
   429  009D                     	;# 
   430  009E                     	;# 
   431  009F                     	;# 
   432  0105                     	;# 
   433  0107                     	;# 
   434  0108                     	;# 
   435  0109                     	;# 
   436  010C                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  010E                     	;# 
   440  010F                     	;# 
   441  0185                     	;# 
   442  0187                     	;# 
   443  0188                     	;# 
   444  0189                     	;# 
   445  018C                     	;# 
   446  018D                     	;# 
   447  0013                     _SSPBUF	set	19
   448  0014                     _SSPCON	set	20
   449  000B                     _INTCONbits	set	11
   450  0019                     _TXREG	set	25
   451  001A                     _RCREG	set	26
   452  000C                     _PIR1bits	set	12
   453  0018                     _RCSTAbits	set	24
   454  0094                     _SSPSTAT	set	148
   455  008F                     _OSCCONbits	set	143
   456  008C                     _PIE1bits	set	140
   457  0088                     _TRISDbits	set	136
   458  0088                     _TRISD	set	136
   459  0087                     _TRISC	set	135
   460  0086                     _TRISB	set	134
   461  0085                     _TRISA	set	133
   462  0094                     _SSPSTATbits	set	148
   463  0098                     _TXSTAbits	set	152
   464  0099                     _SPBRG	set	153
   465  043B                     _TRISC3	set	1083
   466  043C                     _TRISC4	set	1084
   467  043D                     _TRISC5	set	1085
   468  0189                     _ANSELH	set	393
   469  0188                     _ANSEL	set	392
   470                           
   471                           ; #config settings
   472  0000                     
   473                           	psect	cinit
   474  000F                     start_initialization:	
   475  000F                     __initialization:	
   476                           
   477                           ; Clear objects allocated to COMMON
   478  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   479  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   480  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   481                           
   482                           ; Clear objects allocated to BANK0
   483  0012  1283               	bcf	3,5	;RP0=0, select bank0
   484  0013  1303               	bcf	3,6	;RP1=0, select bank0
   485  0014  01C0               	clrf	__pbssBANK0& (0+127)
   486  0015  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   487  0016  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   488  0017  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   489  0018                     end_of_initialization:	
   490                           ;End of C runtime variable initialization code
   491                           
   492  0018                     __end_of__initialization:	
   493  0018  0183               	clrf	3
   494  0019  120A  118A  297E   	ljmp	_main	;jump to C main() function
   495                           
   496                           	psect	bssCOMMON
   497  0077                     __pbssCOMMON:	
   498  0077                     _S0:	
   499  0077                     	ds	1
   500  0078                     _RASPBERRY:	
   501  0078                     	ds	1
   502  0079                     _Luz:	
   503  0079                     	ds	1
   504                           
   505                           	psect	bssBANK0
   506  0040                     __pbssBANK0:	
   507  0040                     _Presion:	
   508  0040                     	ds	1
   509  0041                     _ULTRA:	
   510  0041                     	ds	1
   511  0042                     _Parq:	
   512  0042                     	ds	1
   513  0043                     _Temp:	
   514  0043                     	ds	1
   515                           
   516                           	psect	cstackCOMMON
   517  0070                     __pcstackCOMMON:	
   518  0070                     ?_spiRead:	
   519  0070                     ??_spiRead:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_setup:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_initOsc:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_UART_READ:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ??_UART_READ:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_UART_WRITE:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_ISR:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ??_ISR:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_main:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_spiReceiveWait:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ??_spiReceiveWait:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 1 bytes @ 0x0
   554  0070                     	ds	3
   555  0073                     ??_initOsc:	
   556  0073                     ?_spiInit:	
   557                           ; 1 bytes @ 0x3
   558                           
   559  0073                     ??_UART_WRITE:	
   560                           ; 1 bytes @ 0x3
   561                           
   562  0073                     ??___aldiv:	
   563                           ; 1 bytes @ 0x3
   564                           
   565  0073                     UART_WRITE@data:	
   566                           ; 1 bytes @ 0x3
   567                           
   568  0073                     spiInit@sDataSample:	
   569                           ; 1 bytes @ 0x3
   570                           
   571                           
   572                           ; 1 bytes @ 0x3
   573  0073                     	ds	1
   574  0074                     spiInit@sClockIdle:	
   575                           
   576                           ; 1 bytes @ 0x4
   577  0074                     	ds	1
   578  0075                     initOsc@frec:	
   579  0075                     spiInit@sTransmitEdge:	
   580                           ; 1 bytes @ 0x5
   581                           
   582                           
   583                           ; 1 bytes @ 0x5
   584  0075                     	ds	1
   585  0076                     ??_spiInit:	
   586  0076                     spiInit@sType:	
   587                           ; 1 bytes @ 0x6
   588                           
   589                           
   590                           ; 1 bytes @ 0x6
   591  0076                     	ds	1
   592  0077                     ??_setup:	
   593                           
   594                           	psect	cstackBANK0
   595  0020                     __pcstackBANK0:	
   596                           ; 1 bytes @ 0x7
   597                           
   598  0020                     ?___aldiv:	
   599  0020                     ___aldiv@divisor:	
   600                           ; 4 bytes @ 0x0
   601                           
   602                           
   603                           ; 4 bytes @ 0x0
   604  0020                     	ds	4
   605  0024                     ___aldiv@dividend:	
   606                           
   607                           ; 4 bytes @ 0x4
   608  0024                     	ds	4
   609  0028                     ___aldiv@counter:	
   610                           
   611                           ; 1 bytes @ 0x8
   612  0028                     	ds	1
   613  0029                     ___aldiv@sign:	
   614                           
   615                           ; 1 bytes @ 0x9
   616  0029                     	ds	1
   617  002A                     ___aldiv@quotient:	
   618                           
   619                           ; 4 bytes @ 0xA
   620  002A                     	ds	4
   621  002E                     ?_UART_INIT:	
   622  002E                     UART_INIT@baudrate:	
   623                           ; 1 bytes @ 0xE
   624                           
   625                           
   626                           ; 4 bytes @ 0xE
   627  002E                     	ds	4
   628  0032                     ??_UART_INIT:	
   629                           
   630                           ; 1 bytes @ 0x12
   631  0032                     	ds	12
   632  003E                     ??_main:	
   633                           
   634                           ; 1 bytes @ 0x1E
   635  003E                     	ds	2
   636                           
   637                           	psect	maintext
   638  017E                     __pmaintext:	
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   641 ;;
   642 ;; *************** function _main *****************
   643 ;; Defined at:
   644 ;;		line 131 in file "SPI_PIC.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : B00/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          0       2       0       0       0
   661 ;;      Totals:         0       2       0       0       0
   662 ;;Total ram usage:        2 bytes
   663 ;; Hardware stack levels required when called:    5
   664 ;; This function calls:
   665 ;;		_UART_INIT
   666 ;;		_UART_WRITE
   667 ;;		_initOsc
   668 ;;		_setup
   669 ;; This function is called by:
   670 ;;		Startup code after reset
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           
   674                           
   675                           ;psect for function _main
   676  017E                     _main:	
   677  017E                     l1289:	
   678                           ;incstack = 0
   679                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   680                           
   681                           
   682                           ;SPI_PIC.c: 132:     setup();
   683  017E  120A  118A  22B5  120A  118A  	fcall	_setup
   684  0183                     l1291:	
   685                           
   686                           ;SPI_PIC.c: 133:     initOsc(7);
   687  0183  3007               	movlw	7
   688  0184  120A  118A  2259  120A  118A  	fcall	_initOsc
   689  0189                     l1293:	
   690                           
   691                           ;SPI_PIC.c: 134:     UART_INIT(9600);
   692  0189  3000               	movlw	0
   693  018A  1283               	bcf	3,5	;RP0=0, select bank0
   694  018B  1303               	bcf	3,6	;RP1=0, select bank0
   695  018C  00B1               	movwf	UART_INIT@baudrate+3
   696  018D  3000               	movlw	0
   697  018E  00B0               	movwf	UART_INIT@baudrate+2
   698  018F  3025               	movlw	37
   699  0190  00AF               	movwf	UART_INIT@baudrate+1
   700  0191  3080               	movlw	128
   701  0192  00AE               	movwf	UART_INIT@baudrate
   702  0193  120A  118A  21F4  120A  118A  	fcall	_UART_INIT
   703  0198                     l1295:	
   704                           
   705                           ;SPI_PIC.c: 139:     UART_WRITE(Luz);
   706  0198  0879               	movf	_Luz,w
   707  0199  120A  118A  22E9  120A  118A  	fcall	_UART_WRITE
   708  019E                     l1297:	
   709                           
   710                           ;SPI_PIC.c: 140:     _delay((unsigned long)((1)*(8000000/4000.0)));
   711  019E  3003               	movlw	3
   712  019F  1283               	bcf	3,5	;RP0=0, select bank0
   713  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   714  01A1  00BF               	movwf	??_main+1
   715  01A2  3097               	movlw	151
   716  01A3  00BE               	movwf	??_main
   717  01A4                     u727:	
   718  01A4  0BBE               	decfsz	??_main,f
   719  01A5  29A4               	goto	u727
   720  01A6  0BBF               	decfsz	??_main+1,f
   721  01A7  29A4               	goto	u727
   722  01A8                     l1299:	
   723                           
   724                           ;SPI_PIC.c: 141:     UART_WRITE(Temp);
   725  01A8  1283               	bcf	3,5	;RP0=0, select bank0
   726  01A9  1303               	bcf	3,6	;RP1=0, select bank0
   727  01AA  0843               	movf	_Temp,w
   728  01AB  120A  118A  22E9  120A  118A  	fcall	_UART_WRITE
   729  01B0                     l1301:	
   730                           
   731                           ;SPI_PIC.c: 142:     _delay((unsigned long)((1)*(8000000/4000.0)));
   732  01B0  3003               	movlw	3
   733  01B1  1283               	bcf	3,5	;RP0=0, select bank0
   734  01B2  1303               	bcf	3,6	;RP1=0, select bank0
   735  01B3  00BF               	movwf	??_main+1
   736  01B4  3097               	movlw	151
   737  01B5  00BE               	movwf	??_main
   738  01B6                     u737:	
   739  01B6  0BBE               	decfsz	??_main,f
   740  01B7  29B6               	goto	u737
   741  01B8  0BBF               	decfsz	??_main+1,f
   742  01B9  29B6               	goto	u737
   743  01BA                     l1303:	
   744                           
   745                           ;SPI_PIC.c: 143:     UART_WRITE(Parq);
   746  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   747  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   748  01BC  0842               	movf	_Parq,w
   749  01BD  120A  118A  22E9  120A  118A  	fcall	_UART_WRITE
   750  01C2                     l1305:	
   751                           
   752                           ;SPI_PIC.c: 144:     _delay((unsigned long)((1)*(8000000/4000.0)));
   753  01C2  3003               	movlw	3
   754  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   755  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   756  01C5  00BF               	movwf	??_main+1
   757  01C6  3097               	movlw	151
   758  01C7  00BE               	movwf	??_main
   759  01C8                     u747:	
   760  01C8  0BBE               	decfsz	??_main,f
   761  01C9  29C8               	goto	u747
   762  01CA  0BBF               	decfsz	??_main+1,f
   763  01CB  29C8               	goto	u747
   764  01CC                     l1307:	
   765                           
   766                           ;SPI_PIC.c: 145:     UART_WRITE(ULTRA);
   767  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   768  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   769  01CE  0841               	movf	_ULTRA,w
   770  01CF  120A  118A  22E9  120A  118A  	fcall	_UART_WRITE
   771  01D4                     l1309:	
   772                           
   773                           ;SPI_PIC.c: 146:     _delay((unsigned long)((1)*(8000000/4000.0)));
   774  01D4  3003               	movlw	3
   775  01D5  1283               	bcf	3,5	;RP0=0, select bank0
   776  01D6  1303               	bcf	3,6	;RP1=0, select bank0
   777  01D7  00BF               	movwf	??_main+1
   778  01D8  3097               	movlw	151
   779  01D9  00BE               	movwf	??_main
   780  01DA                     u757:	
   781  01DA  0BBE               	decfsz	??_main,f
   782  01DB  29DA               	goto	u757
   783  01DC  0BBF               	decfsz	??_main+1,f
   784  01DD  29DA               	goto	u757
   785  01DE                     l1311:	
   786                           
   787                           ;SPI_PIC.c: 147:     UART_WRITE(Presion);
   788  01DE  1283               	bcf	3,5	;RP0=0, select bank0
   789  01DF  1303               	bcf	3,6	;RP1=0, select bank0
   790  01E0  0840               	movf	_Presion,w
   791  01E1  120A  118A  22E9  120A  118A  	fcall	_UART_WRITE
   792  01E6                     l1313:	
   793                           
   794                           ;SPI_PIC.c: 148:     _delay((unsigned long)((1)*(8000000/4000.0)));
   795  01E6  3003               	movlw	3
   796  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   797  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   798  01E9  00BF               	movwf	??_main+1
   799  01EA  3097               	movlw	151
   800  01EB  00BE               	movwf	??_main
   801  01EC                     u767:	
   802  01EC  0BBE               	decfsz	??_main,f
   803  01ED  29EC               	goto	u767
   804  01EE  0BBF               	decfsz	??_main+1,f
   805  01EF  29EC               	goto	u767
   806  01F0  2998               	goto	l1295
   807  01F1  120A  118A  280C   	ljmp	start
   808  01F4                     __end_of_main:	
   809                           
   810                           	psect	text1
   811  02B5                     __ptext1:	
   812 ;; *************** function _setup *****************
   813 ;; Defined at:
   814 ;;		line 153 in file "SPI_PIC.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    4
   835 ;; This function calls:
   836 ;;		_spiInit
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           
   843                           ;psect for function _setup
   844  02B5                     _setup:	
   845  02B5                     l1079:	
   846                           ;incstack = 0
   847                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   848                           
   849                           
   850                           ;SPI_PIC.c: 154:     TRISA = 0;
   851  02B5  1683               	bsf	3,5	;RP0=1, select bank1
   852  02B6  1303               	bcf	3,6	;RP1=0, select bank1
   853  02B7  0185               	clrf	5	;volatile
   854                           
   855                           ;SPI_PIC.c: 155:     TRISB = 0;
   856  02B8  0186               	clrf	6	;volatile
   857  02B9                     l1081:	
   858                           
   859                           ;SPI_PIC.c: 156:     TRISC = 0b11010000;
   860  02B9  30D0               	movlw	208
   861  02BA  0087               	movwf	7	;volatile
   862  02BB                     l1083:	
   863                           
   864                           ;SPI_PIC.c: 157:     TRISD = 0;
   865  02BB  0188               	clrf	8	;volatile
   866  02BC                     l1085:	
   867                           
   868                           ;SPI_PIC.c: 158:     TRISDbits.TRISD1 = 0;
   869  02BC  1088               	bcf	8,1	;volatile
   870  02BD                     l1087:	
   871                           
   872                           ;SPI_PIC.c: 159:     ANSEL = 0;
   873  02BD  1683               	bsf	3,5	;RP0=1, select bank3
   874  02BE  1703               	bsf	3,6	;RP1=1, select bank3
   875  02BF  0188               	clrf	8	;volatile
   876  02C0                     l1089:	
   877                           
   878                           ;SPI_PIC.c: 160:     ANSELH = 0;
   879  02C0  0189               	clrf	9	;volatile
   880  02C1                     l1091:	
   881                           
   882                           ;SPI_PIC.c: 161:     PIE1bits.RCIE = 1;
   883  02C1  1683               	bsf	3,5	;RP0=1, select bank1
   884  02C2  1303               	bcf	3,6	;RP1=0, select bank1
   885  02C3  168C               	bsf	12,5	;volatile
   886  02C4                     l1093:	
   887                           
   888                           ;SPI_PIC.c: 162:     INTCONbits.PEIE = 1;
   889  02C4  170B               	bsf	11,6	;volatile
   890  02C5                     l1095:	
   891                           
   892                           ;SPI_PIC.c: 163:     INTCONbits.GIE = 1;
   893  02C5  178B               	bsf	11,7	;volatile
   894  02C6                     l1097:	
   895                           
   896                           ;SPI_PIC.c: 164:     RASPBERRY = 0;
   897  02C6  01F8               	clrf	_RASPBERRY
   898  02C7                     l1099:	
   899                           
   900                           ;SPI_PIC.c: 165:     S0=0;
   901  02C7  01F7               	clrf	_S0
   902  02C8                     l1101:	
   903                           
   904                           ;SPI_PIC.c: 166:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
   905  02C8  01F3               	clrf	spiInit@sDataSample
   906  02C9  01F4               	clrf	spiInit@sClockIdle
   907  02CA  01F5               	clrf	spiInit@sTransmitEdge
   908  02CB  3024               	movlw	36
   909  02CC  120A  118A  22D2  120A  118A  	fcall	_spiInit
   910  02D1                     l105:	
   911  02D1  0008               	return
   912  02D2                     __end_of_setup:	
   913                           
   914                           	psect	text2
   915  02D2                     __ptext2:	
   916 ;; *************** function _spiInit *****************
   917 ;; Defined at:
   918 ;;		line 12 in file "SPI_SLAVE.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  sType           1    wreg     enum E1264
   921 ;;  sDataSample     1    3[COMMON] enum E1272
   922 ;;  sClockIdle      1    4[COMMON] enum E1276
   923 ;;  sTransmitEdg    1    5[COMMON] enum E1280
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  sType           1    6[COMMON] enum E1264
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, status,2, status,0
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   935 ;;      Params:         3       0       0       0       0
   936 ;;      Locals:         1       0       0       0       0
   937 ;;      Temps:          0       0       0       0       0
   938 ;;      Totals:         4       0       0       0       0
   939 ;;Total ram usage:        4 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    3
   942 ;; This function calls:
   943 ;;		Nothing
   944 ;; This function is called by:
   945 ;;		_setup
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           
   950                           ;psect for function _spiInit
   951  02D2                     _spiInit:	
   952                           
   953                           ;incstack = 0
   954                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   955                           ;spiInit@sType stored from wreg
   956  02D2  00F6               	movwf	spiInit@sType
   957  02D3                     l995:	
   958                           
   959                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5=0;
   960  02D3  1683               	bsf	3,5	;RP0=1, select bank1
   961  02D4  1303               	bcf	3,6	;RP1=0, select bank1
   962  02D5  1287               	bcf	7,5	;volatile
   963                           
   964                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
   965  02D6  1607               	bsf	7,4	;volatile
   966                           
   967                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
   968  02D7  1D76               	btfss	spiInit@sType,2
   969  02D8  2ADA               	goto	u301
   970  02D9  2ADB               	goto	u300
   971  02DA                     u301:	
   972  02DA  2ADF               	goto	l1001
   973  02DB                     u300:	
   974  02DB                     l997:	
   975                           
   976                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
   977  02DB  0875               	movf	spiInit@sTransmitEdge,w
   978  02DC  0094               	movwf	20	;volatile
   979  02DD                     l999:	
   980                           
   981                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
   982  02DD  1587               	bsf	7,3	;volatile
   983                           
   984                           ;SPI_SLAVE.c: 20:     }
   985  02DE  2AE3               	goto	l139
   986  02DF                     l1001:	
   987                           
   988                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   989  02DF  0873               	movf	spiInit@sDataSample,w
   990  02E0  0475               	iorwf	spiInit@sTransmitEdge,w
   991  02E1  0094               	movwf	20	;volatile
   992  02E2                     l1003:	
   993                           
   994                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
   995  02E2  1187               	bcf	7,3	;volatile
   996  02E3                     l139:	
   997                           ;SPI_SLAVE.c: 25:     }
   998                           
   999                           
  1000                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
  1001  02E3  0876               	movf	spiInit@sType,w
  1002  02E4  0474               	iorwf	spiInit@sClockIdle,w
  1003  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1004  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1005  02E7  0094               	movwf	20	;volatile
  1006  02E8                     l140:	
  1007  02E8  0008               	return
  1008  02E9                     __end_of_spiInit:	
  1009                           
  1010                           	psect	text3
  1011  0259                     __ptext3:	
  1012 ;; *************** function _initOsc *****************
  1013 ;; Defined at:
  1014 ;;		line 8 in file "OSCI.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  frec            1    wreg     unsigned char 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  frec            1    5[COMMON] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         1       0       0       0       0
  1030 ;;      Temps:          2       0       0       0       0
  1031 ;;      Totals:         3       0       0       0       0
  1032 ;;Total ram usage:        3 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    3
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _initOsc
  1044  0259                     _initOsc:	
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1048                           ;initOsc@frec stored from wreg
  1049  0259  00F5               	movwf	initOsc@frec
  1050  025A                     l1103:	
  1051                           
  1052                           ;OSCI.c: 9:     switch(frec){
  1053  025A  2A91               	goto	l1107
  1054  025B                     l111:	
  1055                           ;OSCI.c: 10:         case 0:
  1056                           
  1057                           
  1058                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
  1059  025B  1683               	bsf	3,5	;RP0=1, select bank1
  1060  025C  1303               	bcf	3,6	;RP1=0, select bank1
  1061  025D  120F               	bcf	15,4	;volatile
  1062                           
  1063                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
  1064  025E  128F               	bcf	15,5	;volatile
  1065                           
  1066                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
  1067  025F  130F               	bcf	15,6	;volatile
  1068                           
  1069                           ;OSCI.c: 14:             break;
  1070  0260  2AB3               	goto	l112
  1071  0261                     l113:	
  1072                           ;OSCI.c: 15:         case 1:
  1073                           
  1074                           
  1075                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
  1076  0261  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0262  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0263  160F               	bsf	15,4	;volatile
  1079                           
  1080                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
  1081  0264  128F               	bcf	15,5	;volatile
  1082                           
  1083                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
  1084  0265  130F               	bcf	15,6	;volatile
  1085                           
  1086                           ;OSCI.c: 19:             break;
  1087  0266  2AB3               	goto	l112
  1088  0267                     l114:	
  1089                           ;OSCI.c: 20:         case 2:
  1090                           
  1091                           
  1092                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1093  0267  1683               	bsf	3,5	;RP0=1, select bank1
  1094  0268  1303               	bcf	3,6	;RP1=0, select bank1
  1095  0269  120F               	bcf	15,4	;volatile
  1096                           
  1097                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1098  026A  168F               	bsf	15,5	;volatile
  1099                           
  1100                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1101  026B  130F               	bcf	15,6	;volatile
  1102                           
  1103                           ;OSCI.c: 24:             break;
  1104  026C  2AB3               	goto	l112
  1105  026D                     l115:	
  1106                           ;OSCI.c: 25:         case 3:
  1107                           
  1108                           
  1109                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1110  026D  1683               	bsf	3,5	;RP0=1, select bank1
  1111  026E  1303               	bcf	3,6	;RP1=0, select bank1
  1112  026F  160F               	bsf	15,4	;volatile
  1113                           
  1114                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1115  0270  168F               	bsf	15,5	;volatile
  1116                           
  1117                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1118  0271  130F               	bcf	15,6	;volatile
  1119                           
  1120                           ;OSCI.c: 29:             break;
  1121  0272  2AB3               	goto	l112
  1122  0273                     l116:	
  1123                           ;OSCI.c: 30:         case 4:
  1124                           
  1125                           
  1126                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1127  0273  1683               	bsf	3,5	;RP0=1, select bank1
  1128  0274  1303               	bcf	3,6	;RP1=0, select bank1
  1129  0275  120F               	bcf	15,4	;volatile
  1130                           
  1131                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1132  0276  128F               	bcf	15,5	;volatile
  1133                           
  1134                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1135  0277  170F               	bsf	15,6	;volatile
  1136                           
  1137                           ;OSCI.c: 34:             break;
  1138  0278  2AB3               	goto	l112
  1139  0279                     l117:	
  1140                           ;OSCI.c: 35:         case 5:
  1141                           
  1142                           
  1143                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1144  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1145  027A  1303               	bcf	3,6	;RP1=0, select bank1
  1146  027B  160F               	bsf	15,4	;volatile
  1147                           
  1148                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1149  027C  128F               	bcf	15,5	;volatile
  1150                           
  1151                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1152  027D  170F               	bsf	15,6	;volatile
  1153                           
  1154                           ;OSCI.c: 39:             break;
  1155  027E  2AB3               	goto	l112
  1156  027F                     l118:	
  1157                           ;OSCI.c: 40:         case 6:
  1158                           
  1159                           
  1160                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1161  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0281  120F               	bcf	15,4	;volatile
  1164                           
  1165                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1166  0282  168F               	bsf	15,5	;volatile
  1167                           
  1168                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1169  0283  170F               	bsf	15,6	;volatile
  1170                           
  1171                           ;OSCI.c: 44:             break;
  1172  0284  2AB3               	goto	l112
  1173  0285                     l119:	
  1174                           ;OSCI.c: 45:         case 7:
  1175                           
  1176                           
  1177                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1178  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1179  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1180  0287  160F               	bsf	15,4	;volatile
  1181                           
  1182                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1183  0288  168F               	bsf	15,5	;volatile
  1184                           
  1185                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1186  0289  170F               	bsf	15,6	;volatile
  1187                           
  1188                           ;OSCI.c: 49:             break;
  1189  028A  2AB3               	goto	l112
  1190  028B                     l120:	
  1191                           ;OSCI.c: 50:         default:
  1192                           
  1193                           
  1194                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1195  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1196  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1197  028D  120F               	bcf	15,4	;volatile
  1198                           
  1199                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1200  028E  168F               	bsf	15,5	;volatile
  1201                           
  1202                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1203  028F  170F               	bsf	15,6	;volatile
  1204                           
  1205                           ;OSCI.c: 54:             break;
  1206  0290  2AB3               	goto	l112
  1207  0291                     l1107:	
  1208  0291  0875               	movf	initOsc@frec,w
  1209  0292  00F3               	movwf	??_initOsc
  1210  0293  01F4               	clrf	??_initOsc+1
  1211                           
  1212                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1213                           ; Switch size 1, requested type "simple"
  1214                           ; Number of cases is 1, Range of values is 0 to 0
  1215                           ; switch strategies available:
  1216                           ; Name         Instructions Cycles
  1217                           ; simple_byte            4     3 (average)
  1218                           ; direct_byte           11     8 (fixed)
  1219                           ; jumptable            260     6 (fixed)
  1220                           ;	Chosen strategy is simple_byte
  1221  0294  0874               	movf	??_initOsc+1,w
  1222  0295  3A00               	xorlw	0	; case 0
  1223  0296  1903               	skipnz
  1224  0297  2A99               	goto	l1335
  1225  0298  2A8B               	goto	l120
  1226  0299                     l1335:	
  1227                           
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 8, Range of values is 0 to 7
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte           25    13 (average)
  1233                           ; direct_byte           32     8 (fixed)
  1234                           ; jumptable            260     6 (fixed)
  1235                           ;	Chosen strategy is simple_byte
  1236  0299  0873               	movf	??_initOsc,w
  1237  029A  3A00               	xorlw	0	; case 0
  1238  029B  1903               	skipnz
  1239  029C  2A5B               	goto	l111
  1240  029D  3A01               	xorlw	1	; case 1
  1241  029E  1903               	skipnz
  1242  029F  2A61               	goto	l113
  1243  02A0  3A03               	xorlw	3	; case 2
  1244  02A1  1903               	skipnz
  1245  02A2  2A67               	goto	l114
  1246  02A3  3A01               	xorlw	1	; case 3
  1247  02A4  1903               	skipnz
  1248  02A5  2A6D               	goto	l115
  1249  02A6  3A07               	xorlw	7	; case 4
  1250  02A7  1903               	skipnz
  1251  02A8  2A73               	goto	l116
  1252  02A9  3A01               	xorlw	1	; case 5
  1253  02AA  1903               	skipnz
  1254  02AB  2A79               	goto	l117
  1255  02AC  3A03               	xorlw	3	; case 6
  1256  02AD  1903               	skipnz
  1257  02AE  2A7F               	goto	l118
  1258  02AF  3A01               	xorlw	1	; case 7
  1259  02B0  1903               	skipnz
  1260  02B1  2A85               	goto	l119
  1261  02B2  2A8B               	goto	l120
  1262  02B3                     l112:	
  1263                           
  1264                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1265  02B3  140F               	bsf	15,0	;volatile
  1266  02B4                     l121:	
  1267  02B4  0008               	return
  1268  02B5                     __end_of_initOsc:	
  1269                           
  1270                           	psect	text4
  1271  02E9                     __ptext4:	
  1272 ;; *************** function _UART_WRITE *****************
  1273 ;; Defined at:
  1274 ;;		line 31 in file "UART.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  data            1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  data            1    3[COMMON] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         1       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0
  1291 ;;      Totals:         1       0       0       0       0
  1292 ;;Total ram usage:        1 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           
  1303                           ;psect for function _UART_WRITE
  1304  02E9                     _UART_WRITE:	
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _UART_WRITE: [wreg]
  1308                           ;UART_WRITE@data stored from wreg
  1309  02E9  00F3               	movwf	UART_WRITE@data
  1310  02EA                     l1069:	
  1311  02EA                     l22:	
  1312                           ;UART.c: 32:   while(!TXSTAbits.TRMT);
  1313                           
  1314  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  1315  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  1316  02EC  1C98               	btfss	24,1	;volatile
  1317  02ED  2AEF               	goto	u461
  1318  02EE  2AF0               	goto	u460
  1319  02EF                     u461:	
  1320  02EF  2AEA               	goto	l22
  1321  02F0                     u460:	
  1322  02F0                     l1071:	
  1323                           
  1324                           ;UART.c: 33:   TXREG = data;
  1325  02F0  0873               	movf	UART_WRITE@data,w
  1326  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1327  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1328  02F3  0099               	movwf	25	;volatile
  1329  02F4                     l25:	
  1330  02F4  0008               	return
  1331  02F5                     __end_of_UART_WRITE:	
  1332                           
  1333                           	psect	text5
  1334  01F4                     __ptext5:	
  1335 ;; *************** function _UART_INIT *****************
  1336 ;; Defined at:
  1337 ;;		line 6 in file "UART.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  baudrate        4   14[BANK0 ] const long 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      unsigned char 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       4       0       0       0
  1352 ;;      Locals:         0       0       0       0       0
  1353 ;;      Temps:          0      12       0       0       0
  1354 ;;      Totals:         0      16       0       0       0
  1355 ;;Total ram usage:       16 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    4
  1358 ;; This function calls:
  1359 ;;		___aldiv
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _UART_INIT
  1367  01F4                     _UART_INIT:	
  1368  01F4                     l1273:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1371                           
  1372                           
  1373                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1374  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1375  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1376  01F6  082E               	movf	UART_INIT@baudrate,w
  1377  01F7  00B2               	movwf	??_UART_INIT
  1378  01F8  082F               	movf	UART_INIT@baudrate+1,w
  1379  01F9  00B3               	movwf	??_UART_INIT+1
  1380  01FA  0830               	movf	UART_INIT@baudrate+2,w
  1381  01FB  00B4               	movwf	??_UART_INIT+2
  1382  01FC  0831               	movf	UART_INIT@baudrate+3,w
  1383  01FD  00B5               	movwf	??_UART_INIT+3
  1384  01FE  3004               	movlw	4
  1385  01FF                     u695:	
  1386  01FF  1003               	clrc
  1387  0200  0DB2               	rlf	??_UART_INIT,f
  1388  0201  0DB3               	rlf	??_UART_INIT+1,f
  1389  0202  0DB4               	rlf	??_UART_INIT+2,f
  1390  0203  0DB5               	rlf	??_UART_INIT+3,f
  1391  0204                     u690:	
  1392  0204  3EFF               	addlw	-1
  1393  0205  1D03               	skipz
  1394  0206  29FF               	goto	u695
  1395  0207  0835               	movf	??_UART_INIT+3,w
  1396  0208  00A3               	movwf	___aldiv@divisor+3
  1397  0209  0834               	movf	??_UART_INIT+2,w
  1398  020A  00A2               	movwf	___aldiv@divisor+2
  1399  020B  0833               	movf	??_UART_INIT+1,w
  1400  020C  00A1               	movwf	___aldiv@divisor+1
  1401  020D  0832               	movf	??_UART_INIT,w
  1402  020E  00A0               	movwf	___aldiv@divisor
  1403  020F  082E               	movf	UART_INIT@baudrate,w
  1404  0210  00B6               	movwf	??_UART_INIT+4
  1405  0211  082F               	movf	UART_INIT@baudrate+1,w
  1406  0212  00B7               	movwf	??_UART_INIT+5
  1407  0213  0830               	movf	UART_INIT@baudrate+2,w
  1408  0214  00B8               	movwf	??_UART_INIT+6
  1409  0215  0831               	movf	UART_INIT@baudrate+3,w
  1410  0216  00B9               	movwf	??_UART_INIT+7
  1411  0217  3004               	movlw	4
  1412  0218                     u705:	
  1413  0218  1003               	clrc
  1414  0219  0DB6               	rlf	??_UART_INIT+4,f
  1415  021A  0DB7               	rlf	??_UART_INIT+5,f
  1416  021B  0DB8               	rlf	??_UART_INIT+6,f
  1417  021C  0DB9               	rlf	??_UART_INIT+7,f
  1418  021D                     u700:	
  1419  021D  3EFF               	addlw	-1
  1420  021E  1D03               	skipz
  1421  021F  2A18               	goto	u705
  1422  0220  3000               	movlw	0
  1423  0221  00BA               	movwf	??_UART_INIT+8
  1424  0222  3012               	movlw	18
  1425  0223  00BB               	movwf	??_UART_INIT+9
  1426  0224  307A               	movlw	122
  1427  0225  00BC               	movwf	??_UART_INIT+10
  1428  0226  3000               	movlw	0
  1429  0227  00BD               	movwf	??_UART_INIT+11
  1430  0228  0836               	movf	??_UART_INIT+4,w
  1431  0229  02BA               	subwf	??_UART_INIT+8,f
  1432  022A  0837               	movf	??_UART_INIT+5,w
  1433  022B  1C03               	skipc
  1434  022C  0F37               	incfsz	??_UART_INIT+5,w
  1435  022D  2A2F               	goto	u711
  1436  022E  2A30               	goto	u712
  1437  022F                     u711:	
  1438  022F  02BB               	subwf	??_UART_INIT+9,f
  1439  0230                     u712:	
  1440  0230  0838               	movf	??_UART_INIT+6,w
  1441  0231  1C03               	skipc
  1442  0232  0F38               	incfsz	??_UART_INIT+6,w
  1443  0233  2A35               	goto	u713
  1444  0234  2A36               	goto	u714
  1445  0235                     u713:	
  1446  0235  02BC               	subwf	??_UART_INIT+10,f
  1447  0236                     u714:	
  1448  0236  0839               	movf	??_UART_INIT+7,w
  1449  0237  1C03               	skipc
  1450  0238  0F39               	incfsz	??_UART_INIT+7,w
  1451  0239  2A3B               	goto	u715
  1452  023A  2A3C               	goto	u716
  1453  023B                     u715:	
  1454  023B  02BD               	subwf	??_UART_INIT+11,f
  1455  023C                     u716:	
  1456  023C  083D               	movf	??_UART_INIT+11,w
  1457  023D  00A7               	movwf	___aldiv@dividend+3
  1458  023E  083C               	movf	??_UART_INIT+10,w
  1459  023F  00A6               	movwf	___aldiv@dividend+2
  1460  0240  083B               	movf	??_UART_INIT+9,w
  1461  0241  00A5               	movwf	___aldiv@dividend+1
  1462  0242  083A               	movf	??_UART_INIT+8,w
  1463  0243  00A4               	movwf	___aldiv@dividend
  1464  0244  120A  118A  20E1  120A  118A  	fcall	___aldiv
  1465  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1466  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1467  024B  0820               	movf	?___aldiv,w
  1468  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1469  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1470  024E  0099               	movwf	25	;volatile
  1471  024F                     l1275:	
  1472                           
  1473                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  1474  024F  1518               	bsf	24,2	;volatile
  1475  0250                     l1277:	
  1476                           
  1477                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  1478  0250  1698               	bsf	24,5	;volatile
  1479  0251                     l1279:	
  1480                           
  1481                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  1482  0251  1218               	bcf	24,4	;volatile
  1483  0252                     l1281:	
  1484                           
  1485                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1486  0252  1318               	bcf	24,6	;volatile
  1487  0253                     l1283:	
  1488                           
  1489                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  1490  0253  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0254  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0255  1618               	bsf	24,4	;volatile
  1493  0256                     l1285:	
  1494                           
  1495                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  1496  0256  1798               	bsf	24,7	;volatile
  1497  0257                     l1287:	
  1498                           
  1499                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  1500  0257  1318               	bcf	24,6	;volatile
  1501  0258                     l15:	
  1502  0258  0008               	return
  1503  0259                     __end_of_UART_INIT:	
  1504                           
  1505                           	psect	text6
  1506  00E1                     __ptext6:	
  1507 ;; *************** function ___aldiv *****************
  1508 ;; Defined at:
  1509 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  divisor         4    0[BANK0 ] long 
  1512 ;;  dividend        4    4[BANK0 ] long 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  quotient        4   10[BANK0 ] long 
  1515 ;;  sign            1    9[BANK0 ] unsigned char 
  1516 ;;  counter         1    8[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  4    0[BANK0 ] long 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       8       0       0       0
  1527 ;;      Locals:         0       6       0       0       0
  1528 ;;      Temps:          1       0       0       0       0
  1529 ;;      Totals:         1      14       0       0       0
  1530 ;;Total ram usage:       15 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_UART_INIT
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function ___aldiv
  1542  00E1                     ___aldiv:	
  1543  00E1                     l1233:	
  1544                           ;incstack = 0
  1545                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1546                           
  1547  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1548  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1549  00E3  01A9               	clrf	___aldiv@sign
  1550  00E4                     l1235:	
  1551  00E4  1FA3               	btfss	___aldiv@divisor+3,7
  1552  00E5  28E7               	goto	u591
  1553  00E6  28E8               	goto	u590
  1554  00E7                     u591:	
  1555  00E7  28F5               	goto	l308
  1556  00E8                     u590:	
  1557  00E8                     l1237:	
  1558  00E8  09A0               	comf	___aldiv@divisor,f
  1559  00E9  09A1               	comf	___aldiv@divisor+1,f
  1560  00EA  09A2               	comf	___aldiv@divisor+2,f
  1561  00EB  09A3               	comf	___aldiv@divisor+3,f
  1562  00EC  0AA0               	incf	___aldiv@divisor,f
  1563  00ED  1903               	skipnz
  1564  00EE  0AA1               	incf	___aldiv@divisor+1,f
  1565  00EF  1903               	skipnz
  1566  00F0  0AA2               	incf	___aldiv@divisor+2,f
  1567  00F1  1903               	skipnz
  1568  00F2  0AA3               	incf	___aldiv@divisor+3,f
  1569  00F3  01A9               	clrf	___aldiv@sign
  1570  00F4  0AA9               	incf	___aldiv@sign,f
  1571  00F5                     l308:	
  1572  00F5  1FA7               	btfss	___aldiv@dividend+3,7
  1573  00F6  28F8               	goto	u601
  1574  00F7  28F9               	goto	u600
  1575  00F8                     u601:	
  1576  00F8  2908               	goto	l1243
  1577  00F9                     u600:	
  1578  00F9                     l1239:	
  1579  00F9  09A4               	comf	___aldiv@dividend,f
  1580  00FA  09A5               	comf	___aldiv@dividend+1,f
  1581  00FB  09A6               	comf	___aldiv@dividend+2,f
  1582  00FC  09A7               	comf	___aldiv@dividend+3,f
  1583  00FD  0AA4               	incf	___aldiv@dividend,f
  1584  00FE  1903               	skipnz
  1585  00FF  0AA5               	incf	___aldiv@dividend+1,f
  1586  0100  1903               	skipnz
  1587  0101  0AA6               	incf	___aldiv@dividend+2,f
  1588  0102  1903               	skipnz
  1589  0103  0AA7               	incf	___aldiv@dividend+3,f
  1590  0104                     l1241:	
  1591  0104  3001               	movlw	1
  1592  0105  00F3               	movwf	??___aldiv
  1593  0106  0873               	movf	??___aldiv,w
  1594  0107  06A9               	xorwf	___aldiv@sign,f
  1595  0108                     l1243:	
  1596  0108  3000               	movlw	0
  1597  0109  00AD               	movwf	___aldiv@quotient+3
  1598  010A  3000               	movlw	0
  1599  010B  00AC               	movwf	___aldiv@quotient+2
  1600  010C  3000               	movlw	0
  1601  010D  00AB               	movwf	___aldiv@quotient+1
  1602  010E  3000               	movlw	0
  1603  010F  00AA               	movwf	___aldiv@quotient
  1604  0110                     l1245:	
  1605  0110  0823               	movf	___aldiv@divisor+3,w
  1606  0111  0422               	iorwf	___aldiv@divisor+2,w
  1607  0112  0421               	iorwf	___aldiv@divisor+1,w
  1608  0113  0420               	iorwf	___aldiv@divisor,w
  1609  0114  1903               	skipnz
  1610  0115  2917               	goto	u611
  1611  0116  2918               	goto	u610
  1612  0117                     u611:	
  1613  0117  2965               	goto	l1265
  1614  0118                     u610:	
  1615  0118                     l1247:	
  1616  0118  01A8               	clrf	___aldiv@counter
  1617  0119  0AA8               	incf	___aldiv@counter,f
  1618  011A  2928               	goto	l1251
  1619  011B                     l1249:	
  1620  011B  3001               	movlw	1
  1621  011C  00F3               	movwf	??___aldiv
  1622  011D                     u625:	
  1623  011D  1003               	clrc
  1624  011E  0DA0               	rlf	___aldiv@divisor,f
  1625  011F  0DA1               	rlf	___aldiv@divisor+1,f
  1626  0120  0DA2               	rlf	___aldiv@divisor+2,f
  1627  0121  0DA3               	rlf	___aldiv@divisor+3,f
  1628  0122  0BF3               	decfsz	??___aldiv,f
  1629  0123  291D               	goto	u625
  1630  0124  3001               	movlw	1
  1631  0125  00F3               	movwf	??___aldiv
  1632  0126  0873               	movf	??___aldiv,w
  1633  0127  07A8               	addwf	___aldiv@counter,f
  1634  0128                     l1251:	
  1635  0128  1FA3               	btfss	___aldiv@divisor+3,7
  1636  0129  292B               	goto	u631
  1637  012A  292C               	goto	u630
  1638  012B                     u631:	
  1639  012B  291B               	goto	l1249
  1640  012C                     u630:	
  1641  012C                     l1253:	
  1642  012C  3001               	movlw	1
  1643  012D  00F3               	movwf	??___aldiv
  1644  012E                     u645:	
  1645  012E  1003               	clrc
  1646  012F  0DAA               	rlf	___aldiv@quotient,f
  1647  0130  0DAB               	rlf	___aldiv@quotient+1,f
  1648  0131  0DAC               	rlf	___aldiv@quotient+2,f
  1649  0132  0DAD               	rlf	___aldiv@quotient+3,f
  1650  0133  0BF3               	decfsz	??___aldiv,f
  1651  0134  292E               	goto	u645
  1652  0135                     l1255:	
  1653  0135  0823               	movf	___aldiv@divisor+3,w
  1654  0136  0227               	subwf	___aldiv@dividend+3,w
  1655  0137  1D03               	skipz
  1656  0138  2943               	goto	u655
  1657  0139  0822               	movf	___aldiv@divisor+2,w
  1658  013A  0226               	subwf	___aldiv@dividend+2,w
  1659  013B  1D03               	skipz
  1660  013C  2943               	goto	u655
  1661  013D  0821               	movf	___aldiv@divisor+1,w
  1662  013E  0225               	subwf	___aldiv@dividend+1,w
  1663  013F  1D03               	skipz
  1664  0140  2943               	goto	u655
  1665  0141  0820               	movf	___aldiv@divisor,w
  1666  0142  0224               	subwf	___aldiv@dividend,w
  1667  0143                     u655:	
  1668  0143  1C03               	skipc
  1669  0144  2946               	goto	u651
  1670  0145  2947               	goto	u650
  1671  0146                     u651:	
  1672  0146  2956               	goto	l1261
  1673  0147                     u650:	
  1674  0147                     l1257:	
  1675  0147  0820               	movf	___aldiv@divisor,w
  1676  0148  02A4               	subwf	___aldiv@dividend,f
  1677  0149  0821               	movf	___aldiv@divisor+1,w
  1678  014A  1C03               	skipc
  1679  014B  0F21               	incfsz	___aldiv@divisor+1,w
  1680  014C  02A5               	subwf	___aldiv@dividend+1,f
  1681  014D  0822               	movf	___aldiv@divisor+2,w
  1682  014E  1C03               	skipc
  1683  014F  0F22               	incfsz	___aldiv@divisor+2,w
  1684  0150  02A6               	subwf	___aldiv@dividend+2,f
  1685  0151  0823               	movf	___aldiv@divisor+3,w
  1686  0152  1C03               	skipc
  1687  0153  0F23               	incfsz	___aldiv@divisor+3,w
  1688  0154  02A7               	subwf	___aldiv@dividend+3,f
  1689  0155                     l1259:	
  1690  0155  142A               	bsf	___aldiv@quotient,0
  1691  0156                     l1261:	
  1692  0156  3001               	movlw	1
  1693  0157                     u665:	
  1694  0157  1003               	clrc
  1695  0158  0CA3               	rrf	___aldiv@divisor+3,f
  1696  0159  0CA2               	rrf	___aldiv@divisor+2,f
  1697  015A  0CA1               	rrf	___aldiv@divisor+1,f
  1698  015B  0CA0               	rrf	___aldiv@divisor,f
  1699  015C  3EFF               	addlw	-1
  1700  015D  1D03               	skipz
  1701  015E  2957               	goto	u665
  1702  015F                     l1263:	
  1703  015F  3001               	movlw	1
  1704  0160  02A8               	subwf	___aldiv@counter,f
  1705  0161  1D03               	btfss	3,2
  1706  0162  2964               	goto	u671
  1707  0163  2965               	goto	u670
  1708  0164                     u671:	
  1709  0164  292C               	goto	l1253
  1710  0165                     u670:	
  1711  0165                     l1265:	
  1712  0165  0829               	movf	___aldiv@sign,w
  1713  0166  1903               	btfsc	3,2
  1714  0167  2969               	goto	u681
  1715  0168  296A               	goto	u680
  1716  0169                     u681:	
  1717  0169  2975               	goto	l1269
  1718  016A                     u680:	
  1719  016A                     l1267:	
  1720  016A  09AA               	comf	___aldiv@quotient,f
  1721  016B  09AB               	comf	___aldiv@quotient+1,f
  1722  016C  09AC               	comf	___aldiv@quotient+2,f
  1723  016D  09AD               	comf	___aldiv@quotient+3,f
  1724  016E  0AAA               	incf	___aldiv@quotient,f
  1725  016F  1903               	skipnz
  1726  0170  0AAB               	incf	___aldiv@quotient+1,f
  1727  0171  1903               	skipnz
  1728  0172  0AAC               	incf	___aldiv@quotient+2,f
  1729  0173  1903               	skipnz
  1730  0174  0AAD               	incf	___aldiv@quotient+3,f
  1731  0175                     l1269:	
  1732  0175  082D               	movf	___aldiv@quotient+3,w
  1733  0176  00A3               	movwf	?___aldiv+3
  1734  0177  082C               	movf	___aldiv@quotient+2,w
  1735  0178  00A2               	movwf	?___aldiv+2
  1736  0179  082B               	movf	___aldiv@quotient+1,w
  1737  017A  00A1               	movwf	?___aldiv+1
  1738  017B  082A               	movf	___aldiv@quotient,w
  1739  017C  00A0               	movwf	?___aldiv
  1740  017D                     l318:	
  1741  017D  0008               	return
  1742  017E                     __end_of___aldiv:	
  1743                           
  1744                           	psect	text7
  1745  001C                     __ptext7:	
  1746 ;; *************** function _ISR *****************
  1747 ;; Defined at:
  1748 ;;		line 57 in file "SPI_PIC.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;		None
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0, pclath, cstack
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0
  1764 ;;      Temps:          3       0       0       0       0
  1765 ;;      Totals:         3       0       0       0       0
  1766 ;;Total ram usage:        3 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    2
  1769 ;; This function calls:
  1770 ;;		_UART_READ
  1771 ;;		_spiRead
  1772 ;; This function is called by:
  1773 ;;		Interrupt level 1
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _ISR
  1779  001C                     _ISR:	
  1780  001C                     i1l1113:	
  1781                           
  1782                           ;SPI_PIC.c: 59:     if(PIR1bits.SSPIF==1){
  1783  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1784  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1785  001E  1D8C               	btfss	12,3	;volatile
  1786  001F  2821               	goto	u47_21
  1787  0020  2822               	goto	u47_20
  1788  0021                     u47_21:	
  1789  0021  2870               	goto	i1l82
  1790  0022                     u47_20:	
  1791  0022                     i1l1115:	
  1792                           
  1793                           ;SPI_PIC.c: 60:         RASPBERRY = spiRead();
  1794  0022  120A  118A  22F5  120A  118A  	fcall	_spiRead
  1795  0027  00F0               	movwf	??_ISR
  1796  0028  0870               	movf	??_ISR,w
  1797  0029  00F8               	movwf	_RASPBERRY
  1798  002A                     i1l1117:	
  1799                           
  1800                           ;SPI_PIC.c: 62:         if(RASPBERRY == 0){
  1801  002A  0878               	movf	_RASPBERRY,w
  1802  002B  1D03               	btfss	3,2
  1803  002C  282E               	goto	u48_21
  1804  002D  282F               	goto	u48_20
  1805  002E                     u48_21:	
  1806  002E  2836               	goto	i1l1121
  1807  002F                     u48_20:	
  1808  002F                     i1l1119:	
  1809                           
  1810                           ;SPI_PIC.c: 63:           SSPSTATbits.BF= 0;
  1811  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1812  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1813  0031  1014               	bcf	20,0	;volatile
  1814                           
  1815                           ;SPI_PIC.c: 64:           PIR1bits.SSPIF = 0;
  1816  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0034  118C               	bcf	12,3	;volatile
  1819                           
  1820                           ;SPI_PIC.c: 65:           return;
  1821  0035  28DA               	goto	i1l84
  1822  0036                     i1l1121:	
  1823                           
  1824                           ;SPI_PIC.c: 67:         if(RASPBERRY == 1){
  1825  0036  0378               	decf	_RASPBERRY,w
  1826  0037  1D03               	btfss	3,2
  1827  0038  283A               	goto	u49_21
  1828  0039  283B               	goto	u49_20
  1829  003A                     u49_21:	
  1830  003A  2842               	goto	i1l1125
  1831  003B                     u49_20:	
  1832  003B                     i1l1123:	
  1833                           
  1834                           ;SPI_PIC.c: 68:             SSPSTATbits.BF= 0;
  1835  003B  1683               	bsf	3,5	;RP0=1, select bank1
  1836  003C  1303               	bcf	3,6	;RP1=0, select bank1
  1837  003D  1014               	bcf	20,0	;volatile
  1838                           
  1839                           ;SPI_PIC.c: 69:           PIR1bits.SSPIF = 0;
  1840  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1841  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0040  118C               	bcf	12,3	;volatile
  1843                           
  1844                           ;SPI_PIC.c: 70:           return;
  1845  0041  28DA               	goto	i1l84
  1846  0042                     i1l1125:	
  1847                           
  1848                           ;SPI_PIC.c: 72:         if(RASPBERRY == 2){
  1849  0042  3002               	movlw	2
  1850  0043  0678               	xorwf	_RASPBERRY,w
  1851  0044  1D03               	btfss	3,2
  1852  0045  2847               	goto	u50_21
  1853  0046  2848               	goto	u50_20
  1854  0047                     u50_21:	
  1855  0047  284F               	goto	i1l1129
  1856  0048                     u50_20:	
  1857  0048                     i1l1127:	
  1858                           
  1859                           ;SPI_PIC.c: 73:             SSPSTATbits.BF= 0;
  1860  0048  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0049  1303               	bcf	3,6	;RP1=0, select bank1
  1862  004A  1014               	bcf	20,0	;volatile
  1863                           
  1864                           ;SPI_PIC.c: 74:           PIR1bits.SSPIF = 0;
  1865  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1866  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1867  004D  118C               	bcf	12,3	;volatile
  1868                           
  1869                           ;SPI_PIC.c: 75:           return;
  1870  004E  28DA               	goto	i1l84
  1871  004F                     i1l1129:	
  1872                           
  1873                           ;SPI_PIC.c: 77:         if(RASPBERRY == 3){
  1874  004F  3003               	movlw	3
  1875  0050  0678               	xorwf	_RASPBERRY,w
  1876  0051  1D03               	btfss	3,2
  1877  0052  2854               	goto	u51_21
  1878  0053  2855               	goto	u51_20
  1879  0054                     u51_21:	
  1880  0054  285C               	goto	i1l1133
  1881  0055                     u51_20:	
  1882  0055                     i1l1131:	
  1883                           
  1884                           ;SPI_PIC.c: 78:             SSPSTATbits.BF= 0;
  1885  0055  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0056  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0057  1014               	bcf	20,0	;volatile
  1888                           
  1889                           ;SPI_PIC.c: 79:           PIR1bits.SSPIF = 0;
  1890  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1891  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1892  005A  118C               	bcf	12,3	;volatile
  1893                           
  1894                           ;SPI_PIC.c: 80:           return;
  1895  005B  28DA               	goto	i1l84
  1896  005C                     i1l1133:	
  1897                           
  1898                           ;SPI_PIC.c: 82:         if(RASPBERRY == 4){
  1899  005C  3004               	movlw	4
  1900  005D  0678               	xorwf	_RASPBERRY,w
  1901  005E  1D03               	btfss	3,2
  1902  005F  2861               	goto	u52_21
  1903  0060  2862               	goto	u52_20
  1904  0061                     u52_21:	
  1905  0061  2869               	goto	i1l88
  1906  0062                     u52_20:	
  1907  0062                     i1l1135:	
  1908                           
  1909                           ;SPI_PIC.c: 83:            SSPSTATbits.BF= 0;
  1910  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0064  1014               	bcf	20,0	;volatile
  1913                           
  1914                           ;SPI_PIC.c: 84:           PIR1bits.SSPIF = 0;
  1915  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0067  118C               	bcf	12,3	;volatile
  1918                           
  1919                           ;SPI_PIC.c: 85:           return;
  1920  0068  28DA               	goto	i1l84
  1921  0069                     i1l88:	
  1922                           ;SPI_PIC.c: 86:         }
  1923                           
  1924                           
  1925                           ;SPI_PIC.c: 88:           SSPSTATbits.BF= 0;
  1926  0069  1683               	bsf	3,5	;RP0=1, select bank1
  1927  006A  1303               	bcf	3,6	;RP1=0, select bank1
  1928  006B  1014               	bcf	20,0	;volatile
  1929                           
  1930                           ;SPI_PIC.c: 89:           PIR1bits.SSPIF = 0;
  1931  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1932  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1933  006E  118C               	bcf	12,3	;volatile
  1934                           
  1935                           ;SPI_PIC.c: 93:            return;
  1936  006F  28DA               	goto	i1l84
  1937  0070                     i1l82:	
  1938                           ;SPI_PIC.c: 94:     }
  1939                           
  1940                           
  1941                           ;SPI_PIC.c: 95:     if(PIR1bits.RCIF == 1){
  1942  0070  1E8C               	btfss	12,5	;volatile
  1943  0071  2873               	goto	u53_21
  1944  0072  2874               	goto	u53_20
  1945  0073                     u53_21:	
  1946  0073  28DA               	goto	i1l84
  1947  0074                     u53_20:	
  1948  0074                     i1l1137:	
  1949                           
  1950                           ;SPI_PIC.c: 96:         if(S0 == 0){
  1951  0074  0877               	movf	_S0,w
  1952  0075  1D03               	btfss	3,2
  1953  0076  2878               	goto	u54_21
  1954  0077  2879               	goto	u54_20
  1955  0078                     u54_21:	
  1956  0078  2887               	goto	i1l1147
  1957  0079                     u54_20:	
  1958  0079                     i1l1139:	
  1959                           
  1960                           ;SPI_PIC.c: 97:         Luz= UART_READ();
  1961  0079  120A  118A  22FE  120A  118A  	fcall	_UART_READ
  1962  007E  00F0               	movwf	??_ISR
  1963  007F  0870               	movf	??_ISR,w
  1964  0080  00F9               	movwf	_Luz
  1965  0081                     i1l1141:	
  1966                           
  1967                           ;SPI_PIC.c: 98:         PIR1bits.RCIF = 0;
  1968  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0083  128C               	bcf	12,5	;volatile
  1971  0084                     i1l1143:	
  1972                           
  1973                           ;SPI_PIC.c: 99:         S0=1;
  1974  0084  01F7               	clrf	_S0
  1975  0085  0AF7               	incf	_S0,f
  1976  0086  28DA               	goto	i1l84
  1977  0087                     i1l1147:	
  1978                           
  1979                           ;SPI_PIC.c: 102:          if(S0 == 1){
  1980  0087  0377               	decf	_S0,w
  1981  0088  1D03               	btfss	3,2
  1982  0089  288B               	goto	u55_21
  1983  008A  288C               	goto	u55_20
  1984  008B                     u55_21:	
  1985  008B  289C               	goto	i1l1157
  1986  008C                     u55_20:	
  1987  008C                     i1l1149:	
  1988                           
  1989                           ;SPI_PIC.c: 103:         Temp= UART_READ();
  1990  008C  120A  118A  22FE  120A  118A  	fcall	_UART_READ
  1991  0091  00F0               	movwf	??_ISR
  1992  0092  0870               	movf	??_ISR,w
  1993  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0095  00C3               	movwf	_Temp
  1996  0096                     i1l1151:	
  1997                           
  1998                           ;SPI_PIC.c: 104:         PIR1bits.RCIF = 0;
  1999  0096  128C               	bcf	12,5	;volatile
  2000  0097                     i1l1153:	
  2001                           
  2002                           ;SPI_PIC.c: 105:         S0=2;
  2003  0097  3002               	movlw	2
  2004  0098  00F0               	movwf	??_ISR
  2005  0099  0870               	movf	??_ISR,w
  2006  009A  00F7               	movwf	_S0
  2007  009B  28DA               	goto	i1l84
  2008  009C                     i1l1157:	
  2009                           
  2010                           ;SPI_PIC.c: 108:          if(S0 == 2){
  2011  009C  3002               	movlw	2
  2012  009D  0677               	xorwf	_S0,w
  2013  009E  1D03               	btfss	3,2
  2014  009F  28A1               	goto	u56_21
  2015  00A0  28A2               	goto	u56_20
  2016  00A1                     u56_21:	
  2017  00A1  28B2               	goto	i1l1167
  2018  00A2                     u56_20:	
  2019  00A2                     i1l1159:	
  2020                           
  2021                           ;SPI_PIC.c: 109:         Parq = UART_READ();
  2022  00A2  120A  118A  22FE  120A  118A  	fcall	_UART_READ
  2023  00A7  00F0               	movwf	??_ISR
  2024  00A8  0870               	movf	??_ISR,w
  2025  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  2026  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  2027  00AB  00C2               	movwf	_Parq
  2028  00AC                     i1l1161:	
  2029                           
  2030                           ;SPI_PIC.c: 110:         PIR1bits.RCIF = 0;
  2031  00AC  128C               	bcf	12,5	;volatile
  2032  00AD                     i1l1163:	
  2033                           
  2034                           ;SPI_PIC.c: 111:         S0=3;
  2035  00AD  3003               	movlw	3
  2036  00AE  00F0               	movwf	??_ISR
  2037  00AF  0870               	movf	??_ISR,w
  2038  00B0  00F7               	movwf	_S0
  2039  00B1  28DA               	goto	i1l84
  2040  00B2                     i1l1167:	
  2041                           
  2042                           ;SPI_PIC.c: 114:          if(S0 == 3){
  2043  00B2  3003               	movlw	3
  2044  00B3  0677               	xorwf	_S0,w
  2045  00B4  1D03               	btfss	3,2
  2046  00B5  28B7               	goto	u57_21
  2047  00B6  28B8               	goto	u57_20
  2048  00B7                     u57_21:	
  2049  00B7  28C8               	goto	i1l1177
  2050  00B8                     u57_20:	
  2051  00B8                     i1l1169:	
  2052                           
  2053                           ;SPI_PIC.c: 115:         ULTRA= UART_READ();
  2054  00B8  120A  118A  22FE  120A  118A  	fcall	_UART_READ
  2055  00BD  00F0               	movwf	??_ISR
  2056  00BE  0870               	movf	??_ISR,w
  2057  00BF  1283               	bcf	3,5	;RP0=0, select bank0
  2058  00C0  1303               	bcf	3,6	;RP1=0, select bank0
  2059  00C1  00C1               	movwf	_ULTRA
  2060  00C2                     i1l1171:	
  2061                           
  2062                           ;SPI_PIC.c: 116:         PIR1bits.RCIF = 0;
  2063  00C2  128C               	bcf	12,5	;volatile
  2064  00C3                     i1l1173:	
  2065                           
  2066                           ;SPI_PIC.c: 117:         S0=4;
  2067  00C3  3004               	movlw	4
  2068  00C4  00F0               	movwf	??_ISR
  2069  00C5  0870               	movf	??_ISR,w
  2070  00C6  00F7               	movwf	_S0
  2071  00C7  28DA               	goto	i1l84
  2072  00C8                     i1l1177:	
  2073                           
  2074                           ;SPI_PIC.c: 120:          if(S0 == 4){
  2075  00C8  3004               	movlw	4
  2076  00C9  0677               	xorwf	_S0,w
  2077  00CA  1D03               	btfss	3,2
  2078  00CB  28CD               	goto	u58_21
  2079  00CC  28CE               	goto	u58_20
  2080  00CD                     u58_21:	
  2081  00CD  28DA               	goto	i1l84
  2082  00CE                     u58_20:	
  2083  00CE                     i1l1179:	
  2084                           
  2085                           ;SPI_PIC.c: 121:         Presion= UART_READ();
  2086  00CE  120A  118A  22FE  120A  118A  	fcall	_UART_READ
  2087  00D3  00F0               	movwf	??_ISR
  2088  00D4  0870               	movf	??_ISR,w
  2089  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  2090  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  2091  00D7  00C0               	movwf	_Presion
  2092  00D8                     i1l1181:	
  2093                           
  2094                           ;SPI_PIC.c: 122:         PIR1bits.RCIF = 0;
  2095  00D8  128C               	bcf	12,5	;volatile
  2096  00D9                     i1l1183:	
  2097                           
  2098                           ;SPI_PIC.c: 123:         S0 = 0;
  2099  00D9  01F7               	clrf	_S0
  2100  00DA                     i1l84:	
  2101  00DA  0872               	movf	??_ISR+2,w
  2102  00DB  008A               	movwf	10
  2103  00DC  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  2104  00DD  0083               	movwf	3
  2105  00DE  0EFE               	swapf	btemp,f
  2106  00DF  0E7E               	swapf	btemp,w
  2107  00E0  0009               	retfie
  2108  00E1                     __end_of_ISR:	
  2109                           
  2110                           	psect	intentry
  2111  0004                     __pintentry:	
  2112                           ;incstack = 0
  2113                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2114                           
  2115  0004                     interrupt_function:	
  2116  007E                     saved_w	set	btemp
  2117  0004  00FE               	movwf	btemp
  2118  0005  0E03               	swapf	3,w
  2119  0006  00F1               	movwf	??_ISR+1
  2120  0007  080A               	movf	10,w
  2121  0008  00F2               	movwf	??_ISR+2
  2122  0009  120A  118A  281C   	ljmp	_ISR
  2123                           
  2124                           	psect	text8
  2125  02F5                     __ptext8:	
  2126 ;; *************** function _spiRead *****************
  2127 ;; Defined at:
  2128 ;;		line 48 in file "SPI_SLAVE.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      unsigned char 
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0, pclath, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0
  2145 ;;      Totals:         0       0       0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    1
  2149 ;; This function calls:
  2150 ;;		_spiReceiveWait
  2151 ;; This function is called by:
  2152 ;;		_ISR
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _spiRead
  2158  02F5                     _spiRead:	
  2159  02F5                     i1l1073:	
  2160                           ;incstack = 0
  2161                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2162                           
  2163                           
  2164                           ;SPI_SLAVE.c: 50:     spiReceiveWait();
  2165  02F5  120A  118A  2306  120A  118A  	fcall	_spiReceiveWait
  2166  02FA                     i1l1075:	
  2167                           
  2168                           ;SPI_SLAVE.c: 51:     return(SSPBUF);
  2169  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2170  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2171  02FC  0813               	movf	19,w	;volatile
  2172  02FD                     i1l157:	
  2173  02FD  0008               	return
  2174  02FE                     __end_of_spiRead:	
  2175                           
  2176                           	psect	text9
  2177  0306                     __ptext9:	
  2178 ;; *************** function _spiReceiveWait *****************
  2179 ;; Defined at:
  2180 ;;		line 30 in file "SPI_SLAVE.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;		None
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		None
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         0       0       0       0       0
  2195 ;;      Locals:         0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0
  2197 ;;      Totals:         0       0       0       0       0
  2198 ;;Total ram usage:        0 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_spiRead
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _spiReceiveWait
  2209  0306                     _spiReceiveWait:	
  2210  0306                     i1l1005:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _spiReceiveWait: []
  2213                           
  2214  0306                     i1l143:	
  2215                           ;SPI_SLAVE.c: 32:     while ( !SSPSTATbits.BF );
  2216                           
  2217  0306  1683               	bsf	3,5	;RP0=1, select bank1
  2218  0307  1303               	bcf	3,6	;RP1=0, select bank1
  2219  0308  1C14               	btfss	20,0	;volatile
  2220  0309  2B0B               	goto	u31_21
  2221  030A  2B0C               	goto	u31_20
  2222  030B                     u31_21:	
  2223  030B  2B06               	goto	i1l143
  2224  030C                     u31_20:	
  2225  030C                     i1l146:	
  2226  030C  0008               	return
  2227  030D                     __end_of_spiReceiveWait:	
  2228                           
  2229                           	psect	text10
  2230  02FE                     __ptext10:	
  2231 ;; *************** function _UART_READ *****************
  2232 ;; Defined at:
  2233 ;;		line 23 in file "UART.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      unsigned char 
  2240 ;; Registers used:
  2241 ;;		wreg
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0
  2250 ;;      Totals:         0       0       0       0       0
  2251 ;;Total ram usage:        0 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; This function calls:
  2254 ;;		Nothing
  2255 ;; This function is called by:
  2256 ;;		_ISR
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _UART_READ
  2262  02FE                     _UART_READ:	
  2263  02FE                     i1l1063:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _UART_READ: [wreg]
  2266                           
  2267                           
  2268                           ;UART.c: 24:     if(PIR1bits.RCIF==1){
  2269  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  2270  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  2271  0300  1E8C               	btfss	12,5	;volatile
  2272  0301  2B03               	goto	u45_21
  2273  0302  2B04               	goto	u45_20
  2274  0303                     u45_21:	
  2275  0303  2B05               	goto	i1l19
  2276  0304                     u45_20:	
  2277  0304                     i1l1065:	
  2278                           
  2279                           ;UART.c: 25:         return RCREG;
  2280  0304  081A               	movf	26,w	;volatile
  2281  0305                     i1l19:	
  2282  0305  0008               	return
  2283  0306                     __end_of_UART_READ:	
  2284  007E                     btemp	set	126	;btemp
  2285  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80     32      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1181
                                             30 BANK0      2     2      0
                          _UART_INIT
                         _UART_WRITE
                            _initOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     777
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _UART_READ
                            _spiRead
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_WRITE
   _initOsc
   _setup
     _spiInit

 _ISR (ROOT)
   _UART_READ
   _spiRead
     _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 20 04:48:34 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l22 02EA  
                      l15 0258                        l25 02F4                        _S0 0077  
                     l111 025B                       l120 028B                       l112 02B3  
                     l121 02B4                       l113 0261                       l105 02D1  
                     l114 0267                       l115 026D                       l116 0273  
                     l140 02E8                       l117 0279                       l118 027F  
                     l119 0285                       l139 02E3                       l308 00F5  
                     l318 017D                       l995 02D3                       l997 02DB  
                     l999 02DD                       u300 02DB                       u301 02DA  
                     u600 00F9                       u601 00F8                       u610 0118  
            __CFG_CPD$OFF 0000                       u611 0117                       u700 021D  
                     u460 02F0                       _ISR 001C                       u461 02EF  
                     u630 012C                       u631 012B                       u711 022F  
                     u712 0230                       u625 011D                       u713 0235  
                     u705 0218                       u650 0147                       u714 0236  
                     u651 0146                       u715 023B                       u716 023C  
                     u645 012E                       u670 0165                       u590 00E8  
                     u671 0164                       u655 0143                       u591 00E7  
                     u727 01A4                       u680 016A                       u681 0169  
                     u665 0157                       u737 01B6                       u690 0204  
                     u747 01C8                       u757 01DA                       u695 01FF  
                     u767 01EC                       _Luz 0079              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1001 02DF                      l1003 02E2  
                    l1101 02C8                      l1103 025A                      l1107 0291  
                    l1301 01B0                      l1071 02F0                      l1311 01DE  
                    l1303 01BA                      l1241 0104                      l1233 00E1  
                    l1081 02B9                      l1313 01E6                      l1305 01C2  
                    l1251 0128                      l1243 0108                      l1235 00E4  
                    l1091 02C1                      l1083 02BB                      l1307 01CC  
                    l1261 0156                      l1253 012C                      l1245 0110  
                    l1237 00E8                      l1069 02EA                      l1093 02C4  
                    l1085 02BC                      l1309 01D4                      l1263 015F  
                    l1255 0135                      l1247 0118                      l1239 00F9  
                    l1335 0299                      l1095 02C5                      l1087 02BD  
                    l1079 02B5                      l1257 0147                      l1249 011B  
                    l1265 0165                      l1281 0252                      l1273 01F4  
                    l1097 02C6                      l1089 02C0                      l1267 016A  
                    l1259 0155                      l1283 0253                      l1275 024F  
                    l1099 02C7                      l1291 0183                      l1269 0175  
                    l1285 0256                      l1277 0250                      l1293 0189  
                    l1287 0257                      l1279 0251                      l1295 0198  
                    l1297 019E                      l1289 017E                      l1299 01A8  
                    i1l19 0305                      i1l82 0070                      i1l84 00DA  
                    i1l88 0069                      _Parq 0042              __CFG_WRT$OFF 0000  
                    _Temp 0043                      _main 017E                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
         __end_of___aldiv 017E                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l143 0306                     i1l146 030C  
                   i1l157 02FD                     _RCREG 001A                     u31_20 030C  
                   u31_21 030B               ?_UART_WRITE 0070                     u50_20 0048  
                   u50_21 0047                     _SPBRG 0099                     u51_20 0055  
                   u51_21 0054                     u52_20 0062                     u52_21 0061  
                   u45_20 0304                     u53_20 0074                     u45_21 0303  
                   u53_21 0073                     u54_20 0079                     u54_21 0078  
                   u55_20 008C                     u47_20 0022                     u55_21 008B  
                   u47_21 0021                     u56_20 00A2                     u48_20 002F  
                   u56_21 00A1                     u48_21 002E                     u57_20 00B8  
                   u49_20 003B                     u57_21 00B7                     u49_21 003A  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     u58_20 00CE                     u58_21 00CD  
                   _ULTRA 0041                     _TXREG 0019        __size_of_UART_INIT 0065  
      __size_of_UART_READ 0008            __CFG_FCMEN$OFF 0000           __end_of_initOsc 02B5  
                   _setup 02B5            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 02E9           __end_of_spiRead 02FE                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 01F4                    ??_main 003E                    ?_setup 0070  
                  _ANSELH 0189                    i1l1005 0306                    i1l1121 0036  
                  i1l1113 001C                    i1l1131 0055                    i1l1123 003B  
                  i1l1115 0022                    i1l1141 0081                    i1l1133 005C  
                  i1l1125 0042                    i1l1117 002A                    i1l1063 02FE  
                  i1l1151 0096                    i1l1143 0084                    i1l1135 0062  
                  i1l1127 0048                    i1l1119 002F                    i1l1065 0304  
                  i1l1073 02F5                    i1l1161 00AC                    i1l1153 0097  
                  i1l1137 0074                    i1l1129 004F                    i1l1075 02FA  
                  i1l1171 00C2                    i1l1163 00AD                    i1l1139 0079  
                  i1l1147 0087                    i1l1181 00D8                    i1l1173 00C3  
                  i1l1149 008C                    i1l1157 009C                    i1l1183 00D9  
                  i1l1159 00A2                    i1l1167 00B2                    i1l1169 00B8  
                  i1l1177 00C8                    i1l1179 00CE               initOsc@frec 0075  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
     __size_of_UART_WRITE 000C         __end_of_UART_INIT 0259         __end_of_UART_READ 0306  
               ??___aldiv 0073                 ??_initOsc 0073                    saved_w 007E  
               ??_spiInit 0076                 ??_spiRead 0070            UART_WRITE@data 0073  
 __end_of__initialization 0018            __pcstackCOMMON 0070             __end_of_setup 02D2  
                 ??_setup 0077                __pbssBANK0 0040                __pmaintext 017E  
              __pintentry 0004   __size_of_spiReceiveWait 0007              ??_UART_WRITE 0073  
                 _SSPSTAT 0094        __end_of_UART_WRITE 02F5                   _Presion 0040  
                 ___aldiv 00E1                   __ptext1 02B5                   __ptext2 02D2  
                 __ptext3 0259                   __ptext4 02E9                   __ptext5 01F4  
                 __ptext6 00E1                   __ptext7 001C                   __ptext8 02F5  
                 __ptext9 0306              __size_of_ISR 00C5                   _initOsc 0259  
        ___aldiv@dividend 0024                   _spiInit 02D2                   _spiRead 02F5  
    end_of_initialization 0018                 _RASPBERRY 0078                 _RCSTAbits 0018  
        ___aldiv@quotient 002A                 _UART_INIT 01F4                 _UART_READ 02FE  
               _TRISDbits 0088                 _TXSTAbits 0098            _spiReceiveWait 0306  
              ?_UART_INIT 002E                ?_UART_READ 0070       start_initialization 000F  
             __end_of_ISR 00E1  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 030D  
             __pbssCOMMON 0077                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070                  ?___aldiv 0020               ??_UART_INIT 0032  
             ??_UART_READ 0070                  ?_initOsc 0070                  ?_spiInit 0073  
                ?_spiRead 0070            __size_of_setup 001D           ___aldiv@divisor 0020  
    spiInit@sTransmitEdge 0075         interrupt_function 0004           ___aldiv@counter 0028  
                _PIE1bits 008C        spiInit@sDataSample 0073                  _PIR1bits 000C  
        __size_of___aldiv 009D          __size_of_initOsc 005C                  __ptext10 02FE  
        __size_of_spiInit 0017          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
       UART_INIT@baudrate 002E             __size_of_main 0076              spiInit@sType 0076  
       spiInit@sClockIdle 0074                _INTCONbits 000B                  intlevel1 0000  
        ??_spiReceiveWait 0070                _OSCCONbits 008F                _UART_WRITE 02E9  
            ___aldiv@sign 0029  
