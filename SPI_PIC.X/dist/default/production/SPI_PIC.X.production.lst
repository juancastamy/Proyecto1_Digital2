

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 20 05:03:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  0000                     	;# 
   371  0001                     	;# 
   372  0002                     	;# 
   373  0003                     	;# 
   374  0004                     	;# 
   375  0005                     	;# 
   376  0006                     	;# 
   377  0007                     	;# 
   378  0008                     	;# 
   379  0009                     	;# 
   380  000A                     	;# 
   381  000B                     	;# 
   382  000C                     	;# 
   383  000D                     	;# 
   384  000E                     	;# 
   385  000E                     	;# 
   386  000F                     	;# 
   387  0010                     	;# 
   388  0011                     	;# 
   389  0012                     	;# 
   390  0013                     	;# 
   391  0014                     	;# 
   392  0015                     	;# 
   393  0015                     	;# 
   394  0016                     	;# 
   395  0017                     	;# 
   396  0018                     	;# 
   397  0019                     	;# 
   398  001A                     	;# 
   399  001B                     	;# 
   400  001B                     	;# 
   401  001C                     	;# 
   402  001D                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  0081                     	;# 
   406  0085                     	;# 
   407  0086                     	;# 
   408  0087                     	;# 
   409  0088                     	;# 
   410  0089                     	;# 
   411  008C                     	;# 
   412  008D                     	;# 
   413  008E                     	;# 
   414  008F                     	;# 
   415  0090                     	;# 
   416  0091                     	;# 
   417  0092                     	;# 
   418  0093                     	;# 
   419  0093                     	;# 
   420  0093                     	;# 
   421  0094                     	;# 
   422  0095                     	;# 
   423  0096                     	;# 
   424  0097                     	;# 
   425  0098                     	;# 
   426  0099                     	;# 
   427  009A                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  009F                     	;# 
   433  0105                     	;# 
   434  0107                     	;# 
   435  0108                     	;# 
   436  0109                     	;# 
   437  010C                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  010E                     	;# 
   441  010F                     	;# 
   442  0185                     	;# 
   443  0187                     	;# 
   444  0188                     	;# 
   445  0189                     	;# 
   446  018C                     	;# 
   447  018D                     	;# 
   448  0013                     _SSPBUF	set	19
   449  0014                     _SSPCON	set	20
   450  000B                     _INTCONbits	set	11
   451  0006                     _PORTB	set	6
   452  0019                     _TXREG	set	25
   453  001A                     _RCREG	set	26
   454  000C                     _PIR1bits	set	12
   455  0018                     _RCSTAbits	set	24
   456  0094                     _SSPSTAT	set	148
   457  008F                     _OSCCONbits	set	143
   458  008C                     _PIE1bits	set	140
   459  0088                     _TRISDbits	set	136
   460  0088                     _TRISD	set	136
   461  0087                     _TRISC	set	135
   462  0086                     _TRISB	set	134
   463  0085                     _TRISA	set	133
   464  0094                     _SSPSTATbits	set	148
   465  0098                     _TXSTAbits	set	152
   466  0099                     _SPBRG	set	153
   467  043B                     _TRISC3	set	1083
   468  043C                     _TRISC4	set	1084
   469  043D                     _TRISC5	set	1085
   470  0189                     _ANSELH	set	393
   471  0188                     _ANSEL	set	392
   472                           
   473                           ; #config settings
   474  0000                     
   475                           	psect	cinit
   476  000F                     start_initialization:	
   477  000F                     __initialization:	
   478                           
   479                           ; Clear objects allocated to COMMON
   480  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   481  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   482  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   483  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   484  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   485                           
   486                           ; Clear objects allocated to BANK0
   487  0014  1283               	bcf	3,5	;RP0=0, select bank0
   488  0015  1303               	bcf	3,6	;RP1=0, select bank0
   489  0016  01C0               	clrf	__pbssBANK0& (0+127)
   490  0017  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   491  0018                     end_of_initialization:	
   492                           ;End of C runtime variable initialization code
   493                           
   494  0018                     __end_of__initialization:	
   495  0018  0183               	clrf	3
   496  0019  120A  118A  29A2   	ljmp	_main	;jump to C main() function
   497                           
   498                           	psect	bssCOMMON
   499  0070                     __pbssCOMMON:	
   500  0070                     _S0:	
   501  0070                     	ds	1
   502  0071                     _RASPBERRY:	
   503  0071                     	ds	1
   504  0072                     _Parq:	
   505  0072                     	ds	1
   506  0073                     _Temp:	
   507  0073                     	ds	1
   508  0074                     _Luz:	
   509  0074                     	ds	1
   510                           
   511                           	psect	bssBANK0
   512  0040                     __pbssBANK0:	
   513  0040                     _Presion:	
   514  0040                     	ds	1
   515  0041                     _ULTRA:	
   516  0041                     	ds	1
   517                           
   518                           	psect	cstackCOMMON
   519  0075                     __pcstackCOMMON:	
   520  0075                     ?_spiRead:	
   521  0075                     ??_spiRead:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0075                     ?_spiWrite:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0075                     ??_spiWrite:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0075                     ?_setup:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0075                     ?_initOsc:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0075                     ?_UART_READ:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0075                     ??_UART_READ:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0075                     ?_UART_WRITE:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0075                     ?_ISR:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0075                     ?_main:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0075                     ?_spiReceiveWait:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0075                     ??_spiReceiveWait:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0075                     spiWrite@dat:	
   558                           ; 1 bytes @ 0x0
   559                           
   560                           
   561                           ; 1 bytes @ 0x0
   562  0075                     	ds	1
   563  0076                     ??_ISR:	
   564                           
   565                           ; 1 bytes @ 0x1
   566  0076                     	ds	3
   567  0079                     ??_spiInit:	
   568  0079                     ??_UART_WRITE:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0079                     ??___aldiv:	
   572                           ; 1 bytes @ 0x4
   573                           
   574  0079                     UART_WRITE@data:	
   575                           ; 1 bytes @ 0x4
   576                           
   577  0079                     initOsc@frec:	
   578                           ; 1 bytes @ 0x4
   579                           
   580  0079                     spiInit@sType:	
   581                           ; 1 bytes @ 0x4
   582                           
   583                           
   584                           ; 1 bytes @ 0x4
   585  0079                     	ds	1
   586  007A                     ??_setup:	
   587                           
   588                           	psect	cstackBANK0
   589  0020                     __pcstackBANK0:	
   590                           ; 1 bytes @ 0x5
   591                           
   592  0020                     ??_initOsc:	
   593  0020                     ?_spiInit:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0020                     ?___aldiv:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0020                     spiInit@sDataSample:	
   600                           ; 4 bytes @ 0x0
   601                           
   602  0020                     ___aldiv@divisor:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 4 bytes @ 0x0
   607  0020                     	ds	1
   608  0021                     spiInit@sClockIdle:	
   609                           
   610                           ; 1 bytes @ 0x1
   611  0021                     	ds	1
   612  0022                     spiInit@sTransmitEdge:	
   613                           
   614                           ; 1 bytes @ 0x2
   615  0022                     	ds	2
   616  0024                     ___aldiv@dividend:	
   617                           
   618                           ; 4 bytes @ 0x4
   619  0024                     	ds	4
   620  0028                     ___aldiv@counter:	
   621                           
   622                           ; 1 bytes @ 0x8
   623  0028                     	ds	1
   624  0029                     ___aldiv@sign:	
   625                           
   626                           ; 1 bytes @ 0x9
   627  0029                     	ds	1
   628  002A                     ___aldiv@quotient:	
   629                           
   630                           ; 4 bytes @ 0xA
   631  002A                     	ds	4
   632  002E                     ?_UART_INIT:	
   633  002E                     UART_INIT@baudrate:	
   634                           ; 1 bytes @ 0xE
   635                           
   636                           
   637                           ; 4 bytes @ 0xE
   638  002E                     	ds	4
   639  0032                     ??_UART_INIT:	
   640                           
   641                           ; 1 bytes @ 0x12
   642  0032                     	ds	12
   643  003E                     ??_main:	
   644                           
   645                           ; 1 bytes @ 0x1E
   646  003E                     	ds	2
   647                           
   648                           	psect	maintext
   649  01A2                     __pmaintext:	
   650 ;;
   651 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   652 ;;
   653 ;; *************** function _main *****************
   654 ;; Defined at:
   655 ;;		line 136 in file "SPI_PIC.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : B00/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0
   671 ;;      Temps:          0       2       0       0       0
   672 ;;      Totals:         0       2       0       0       0
   673 ;;Total ram usage:        2 bytes
   674 ;; Hardware stack levels required when called:    5
   675 ;; This function calls:
   676 ;;		_UART_INIT
   677 ;;		_UART_WRITE
   678 ;;		_initOsc
   679 ;;		_setup
   680 ;; This function is called by:
   681 ;;		Startup code after reset
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           
   686                           ;psect for function _main
   687  01A2                     _main:	
   688  01A2                     l1369:	
   689                           ;incstack = 0
   690                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   691                           
   692                           
   693                           ;SPI_PIC.c: 137:     setup();
   694  01A2  120A  118A  22DB  120A  118A  	fcall	_setup
   695  01A7                     l1371:	
   696                           
   697                           ;SPI_PIC.c: 138:     initOsc(7);
   698  01A7  3007               	movlw	7
   699  01A8  120A  118A  227D  120A  118A  	fcall	_initOsc
   700  01AD                     l1373:	
   701                           
   702                           ;SPI_PIC.c: 139:     UART_INIT(9600);
   703  01AD  3000               	movlw	0
   704  01AE  1283               	bcf	3,5	;RP0=0, select bank0
   705  01AF  1303               	bcf	3,6	;RP1=0, select bank0
   706  01B0  00B1               	movwf	UART_INIT@baudrate+3
   707  01B1  3000               	movlw	0
   708  01B2  00B0               	movwf	UART_INIT@baudrate+2
   709  01B3  3025               	movlw	37
   710  01B4  00AF               	movwf	UART_INIT@baudrate+1
   711  01B5  3080               	movlw	128
   712  01B6  00AE               	movwf	UART_INIT@baudrate
   713  01B7  120A  118A  2218  120A  118A  	fcall	_UART_INIT
   714  01BC                     l1375:	
   715                           
   716                           ;SPI_PIC.c: 143:     PORTB = RASPBERRY;
   717  01BC  0871               	movf	_RASPBERRY,w
   718  01BD  1283               	bcf	3,5	;RP0=0, select bank0
   719  01BE  1303               	bcf	3,6	;RP1=0, select bank0
   720  01BF  0086               	movwf	6	;volatile
   721  01C0                     l1377:	
   722                           
   723                           ;SPI_PIC.c: 144:     UART_WRITE(Temp);
   724  01C0  0873               	movf	_Temp,w
   725  01C1  120A  118A  231A  120A  118A  	fcall	_UART_WRITE
   726  01C6                     l1379:	
   727                           
   728                           ;SPI_PIC.c: 145:     _delay((unsigned long)((1)*(8000000/4000.0)));
   729  01C6  3003               	movlw	3
   730  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   731  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   732  01C9  00BF               	movwf	??_main+1
   733  01CA  3097               	movlw	151
   734  01CB  00BE               	movwf	??_main
   735  01CC                     u637:	
   736  01CC  0BBE               	decfsz	??_main,f
   737  01CD  29CC               	goto	u637
   738  01CE  0BBF               	decfsz	??_main+1,f
   739  01CF  29CC               	goto	u637
   740  01D0                     l1381:	
   741                           
   742                           ;SPI_PIC.c: 146:     UART_WRITE(Parq);
   743  01D0  0872               	movf	_Parq,w
   744  01D1  120A  118A  231A  120A  118A  	fcall	_UART_WRITE
   745  01D6                     l1383:	
   746                           
   747                           ;SPI_PIC.c: 147:     _delay((unsigned long)((1)*(8000000/4000.0)));
   748  01D6  3003               	movlw	3
   749  01D7  1283               	bcf	3,5	;RP0=0, select bank0
   750  01D8  1303               	bcf	3,6	;RP1=0, select bank0
   751  01D9  00BF               	movwf	??_main+1
   752  01DA  3097               	movlw	151
   753  01DB  00BE               	movwf	??_main
   754  01DC                     u647:	
   755  01DC  0BBE               	decfsz	??_main,f
   756  01DD  29DC               	goto	u647
   757  01DE  0BBF               	decfsz	??_main+1,f
   758  01DF  29DC               	goto	u647
   759  01E0                     l1385:	
   760                           
   761                           ;SPI_PIC.c: 148:     UART_WRITE(Luz);
   762  01E0  0874               	movf	_Luz,w
   763  01E1  120A  118A  231A  120A  118A  	fcall	_UART_WRITE
   764  01E6                     l1387:	
   765                           
   766                           ;SPI_PIC.c: 149:     _delay((unsigned long)((1)*(8000000/4000.0)));
   767  01E6  3003               	movlw	3
   768  01E7  1283               	bcf	3,5	;RP0=0, select bank0
   769  01E8  1303               	bcf	3,6	;RP1=0, select bank0
   770  01E9  00BF               	movwf	??_main+1
   771  01EA  3097               	movlw	151
   772  01EB  00BE               	movwf	??_main
   773  01EC                     u657:	
   774  01EC  0BBE               	decfsz	??_main,f
   775  01ED  29EC               	goto	u657
   776  01EE  0BBF               	decfsz	??_main+1,f
   777  01EF  29EC               	goto	u657
   778  01F0                     l1389:	
   779                           
   780                           ;SPI_PIC.c: 150:     UART_WRITE(Presion);
   781  01F0  1283               	bcf	3,5	;RP0=0, select bank0
   782  01F1  1303               	bcf	3,6	;RP1=0, select bank0
   783  01F2  0840               	movf	_Presion,w
   784  01F3  120A  118A  231A  120A  118A  	fcall	_UART_WRITE
   785  01F8                     l1391:	
   786                           
   787                           ;SPI_PIC.c: 151:     _delay((unsigned long)((1)*(8000000/4000.0)));
   788  01F8  3003               	movlw	3
   789  01F9  1283               	bcf	3,5	;RP0=0, select bank0
   790  01FA  1303               	bcf	3,6	;RP1=0, select bank0
   791  01FB  00BF               	movwf	??_main+1
   792  01FC  3097               	movlw	151
   793  01FD  00BE               	movwf	??_main
   794  01FE                     u667:	
   795  01FE  0BBE               	decfsz	??_main,f
   796  01FF  29FE               	goto	u667
   797  0200  0BBF               	decfsz	??_main+1,f
   798  0201  29FE               	goto	u667
   799  0202                     l1393:	
   800                           
   801                           ;SPI_PIC.c: 152:     UART_WRITE(ULTRA);
   802  0202  1283               	bcf	3,5	;RP0=0, select bank0
   803  0203  1303               	bcf	3,6	;RP1=0, select bank0
   804  0204  0841               	movf	_ULTRA,w
   805  0205  120A  118A  231A  120A  118A  	fcall	_UART_WRITE
   806  020A                     l1395:	
   807                           
   808                           ;SPI_PIC.c: 153:     _delay((unsigned long)((1)*(8000000/4000.0)));
   809  020A  3003               	movlw	3
   810  020B  1283               	bcf	3,5	;RP0=0, select bank0
   811  020C  1303               	bcf	3,6	;RP1=0, select bank0
   812  020D  00BF               	movwf	??_main+1
   813  020E  3097               	movlw	151
   814  020F  00BE               	movwf	??_main
   815  0210                     u677:	
   816  0210  0BBE               	decfsz	??_main,f
   817  0211  2A10               	goto	u677
   818  0212  0BBF               	decfsz	??_main+1,f
   819  0213  2A10               	goto	u677
   820  0214  29BC               	goto	l1375
   821  0215  120A  118A  280C   	ljmp	start
   822  0218                     __end_of_main:	
   823                           
   824                           	psect	text1
   825  02DB                     __ptext1:	
   826 ;; *************** function _setup *****************
   827 ;; Defined at:
   828 ;;		line 158 in file "SPI_PIC.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, status,2, status,0, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 0/0
   839 ;;		On exit  : 0/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         0       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         0       0       0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    4
   849 ;; This function calls:
   850 ;;		_spiInit
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _setup
   858  02DB                     _setup:	
   859  02DB                     l1333:	
   860                           ;incstack = 0
   861                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   862                           
   863                           
   864                           ;SPI_PIC.c: 159:     TRISA = 0;
   865  02DB  1683               	bsf	3,5	;RP0=1, select bank1
   866  02DC  1303               	bcf	3,6	;RP1=0, select bank1
   867  02DD  0185               	clrf	5	;volatile
   868                           
   869                           ;SPI_PIC.c: 160:     TRISB = 0;
   870  02DE  0186               	clrf	6	;volatile
   871  02DF                     l1335:	
   872                           
   873                           ;SPI_PIC.c: 161:     TRISC = 0b11010000;
   874  02DF  30D0               	movlw	208
   875  02E0  0087               	movwf	7	;volatile
   876  02E1                     l1337:	
   877                           
   878                           ;SPI_PIC.c: 162:     TRISD = 0;
   879  02E1  0188               	clrf	8	;volatile
   880  02E2                     l1339:	
   881                           
   882                           ;SPI_PIC.c: 163:     TRISDbits.TRISD1 = 0;
   883  02E2  1088               	bcf	8,1	;volatile
   884  02E3                     l1341:	
   885                           
   886                           ;SPI_PIC.c: 164:     ANSEL = 0;
   887  02E3  1683               	bsf	3,5	;RP0=1, select bank3
   888  02E4  1703               	bsf	3,6	;RP1=1, select bank3
   889  02E5  0188               	clrf	8	;volatile
   890  02E6                     l1343:	
   891                           
   892                           ;SPI_PIC.c: 165:     ANSELH = 0;
   893  02E6  0189               	clrf	9	;volatile
   894  02E7                     l1345:	
   895                           
   896                           ;SPI_PIC.c: 166:     PIE1bits.RCIE = 1;
   897  02E7  1683               	bsf	3,5	;RP0=1, select bank1
   898  02E8  1303               	bcf	3,6	;RP1=0, select bank1
   899  02E9  168C               	bsf	12,5	;volatile
   900  02EA                     l1347:	
   901                           
   902                           ;SPI_PIC.c: 167:     INTCONbits.PEIE = 1;
   903  02EA  170B               	bsf	11,6	;volatile
   904  02EB                     l1349:	
   905                           
   906                           ;SPI_PIC.c: 168:     INTCONbits.GIE = 1;
   907  02EB  178B               	bsf	11,7	;volatile
   908  02EC                     l1351:	
   909                           
   910                           ;SPI_PIC.c: 169:     PIE1bits.SSPIE = 1;
   911  02EC  158C               	bsf	12,3	;volatile
   912  02ED                     l1353:	
   913                           
   914                           ;SPI_PIC.c: 170:     RASPBERRY = 0;
   915  02ED  01F1               	clrf	_RASPBERRY
   916  02EE                     l1355:	
   917                           
   918                           ;SPI_PIC.c: 171:     S0=0;
   919  02EE  01F0               	clrf	_S0
   920  02EF                     l1357:	
   921                           
   922                           ;SPI_PIC.c: 172:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   923  02EF  1283               	bcf	3,5	;RP0=0, select bank0
   924  02F0  1303               	bcf	3,6	;RP1=0, select bank0
   925  02F1  01A0               	clrf	spiInit@sDataSample
   926  02F2  01A1               	clrf	spiInit@sClockIdle
   927  02F3  01A2               	clrf	spiInit@sTransmitEdge
   928  02F4  3025               	movlw	37
   929  02F5  120A  118A  22FB  120A  118A  	fcall	_spiInit
   930  02FA                     l109:	
   931  02FA  0008               	return
   932  02FB                     __end_of_setup:	
   933                           
   934                           	psect	text2
   935  02FB                     __ptext2:	
   936 ;; *************** function _spiInit *****************
   937 ;; Defined at:
   938 ;;		line 12 in file "SPI_SLAVE.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  sType           1    wreg     enum E1264
   941 ;;  sDataSample     1    0[BANK0 ] enum E1272
   942 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   943 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  sType           1    4[COMMON] enum E1264
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, status,2, status,0
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       3       0       0       0
   956 ;;      Locals:         1       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         1       3       0       0       0
   959 ;;Total ram usage:        4 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    3
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_setup
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _spiInit
   971  02FB                     _spiInit:	
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   975                           ;spiInit@sType stored from wreg
   976  02FB  00F9               	movwf	spiInit@sType
   977  02FC                     l1307:	
   978                           
   979                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5=0;
   980  02FC  1683               	bsf	3,5	;RP0=1, select bank1
   981  02FD  1303               	bcf	3,6	;RP1=0, select bank1
   982  02FE  1287               	bcf	7,5	;volatile
   983                           
   984                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
   985  02FF  1607               	bsf	7,4	;volatile
   986                           
   987                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
   988  0300  1D79               	btfss	spiInit@sType,2
   989  0301  2B03               	goto	u591
   990  0302  2B04               	goto	u590
   991  0303                     u591:	
   992  0303  2B0C               	goto	l1313
   993  0304                     u590:	
   994  0304                     l1309:	
   995                           
   996                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
   997  0304  1283               	bcf	3,5	;RP0=0, select bank0
   998  0305  1303               	bcf	3,6	;RP1=0, select bank0
   999  0306  0822               	movf	spiInit@sTransmitEdge,w
  1000  0307  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0308  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0309  0094               	movwf	20	;volatile
  1003  030A                     l1311:	
  1004                           
  1005                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
  1006  030A  1587               	bsf	7,3	;volatile
  1007                           
  1008                           ;SPI_SLAVE.c: 20:     }
  1009  030B  2B14               	goto	l143
  1010  030C                     l1313:	
  1011                           
  1012                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  1013  030C  1283               	bcf	3,5	;RP0=0, select bank0
  1014  030D  1303               	bcf	3,6	;RP1=0, select bank0
  1015  030E  0820               	movf	spiInit@sDataSample,w
  1016  030F  0422               	iorwf	spiInit@sTransmitEdge,w
  1017  0310  1683               	bsf	3,5	;RP0=1, select bank1
  1018  0311  1303               	bcf	3,6	;RP1=0, select bank1
  1019  0312  0094               	movwf	20	;volatile
  1020  0313                     l1315:	
  1021                           
  1022                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
  1023  0313  1187               	bcf	7,3	;volatile
  1024  0314                     l143:	
  1025                           ;SPI_SLAVE.c: 25:     }
  1026                           
  1027                           
  1028                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
  1029  0314  0879               	movf	spiInit@sType,w
  1030  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1031  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1032  0317  0421               	iorwf	spiInit@sClockIdle,w
  1033  0318  0094               	movwf	20	;volatile
  1034  0319                     l144:	
  1035  0319  0008               	return
  1036  031A                     __end_of_spiInit:	
  1037                           
  1038                           	psect	text3
  1039  027D                     __ptext3:	
  1040 ;; *************** function _initOsc *****************
  1041 ;; Defined at:
  1042 ;;		line 8 in file "OSCI.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  frec            1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  frec            1    4[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         1       0       0       0       0
  1058 ;;      Temps:          0       2       0       0       0
  1059 ;;      Totals:         1       2       0       0       0
  1060 ;;Total ram usage:        3 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		Nothing
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _initOsc
  1072  027D                     _initOsc:	
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1076                           ;initOsc@frec stored from wreg
  1077  027D  00F9               	movwf	initOsc@frec
  1078  027E                     l1359:	
  1079                           
  1080                           ;OSCI.c: 9:     switch(frec){
  1081  027E  2AB5               	goto	l1363
  1082  027F                     l115:	
  1083                           ;OSCI.c: 10:         case 0:
  1084                           
  1085                           
  1086                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
  1087  027F  1683               	bsf	3,5	;RP0=1, select bank1
  1088  0280  1303               	bcf	3,6	;RP1=0, select bank1
  1089  0281  120F               	bcf	15,4	;volatile
  1090                           
  1091                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
  1092  0282  128F               	bcf	15,5	;volatile
  1093                           
  1094                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
  1095  0283  130F               	bcf	15,6	;volatile
  1096                           
  1097                           ;OSCI.c: 14:             break;
  1098  0284  2AD9               	goto	l116
  1099  0285                     l117:	
  1100                           ;OSCI.c: 15:         case 1:
  1101                           
  1102                           
  1103                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
  1104  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0287  160F               	bsf	15,4	;volatile
  1107                           
  1108                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
  1109  0288  128F               	bcf	15,5	;volatile
  1110                           
  1111                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
  1112  0289  130F               	bcf	15,6	;volatile
  1113                           
  1114                           ;OSCI.c: 19:             break;
  1115  028A  2AD9               	goto	l116
  1116  028B                     l118:	
  1117                           ;OSCI.c: 20:         case 2:
  1118                           
  1119                           
  1120                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1121  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1122  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1123  028D  120F               	bcf	15,4	;volatile
  1124                           
  1125                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1126  028E  168F               	bsf	15,5	;volatile
  1127                           
  1128                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1129  028F  130F               	bcf	15,6	;volatile
  1130                           
  1131                           ;OSCI.c: 24:             break;
  1132  0290  2AD9               	goto	l116
  1133  0291                     l119:	
  1134                           ;OSCI.c: 25:         case 3:
  1135                           
  1136                           
  1137                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1138  0291  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0292  1303               	bcf	3,6	;RP1=0, select bank1
  1140  0293  160F               	bsf	15,4	;volatile
  1141                           
  1142                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1143  0294  168F               	bsf	15,5	;volatile
  1144                           
  1145                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1146  0295  130F               	bcf	15,6	;volatile
  1147                           
  1148                           ;OSCI.c: 29:             break;
  1149  0296  2AD9               	goto	l116
  1150  0297                     l120:	
  1151                           ;OSCI.c: 30:         case 4:
  1152                           
  1153                           
  1154                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1155  0297  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0298  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0299  120F               	bcf	15,4	;volatile
  1158                           
  1159                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1160  029A  128F               	bcf	15,5	;volatile
  1161                           
  1162                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1163  029B  170F               	bsf	15,6	;volatile
  1164                           
  1165                           ;OSCI.c: 34:             break;
  1166  029C  2AD9               	goto	l116
  1167  029D                     l121:	
  1168                           ;OSCI.c: 35:         case 5:
  1169                           
  1170                           
  1171                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1172  029D  1683               	bsf	3,5	;RP0=1, select bank1
  1173  029E  1303               	bcf	3,6	;RP1=0, select bank1
  1174  029F  160F               	bsf	15,4	;volatile
  1175                           
  1176                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1177  02A0  128F               	bcf	15,5	;volatile
  1178                           
  1179                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1180  02A1  170F               	bsf	15,6	;volatile
  1181                           
  1182                           ;OSCI.c: 39:             break;
  1183  02A2  2AD9               	goto	l116
  1184  02A3                     l122:	
  1185                           ;OSCI.c: 40:         case 6:
  1186                           
  1187                           
  1188                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1189  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  1190  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  1191  02A5  120F               	bcf	15,4	;volatile
  1192                           
  1193                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1194  02A6  168F               	bsf	15,5	;volatile
  1195                           
  1196                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1197  02A7  170F               	bsf	15,6	;volatile
  1198                           
  1199                           ;OSCI.c: 44:             break;
  1200  02A8  2AD9               	goto	l116
  1201  02A9                     l123:	
  1202                           ;OSCI.c: 45:         case 7:
  1203                           
  1204                           
  1205                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1206  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  1207  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  1208  02AB  160F               	bsf	15,4	;volatile
  1209                           
  1210                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1211  02AC  168F               	bsf	15,5	;volatile
  1212                           
  1213                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1214  02AD  170F               	bsf	15,6	;volatile
  1215                           
  1216                           ;OSCI.c: 49:             break;
  1217  02AE  2AD9               	goto	l116
  1218  02AF                     l124:	
  1219                           ;OSCI.c: 50:         default:
  1220                           
  1221                           
  1222                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1223  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  1224  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  1225  02B1  120F               	bcf	15,4	;volatile
  1226                           
  1227                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1228  02B2  168F               	bsf	15,5	;volatile
  1229                           
  1230                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1231  02B3  170F               	bsf	15,6	;volatile
  1232                           
  1233                           ;OSCI.c: 54:             break;
  1234  02B4  2AD9               	goto	l116
  1235  02B5                     l1363:	
  1236  02B5  0879               	movf	initOsc@frec,w
  1237  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1238  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1239  02B8  00A0               	movwf	??_initOsc
  1240  02B9  01A1               	clrf	??_initOsc+1
  1241                           
  1242                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1243                           ; Switch size 1, requested type "simple"
  1244                           ; Number of cases is 1, Range of values is 0 to 0
  1245                           ; switch strategies available:
  1246                           ; Name         Instructions Cycles
  1247                           ; simple_byte            4     3 (average)
  1248                           ; direct_byte           11     8 (fixed)
  1249                           ; jumptable            260     6 (fixed)
  1250                           ;	Chosen strategy is simple_byte
  1251  02BA  0821               	movf	??_initOsc+1,w
  1252  02BB  3A00               	xorlw	0	; case 0
  1253  02BC  1903               	skipnz
  1254  02BD  2ABF               	goto	l1417
  1255  02BE  2AAF               	goto	l124
  1256  02BF                     l1417:	
  1257                           
  1258                           ; Switch size 1, requested type "simple"
  1259                           ; Number of cases is 8, Range of values is 0 to 7
  1260                           ; switch strategies available:
  1261                           ; Name         Instructions Cycles
  1262                           ; simple_byte           25    13 (average)
  1263                           ; direct_byte           32     8 (fixed)
  1264                           ; jumptable            260     6 (fixed)
  1265                           ;	Chosen strategy is simple_byte
  1266  02BF  0820               	movf	??_initOsc,w
  1267  02C0  3A00               	xorlw	0	; case 0
  1268  02C1  1903               	skipnz
  1269  02C2  2A7F               	goto	l115
  1270  02C3  3A01               	xorlw	1	; case 1
  1271  02C4  1903               	skipnz
  1272  02C5  2A85               	goto	l117
  1273  02C6  3A03               	xorlw	3	; case 2
  1274  02C7  1903               	skipnz
  1275  02C8  2A8B               	goto	l118
  1276  02C9  3A01               	xorlw	1	; case 3
  1277  02CA  1903               	skipnz
  1278  02CB  2A91               	goto	l119
  1279  02CC  3A07               	xorlw	7	; case 4
  1280  02CD  1903               	skipnz
  1281  02CE  2A97               	goto	l120
  1282  02CF  3A01               	xorlw	1	; case 5
  1283  02D0  1903               	skipnz
  1284  02D1  2A9D               	goto	l121
  1285  02D2  3A03               	xorlw	3	; case 6
  1286  02D3  1903               	skipnz
  1287  02D4  2AA3               	goto	l122
  1288  02D5  3A01               	xorlw	1	; case 7
  1289  02D6  1903               	skipnz
  1290  02D7  2AA9               	goto	l123
  1291  02D8  2AAF               	goto	l124
  1292  02D9                     l116:	
  1293                           
  1294                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1295  02D9  140F               	bsf	15,0	;volatile
  1296  02DA                     l125:	
  1297  02DA  0008               	return
  1298  02DB                     __end_of_initOsc:	
  1299                           
  1300                           	psect	text4
  1301  031A                     __ptext4:	
  1302 ;; *************** function _UART_WRITE *****************
  1303 ;; Defined at:
  1304 ;;		line 31 in file "UART.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  data            1    wreg     unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  data            1    4[COMMON] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0
  1321 ;;      Totals:         1       0       0       0       0
  1322 ;;Total ram usage:        1 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    3
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _UART_WRITE
  1334  031A                     _UART_WRITE:	
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _UART_WRITE: [wreg]
  1338                           ;UART_WRITE@data stored from wreg
  1339  031A  00F9               	movwf	UART_WRITE@data
  1340  031B                     l1107:	
  1341  031B                     l22:	
  1342                           ;UART.c: 32:   while(!TXSTAbits.TRMT);
  1343                           
  1344  031B  1683               	bsf	3,5	;RP0=1, select bank1
  1345  031C  1303               	bcf	3,6	;RP1=0, select bank1
  1346  031D  1C98               	btfss	24,1	;volatile
  1347  031E  2B20               	goto	u461
  1348  031F  2B21               	goto	u460
  1349  0320                     u461:	
  1350  0320  2B1B               	goto	l22
  1351  0321                     u460:	
  1352  0321                     l1109:	
  1353                           
  1354                           ;UART.c: 33:   TXREG = data;
  1355  0321  0879               	movf	UART_WRITE@data,w
  1356  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0324  0099               	movwf	25	;volatile
  1359  0325                     l25:	
  1360  0325  0008               	return
  1361  0326                     __end_of_UART_WRITE:	
  1362                           
  1363                           	psect	text5
  1364  0218                     __ptext5:	
  1365 ;; *************** function _UART_INIT *****************
  1366 ;; Defined at:
  1367 ;;		line 6 in file "UART.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  baudrate        4   14[BANK0 ] const long 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      unsigned char 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       4       0       0       0
  1382 ;;      Locals:         0       0       0       0       0
  1383 ;;      Temps:          0      12       0       0       0
  1384 ;;      Totals:         0      16       0       0       0
  1385 ;;Total ram usage:       16 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    4
  1388 ;; This function calls:
  1389 ;;		___aldiv
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _UART_INIT
  1397  0218                     _UART_INIT:	
  1398  0218                     l1317:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1401                           
  1402                           
  1403                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1404  0218  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0219  1303               	bcf	3,6	;RP1=0, select bank0
  1406  021A  082E               	movf	UART_INIT@baudrate,w
  1407  021B  00B2               	movwf	??_UART_INIT
  1408  021C  082F               	movf	UART_INIT@baudrate+1,w
  1409  021D  00B3               	movwf	??_UART_INIT+1
  1410  021E  0830               	movf	UART_INIT@baudrate+2,w
  1411  021F  00B4               	movwf	??_UART_INIT+2
  1412  0220  0831               	movf	UART_INIT@baudrate+3,w
  1413  0221  00B5               	movwf	??_UART_INIT+3
  1414  0222  3004               	movlw	4
  1415  0223                     u605:	
  1416  0223  1003               	clrc
  1417  0224  0DB2               	rlf	??_UART_INIT,f
  1418  0225  0DB3               	rlf	??_UART_INIT+1,f
  1419  0226  0DB4               	rlf	??_UART_INIT+2,f
  1420  0227  0DB5               	rlf	??_UART_INIT+3,f
  1421  0228                     u600:	
  1422  0228  3EFF               	addlw	-1
  1423  0229  1D03               	skipz
  1424  022A  2A23               	goto	u605
  1425  022B  0835               	movf	??_UART_INIT+3,w
  1426  022C  00A3               	movwf	___aldiv@divisor+3
  1427  022D  0834               	movf	??_UART_INIT+2,w
  1428  022E  00A2               	movwf	___aldiv@divisor+2
  1429  022F  0833               	movf	??_UART_INIT+1,w
  1430  0230  00A1               	movwf	___aldiv@divisor+1
  1431  0231  0832               	movf	??_UART_INIT,w
  1432  0232  00A0               	movwf	___aldiv@divisor
  1433  0233  082E               	movf	UART_INIT@baudrate,w
  1434  0234  00B6               	movwf	??_UART_INIT+4
  1435  0235  082F               	movf	UART_INIT@baudrate+1,w
  1436  0236  00B7               	movwf	??_UART_INIT+5
  1437  0237  0830               	movf	UART_INIT@baudrate+2,w
  1438  0238  00B8               	movwf	??_UART_INIT+6
  1439  0239  0831               	movf	UART_INIT@baudrate+3,w
  1440  023A  00B9               	movwf	??_UART_INIT+7
  1441  023B  3004               	movlw	4
  1442  023C                     u615:	
  1443  023C  1003               	clrc
  1444  023D  0DB6               	rlf	??_UART_INIT+4,f
  1445  023E  0DB7               	rlf	??_UART_INIT+5,f
  1446  023F  0DB8               	rlf	??_UART_INIT+6,f
  1447  0240  0DB9               	rlf	??_UART_INIT+7,f
  1448  0241                     u610:	
  1449  0241  3EFF               	addlw	-1
  1450  0242  1D03               	skipz
  1451  0243  2A3C               	goto	u615
  1452  0244  3000               	movlw	0
  1453  0245  00BA               	movwf	??_UART_INIT+8
  1454  0246  3012               	movlw	18
  1455  0247  00BB               	movwf	??_UART_INIT+9
  1456  0248  307A               	movlw	122
  1457  0249  00BC               	movwf	??_UART_INIT+10
  1458  024A  3000               	movlw	0
  1459  024B  00BD               	movwf	??_UART_INIT+11
  1460  024C  0836               	movf	??_UART_INIT+4,w
  1461  024D  02BA               	subwf	??_UART_INIT+8,f
  1462  024E  0837               	movf	??_UART_INIT+5,w
  1463  024F  1C03               	skipc
  1464  0250  0F37               	incfsz	??_UART_INIT+5,w
  1465  0251  2A53               	goto	u621
  1466  0252  2A54               	goto	u622
  1467  0253                     u621:	
  1468  0253  02BB               	subwf	??_UART_INIT+9,f
  1469  0254                     u622:	
  1470  0254  0838               	movf	??_UART_INIT+6,w
  1471  0255  1C03               	skipc
  1472  0256  0F38               	incfsz	??_UART_INIT+6,w
  1473  0257  2A59               	goto	u623
  1474  0258  2A5A               	goto	u624
  1475  0259                     u623:	
  1476  0259  02BC               	subwf	??_UART_INIT+10,f
  1477  025A                     u624:	
  1478  025A  0839               	movf	??_UART_INIT+7,w
  1479  025B  1C03               	skipc
  1480  025C  0F39               	incfsz	??_UART_INIT+7,w
  1481  025D  2A5F               	goto	u625
  1482  025E  2A60               	goto	u626
  1483  025F                     u625:	
  1484  025F  02BD               	subwf	??_UART_INIT+11,f
  1485  0260                     u626:	
  1486  0260  083D               	movf	??_UART_INIT+11,w
  1487  0261  00A7               	movwf	___aldiv@dividend+3
  1488  0262  083C               	movf	??_UART_INIT+10,w
  1489  0263  00A6               	movwf	___aldiv@dividend+2
  1490  0264  083B               	movf	??_UART_INIT+9,w
  1491  0265  00A5               	movwf	___aldiv@dividend+1
  1492  0266  083A               	movf	??_UART_INIT+8,w
  1493  0267  00A4               	movwf	___aldiv@dividend
  1494  0268  120A  118A  2105  120A  118A  	fcall	___aldiv
  1495  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1496  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1497  026F  0820               	movf	?___aldiv,w
  1498  0270  1683               	bsf	3,5	;RP0=1, select bank1
  1499  0271  1303               	bcf	3,6	;RP1=0, select bank1
  1500  0272  0099               	movwf	25	;volatile
  1501  0273                     l1319:	
  1502                           
  1503                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  1504  0273  1518               	bsf	24,2	;volatile
  1505  0274                     l1321:	
  1506                           
  1507                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  1508  0274  1698               	bsf	24,5	;volatile
  1509  0275                     l1323:	
  1510                           
  1511                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  1512  0275  1218               	bcf	24,4	;volatile
  1513  0276                     l1325:	
  1514                           
  1515                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1516  0276  1318               	bcf	24,6	;volatile
  1517  0277                     l1327:	
  1518                           
  1519                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  1520  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0279  1618               	bsf	24,4	;volatile
  1523  027A                     l1329:	
  1524                           
  1525                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  1526  027A  1798               	bsf	24,7	;volatile
  1527  027B                     l1331:	
  1528                           
  1529                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  1530  027B  1318               	bcf	24,6	;volatile
  1531  027C                     l15:	
  1532  027C  0008               	return
  1533  027D                     __end_of_UART_INIT:	
  1534                           
  1535                           	psect	text6
  1536  0105                     __ptext6:	
  1537 ;; *************** function ___aldiv *****************
  1538 ;; Defined at:
  1539 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  divisor         4    0[BANK0 ] long 
  1542 ;;  dividend        4    4[BANK0 ] long 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  quotient        4   10[BANK0 ] long 
  1545 ;;  sign            1    9[BANK0 ] unsigned char 
  1546 ;;  counter         1    8[BANK0 ] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  4    0[BANK0 ] long 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1556 ;;      Params:         0       8       0       0       0
  1557 ;;      Locals:         0       6       0       0       0
  1558 ;;      Temps:          1       0       0       0       0
  1559 ;;      Totals:         1      14       0       0       0
  1560 ;;Total ram usage:       15 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    3
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_UART_INIT
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function ___aldiv
  1572  0105                     ___aldiv:	
  1573  0105                     l1045:	
  1574                           ;incstack = 0
  1575                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1576                           
  1577  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0107  01A9               	clrf	___aldiv@sign
  1580  0108                     l1047:	
  1581  0108  1FA3               	btfss	___aldiv@divisor+3,7
  1582  0109  290B               	goto	u321
  1583  010A  290C               	goto	u320
  1584  010B                     u321:	
  1585  010B  2919               	goto	l312
  1586  010C                     u320:	
  1587  010C                     l1049:	
  1588  010C  09A0               	comf	___aldiv@divisor,f
  1589  010D  09A1               	comf	___aldiv@divisor+1,f
  1590  010E  09A2               	comf	___aldiv@divisor+2,f
  1591  010F  09A3               	comf	___aldiv@divisor+3,f
  1592  0110  0AA0               	incf	___aldiv@divisor,f
  1593  0111  1903               	skipnz
  1594  0112  0AA1               	incf	___aldiv@divisor+1,f
  1595  0113  1903               	skipnz
  1596  0114  0AA2               	incf	___aldiv@divisor+2,f
  1597  0115  1903               	skipnz
  1598  0116  0AA3               	incf	___aldiv@divisor+3,f
  1599  0117  01A9               	clrf	___aldiv@sign
  1600  0118  0AA9               	incf	___aldiv@sign,f
  1601  0119                     l312:	
  1602  0119  1FA7               	btfss	___aldiv@dividend+3,7
  1603  011A  291C               	goto	u331
  1604  011B  291D               	goto	u330
  1605  011C                     u331:	
  1606  011C  292C               	goto	l1055
  1607  011D                     u330:	
  1608  011D                     l1051:	
  1609  011D  09A4               	comf	___aldiv@dividend,f
  1610  011E  09A5               	comf	___aldiv@dividend+1,f
  1611  011F  09A6               	comf	___aldiv@dividend+2,f
  1612  0120  09A7               	comf	___aldiv@dividend+3,f
  1613  0121  0AA4               	incf	___aldiv@dividend,f
  1614  0122  1903               	skipnz
  1615  0123  0AA5               	incf	___aldiv@dividend+1,f
  1616  0124  1903               	skipnz
  1617  0125  0AA6               	incf	___aldiv@dividend+2,f
  1618  0126  1903               	skipnz
  1619  0127  0AA7               	incf	___aldiv@dividend+3,f
  1620  0128                     l1053:	
  1621  0128  3001               	movlw	1
  1622  0129  00F9               	movwf	??___aldiv
  1623  012A  0879               	movf	??___aldiv,w
  1624  012B  06A9               	xorwf	___aldiv@sign,f
  1625  012C                     l1055:	
  1626  012C  3000               	movlw	0
  1627  012D  00AD               	movwf	___aldiv@quotient+3
  1628  012E  3000               	movlw	0
  1629  012F  00AC               	movwf	___aldiv@quotient+2
  1630  0130  3000               	movlw	0
  1631  0131  00AB               	movwf	___aldiv@quotient+1
  1632  0132  3000               	movlw	0
  1633  0133  00AA               	movwf	___aldiv@quotient
  1634  0134                     l1057:	
  1635  0134  0823               	movf	___aldiv@divisor+3,w
  1636  0135  0422               	iorwf	___aldiv@divisor+2,w
  1637  0136  0421               	iorwf	___aldiv@divisor+1,w
  1638  0137  0420               	iorwf	___aldiv@divisor,w
  1639  0138  1903               	skipnz
  1640  0139  293B               	goto	u341
  1641  013A  293C               	goto	u340
  1642  013B                     u341:	
  1643  013B  2989               	goto	l1077
  1644  013C                     u340:	
  1645  013C                     l1059:	
  1646  013C  01A8               	clrf	___aldiv@counter
  1647  013D  0AA8               	incf	___aldiv@counter,f
  1648  013E  294C               	goto	l1063
  1649  013F                     l1061:	
  1650  013F  3001               	movlw	1
  1651  0140  00F9               	movwf	??___aldiv
  1652  0141                     u355:	
  1653  0141  1003               	clrc
  1654  0142  0DA0               	rlf	___aldiv@divisor,f
  1655  0143  0DA1               	rlf	___aldiv@divisor+1,f
  1656  0144  0DA2               	rlf	___aldiv@divisor+2,f
  1657  0145  0DA3               	rlf	___aldiv@divisor+3,f
  1658  0146  0BF9               	decfsz	??___aldiv,f
  1659  0147  2941               	goto	u355
  1660  0148  3001               	movlw	1
  1661  0149  00F9               	movwf	??___aldiv
  1662  014A  0879               	movf	??___aldiv,w
  1663  014B  07A8               	addwf	___aldiv@counter,f
  1664  014C                     l1063:	
  1665  014C  1FA3               	btfss	___aldiv@divisor+3,7
  1666  014D  294F               	goto	u361
  1667  014E  2950               	goto	u360
  1668  014F                     u361:	
  1669  014F  293F               	goto	l1061
  1670  0150                     u360:	
  1671  0150                     l1065:	
  1672  0150  3001               	movlw	1
  1673  0151  00F9               	movwf	??___aldiv
  1674  0152                     u375:	
  1675  0152  1003               	clrc
  1676  0153  0DAA               	rlf	___aldiv@quotient,f
  1677  0154  0DAB               	rlf	___aldiv@quotient+1,f
  1678  0155  0DAC               	rlf	___aldiv@quotient+2,f
  1679  0156  0DAD               	rlf	___aldiv@quotient+3,f
  1680  0157  0BF9               	decfsz	??___aldiv,f
  1681  0158  2952               	goto	u375
  1682  0159                     l1067:	
  1683  0159  0823               	movf	___aldiv@divisor+3,w
  1684  015A  0227               	subwf	___aldiv@dividend+3,w
  1685  015B  1D03               	skipz
  1686  015C  2967               	goto	u385
  1687  015D  0822               	movf	___aldiv@divisor+2,w
  1688  015E  0226               	subwf	___aldiv@dividend+2,w
  1689  015F  1D03               	skipz
  1690  0160  2967               	goto	u385
  1691  0161  0821               	movf	___aldiv@divisor+1,w
  1692  0162  0225               	subwf	___aldiv@dividend+1,w
  1693  0163  1D03               	skipz
  1694  0164  2967               	goto	u385
  1695  0165  0820               	movf	___aldiv@divisor,w
  1696  0166  0224               	subwf	___aldiv@dividend,w
  1697  0167                     u385:	
  1698  0167  1C03               	skipc
  1699  0168  296A               	goto	u381
  1700  0169  296B               	goto	u380
  1701  016A                     u381:	
  1702  016A  297A               	goto	l1073
  1703  016B                     u380:	
  1704  016B                     l1069:	
  1705  016B  0820               	movf	___aldiv@divisor,w
  1706  016C  02A4               	subwf	___aldiv@dividend,f
  1707  016D  0821               	movf	___aldiv@divisor+1,w
  1708  016E  1C03               	skipc
  1709  016F  0F21               	incfsz	___aldiv@divisor+1,w
  1710  0170  02A5               	subwf	___aldiv@dividend+1,f
  1711  0171  0822               	movf	___aldiv@divisor+2,w
  1712  0172  1C03               	skipc
  1713  0173  0F22               	incfsz	___aldiv@divisor+2,w
  1714  0174  02A6               	subwf	___aldiv@dividend+2,f
  1715  0175  0823               	movf	___aldiv@divisor+3,w
  1716  0176  1C03               	skipc
  1717  0177  0F23               	incfsz	___aldiv@divisor+3,w
  1718  0178  02A7               	subwf	___aldiv@dividend+3,f
  1719  0179                     l1071:	
  1720  0179  142A               	bsf	___aldiv@quotient,0
  1721  017A                     l1073:	
  1722  017A  3001               	movlw	1
  1723  017B                     u395:	
  1724  017B  1003               	clrc
  1725  017C  0CA3               	rrf	___aldiv@divisor+3,f
  1726  017D  0CA2               	rrf	___aldiv@divisor+2,f
  1727  017E  0CA1               	rrf	___aldiv@divisor+1,f
  1728  017F  0CA0               	rrf	___aldiv@divisor,f
  1729  0180  3EFF               	addlw	-1
  1730  0181  1D03               	skipz
  1731  0182  297B               	goto	u395
  1732  0183                     l1075:	
  1733  0183  3001               	movlw	1
  1734  0184  02A8               	subwf	___aldiv@counter,f
  1735  0185  1D03               	btfss	3,2
  1736  0186  2988               	goto	u401
  1737  0187  2989               	goto	u400
  1738  0188                     u401:	
  1739  0188  2950               	goto	l1065
  1740  0189                     u400:	
  1741  0189                     l1077:	
  1742  0189  0829               	movf	___aldiv@sign,w
  1743  018A  1903               	btfsc	3,2
  1744  018B  298D               	goto	u411
  1745  018C  298E               	goto	u410
  1746  018D                     u411:	
  1747  018D  2999               	goto	l1081
  1748  018E                     u410:	
  1749  018E                     l1079:	
  1750  018E  09AA               	comf	___aldiv@quotient,f
  1751  018F  09AB               	comf	___aldiv@quotient+1,f
  1752  0190  09AC               	comf	___aldiv@quotient+2,f
  1753  0191  09AD               	comf	___aldiv@quotient+3,f
  1754  0192  0AAA               	incf	___aldiv@quotient,f
  1755  0193  1903               	skipnz
  1756  0194  0AAB               	incf	___aldiv@quotient+1,f
  1757  0195  1903               	skipnz
  1758  0196  0AAC               	incf	___aldiv@quotient+2,f
  1759  0197  1903               	skipnz
  1760  0198  0AAD               	incf	___aldiv@quotient+3,f
  1761  0199                     l1081:	
  1762  0199  082D               	movf	___aldiv@quotient+3,w
  1763  019A  00A3               	movwf	?___aldiv+3
  1764  019B  082C               	movf	___aldiv@quotient+2,w
  1765  019C  00A2               	movwf	?___aldiv+2
  1766  019D  082B               	movf	___aldiv@quotient+1,w
  1767  019E  00A1               	movwf	?___aldiv+1
  1768  019F  082A               	movf	___aldiv@quotient,w
  1769  01A0  00A0               	movwf	?___aldiv
  1770  01A1                     l322:	
  1771  01A1  0008               	return
  1772  01A2                     __end_of___aldiv:	
  1773                           
  1774                           	psect	text7
  1775  001C                     __ptext7:	
  1776 ;; *************** function _ISR *****************
  1777 ;; Defined at:
  1778 ;;		line 57 in file "SPI_PIC.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;                  1    wreg      void 
  1785 ;; Registers used:
  1786 ;;		wreg, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 0/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1792 ;;      Params:         0       0       0       0       0
  1793 ;;      Locals:         0       0       0       0       0
  1794 ;;      Temps:          3       0       0       0       0
  1795 ;;      Totals:         3       0       0       0       0
  1796 ;;Total ram usage:        3 bytes
  1797 ;; Hardware stack levels used:    1
  1798 ;; Hardware stack levels required when called:    2
  1799 ;; This function calls:
  1800 ;;		_UART_READ
  1801 ;;		_spiRead
  1802 ;;		_spiWrite
  1803 ;; This function is called by:
  1804 ;;		Interrupt level 1
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           
  1809                           ;psect for function _ISR
  1810  001C                     _ISR:	
  1811  001C                     i1l1155:	
  1812                           
  1813                           ;SPI_PIC.c: 59:     if(PIR1bits.SSPIF==1){
  1814  001C  1283               	bcf	3,5	;RP0=0, select bank0
  1815  001D  1303               	bcf	3,6	;RP1=0, select bank0
  1816  001E  1D8C               	btfss	12,3	;volatile
  1817  001F  2821               	goto	u47_21
  1818  0020  2822               	goto	u47_20
  1819  0021                     u47_21:	
  1820  0021  2892               	goto	i1l86
  1821  0022                     u47_20:	
  1822  0022                     i1l1157:	
  1823                           
  1824                           ;SPI_PIC.c: 60:         RASPBERRY = spiRead();
  1825  0022  120A  118A  2326  120A  118A  	fcall	_spiRead
  1826  0027  00F6               	movwf	??_ISR
  1827  0028  0876               	movf	??_ISR,w
  1828  0029  00F1               	movwf	_RASPBERRY
  1829  002A                     i1l1159:	
  1830                           
  1831                           ;SPI_PIC.c: 62:         if(RASPBERRY == 0){
  1832  002A  0871               	movf	_RASPBERRY,w
  1833  002B  1D03               	btfss	3,2
  1834  002C  282E               	goto	u48_21
  1835  002D  282F               	goto	u48_20
  1836  002E                     u48_21:	
  1837  002E  283C               	goto	i1l1169
  1838  002F                     u48_20:	
  1839  002F                     i1l1161:	
  1840                           
  1841                           ;SPI_PIC.c: 63:             spiWrite(Temp);
  1842  002F  0873               	movf	_Temp,w
  1843  0030  120A  118A  233E  120A  118A  	fcall	_spiWrite
  1844  0035                     i1l1163:	
  1845                           
  1846                           ;SPI_PIC.c: 64:           SSPSTATbits.BF= 0;
  1847  0035  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0036  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0037  1014               	bcf	20,0	;volatile
  1850  0038                     i1l1165:	
  1851                           
  1852                           ;SPI_PIC.c: 65:           PIR1bits.SSPIF = 0;
  1853  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0039  1303               	bcf	3,6	;RP1=0, select bank0
  1855  003A  118C               	bcf	12,3	;volatile
  1856  003B  28FE               	goto	i1l88
  1857  003C                     i1l1169:	
  1858                           
  1859                           ;SPI_PIC.c: 68:         if(RASPBERRY == 1){
  1860  003C  0371               	decf	_RASPBERRY,w
  1861  003D  1D03               	btfss	3,2
  1862  003E  2840               	goto	u49_21
  1863  003F  2841               	goto	u49_20
  1864  0040                     u49_21:	
  1865  0040  284E               	goto	i1l1179
  1866  0041                     u49_20:	
  1867  0041                     i1l1171:	
  1868                           
  1869                           ;SPI_PIC.c: 69:             spiWrite(Parq);
  1870  0041  0872               	movf	_Parq,w
  1871  0042  120A  118A  233E  120A  118A  	fcall	_spiWrite
  1872  0047                     i1l1173:	
  1873                           
  1874                           ;SPI_PIC.c: 70:             SSPSTATbits.BF= 0;
  1875  0047  1683               	bsf	3,5	;RP0=1, select bank1
  1876  0048  1303               	bcf	3,6	;RP1=0, select bank1
  1877  0049  1014               	bcf	20,0	;volatile
  1878  004A                     i1l1175:	
  1879                           
  1880                           ;SPI_PIC.c: 71:           PIR1bits.SSPIF = 0;
  1881  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1882  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1883  004C  118C               	bcf	12,3	;volatile
  1884  004D  28FE               	goto	i1l88
  1885  004E                     i1l1179:	
  1886                           
  1887                           ;SPI_PIC.c: 74:         if(RASPBERRY == 2){
  1888  004E  3002               	movlw	2
  1889  004F  0671               	xorwf	_RASPBERRY,w
  1890  0050  1D03               	btfss	3,2
  1891  0051  2853               	goto	u50_21
  1892  0052  2854               	goto	u50_20
  1893  0053                     u50_21:	
  1894  0053  2861               	goto	i1l1189
  1895  0054                     u50_20:	
  1896  0054                     i1l1181:	
  1897                           
  1898                           ;SPI_PIC.c: 75:             spiWrite(Luz);
  1899  0054  0874               	movf	_Luz,w
  1900  0055  120A  118A  233E  120A  118A  	fcall	_spiWrite
  1901  005A                     i1l1183:	
  1902                           
  1903                           ;SPI_PIC.c: 76:             SSPSTATbits.BF= 0;
  1904  005A  1683               	bsf	3,5	;RP0=1, select bank1
  1905  005B  1303               	bcf	3,6	;RP1=0, select bank1
  1906  005C  1014               	bcf	20,0	;volatile
  1907  005D                     i1l1185:	
  1908                           
  1909                           ;SPI_PIC.c: 77:           PIR1bits.SSPIF = 0;
  1910  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1911  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1912  005F  118C               	bcf	12,3	;volatile
  1913  0060  28FE               	goto	i1l88
  1914  0061                     i1l1189:	
  1915                           
  1916                           ;SPI_PIC.c: 80:         if(RASPBERRY == 3){
  1917  0061  3003               	movlw	3
  1918  0062  0671               	xorwf	_RASPBERRY,w
  1919  0063  1D03               	btfss	3,2
  1920  0064  2866               	goto	u51_21
  1921  0065  2867               	goto	u51_20
  1922  0066                     u51_21:	
  1923  0066  2876               	goto	i1l1199
  1924  0067                     u51_20:	
  1925  0067                     i1l1191:	
  1926                           
  1927                           ;SPI_PIC.c: 81:             spiWrite(Presion);
  1928  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0069  0840               	movf	_Presion,w
  1931  006A  120A  118A  233E  120A  118A  	fcall	_spiWrite
  1932  006F                     i1l1193:	
  1933                           
  1934                           ;SPI_PIC.c: 82:             SSPSTATbits.BF= 0;
  1935  006F  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0070  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0071  1014               	bcf	20,0	;volatile
  1938  0072                     i1l1195:	
  1939                           
  1940                           ;SPI_PIC.c: 83:           PIR1bits.SSPIF = 0;
  1941  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1943  0074  118C               	bcf	12,3	;volatile
  1944  0075  28FE               	goto	i1l88
  1945  0076                     i1l1199:	
  1946                           
  1947                           ;SPI_PIC.c: 86:         if(RASPBERRY == 4){
  1948  0076  3004               	movlw	4
  1949  0077  0671               	xorwf	_RASPBERRY,w
  1950  0078  1D03               	btfss	3,2
  1951  0079  287B               	goto	u52_21
  1952  007A  287C               	goto	u52_20
  1953  007B                     u52_21:	
  1954  007B  288B               	goto	i1l92
  1955  007C                     u52_20:	
  1956  007C                     i1l1201:	
  1957                           
  1958                           ;SPI_PIC.c: 87:             spiWrite(ULTRA);
  1959  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1960  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1961  007E  0841               	movf	_ULTRA,w
  1962  007F  120A  118A  233E  120A  118A  	fcall	_spiWrite
  1963  0084                     i1l1203:	
  1964                           
  1965                           ;SPI_PIC.c: 88:            SSPSTATbits.BF= 0;
  1966  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1967  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1968  0086  1014               	bcf	20,0	;volatile
  1969  0087                     i1l1205:	
  1970                           
  1971                           ;SPI_PIC.c: 89:           PIR1bits.SSPIF = 0;
  1972  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1973  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1974  0089  118C               	bcf	12,3	;volatile
  1975  008A  28FE               	goto	i1l88
  1976  008B                     i1l92:	
  1977                           ;SPI_PIC.c: 91:         }
  1978                           
  1979                           
  1980                           ;SPI_PIC.c: 93:           SSPSTATbits.BF= 0;
  1981  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1982  008C  1303               	bcf	3,6	;RP1=0, select bank1
  1983  008D  1014               	bcf	20,0	;volatile
  1984                           
  1985                           ;SPI_PIC.c: 94:           PIR1bits.SSPIF = 0;
  1986  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1987  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0090  118C               	bcf	12,3	;volatile
  1989                           
  1990                           ;SPI_PIC.c: 98:            return;
  1991  0091  28FE               	goto	i1l88
  1992  0092                     i1l86:	
  1993                           ;SPI_PIC.c: 99:     }
  1994                           
  1995                           
  1996                           ;SPI_PIC.c: 100:     if(PIR1bits.RCIF == 1){
  1997  0092  1E8C               	btfss	12,5	;volatile
  1998  0093  2895               	goto	u53_21
  1999  0094  2896               	goto	u53_20
  2000  0095                     u53_21:	
  2001  0095  28FD               	goto	i1l93
  2002  0096                     u53_20:	
  2003  0096                     i1l1209:	
  2004                           
  2005                           ;SPI_PIC.c: 101:         if(S0 == 0){
  2006  0096  0870               	movf	_S0,w
  2007  0097  1D03               	btfss	3,2
  2008  0098  289A               	goto	u54_21
  2009  0099  289B               	goto	u54_20
  2010  009A                     u54_21:	
  2011  009A  28A9               	goto	i1l1219
  2012  009B                     u54_20:	
  2013  009B                     i1l1211:	
  2014                           
  2015                           ;SPI_PIC.c: 102:         Temp= UART_READ();
  2016  009B  120A  118A  232F  120A  118A  	fcall	_UART_READ
  2017  00A0  00F6               	movwf	??_ISR
  2018  00A1  0876               	movf	??_ISR,w
  2019  00A2  00F3               	movwf	_Temp
  2020  00A3                     i1l1213:	
  2021                           
  2022                           ;SPI_PIC.c: 103:         PIR1bits.RCIF = 0;
  2023  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  2024  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  2025  00A5  128C               	bcf	12,5	;volatile
  2026  00A6                     i1l1215:	
  2027                           
  2028                           ;SPI_PIC.c: 104:         S0=1;
  2029  00A6  01F0               	clrf	_S0
  2030  00A7  0AF0               	incf	_S0,f
  2031  00A8  28FE               	goto	i1l88
  2032  00A9                     i1l1219:	
  2033                           
  2034                           ;SPI_PIC.c: 107:          if(S0 == 1){
  2035  00A9  0370               	decf	_S0,w
  2036  00AA  1D03               	btfss	3,2
  2037  00AB  28AD               	goto	u55_21
  2038  00AC  28AE               	goto	u55_20
  2039  00AD                     u55_21:	
  2040  00AD  28BE               	goto	i1l1229
  2041  00AE                     u55_20:	
  2042  00AE                     i1l1221:	
  2043                           
  2044                           ;SPI_PIC.c: 108:         Parq= UART_READ();
  2045  00AE  120A  118A  232F  120A  118A  	fcall	_UART_READ
  2046  00B3  00F6               	movwf	??_ISR
  2047  00B4  0876               	movf	??_ISR,w
  2048  00B5  00F2               	movwf	_Parq
  2049  00B6                     i1l1223:	
  2050                           
  2051                           ;SPI_PIC.c: 109:         PIR1bits.RCIF = 0;
  2052  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  2053  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  2054  00B8  128C               	bcf	12,5	;volatile
  2055  00B9                     i1l1225:	
  2056                           
  2057                           ;SPI_PIC.c: 110:         S0=2;
  2058  00B9  3002               	movlw	2
  2059  00BA  00F6               	movwf	??_ISR
  2060  00BB  0876               	movf	??_ISR,w
  2061  00BC  00F0               	movwf	_S0
  2062  00BD  28FE               	goto	i1l88
  2063  00BE                     i1l1229:	
  2064                           
  2065                           ;SPI_PIC.c: 113:          if(S0 == 2){
  2066  00BE  3002               	movlw	2
  2067  00BF  0670               	xorwf	_S0,w
  2068  00C0  1D03               	btfss	3,2
  2069  00C1  28C3               	goto	u56_21
  2070  00C2  28C4               	goto	u56_20
  2071  00C3                     u56_21:	
  2072  00C3  28D4               	goto	i1l1239
  2073  00C4                     u56_20:	
  2074  00C4                     i1l1231:	
  2075                           
  2076                           ;SPI_PIC.c: 114:         Luz = UART_READ();
  2077  00C4  120A  118A  232F  120A  118A  	fcall	_UART_READ
  2078  00C9  00F6               	movwf	??_ISR
  2079  00CA  0876               	movf	??_ISR,w
  2080  00CB  00F4               	movwf	_Luz
  2081  00CC                     i1l1233:	
  2082                           
  2083                           ;SPI_PIC.c: 115:         PIR1bits.RCIF = 0;
  2084  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2085  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2086  00CE  128C               	bcf	12,5	;volatile
  2087  00CF                     i1l1235:	
  2088                           
  2089                           ;SPI_PIC.c: 116:         S0=3;
  2090  00CF  3003               	movlw	3
  2091  00D0  00F6               	movwf	??_ISR
  2092  00D1  0876               	movf	??_ISR,w
  2093  00D2  00F0               	movwf	_S0
  2094  00D3  28FE               	goto	i1l88
  2095  00D4                     i1l1239:	
  2096                           
  2097                           ;SPI_PIC.c: 119:          if(S0 == 3){
  2098  00D4  3003               	movlw	3
  2099  00D5  0670               	xorwf	_S0,w
  2100  00D6  1D03               	btfss	3,2
  2101  00D7  28D9               	goto	u57_21
  2102  00D8  28DA               	goto	u57_20
  2103  00D9                     u57_21:	
  2104  00D9  28EA               	goto	i1l1249
  2105  00DA                     u57_20:	
  2106  00DA                     i1l1241:	
  2107                           
  2108                           ;SPI_PIC.c: 120:         Presion= UART_READ();
  2109  00DA  120A  118A  232F  120A  118A  	fcall	_UART_READ
  2110  00DF  00F6               	movwf	??_ISR
  2111  00E0  0876               	movf	??_ISR,w
  2112  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2113  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2114  00E3  00C0               	movwf	_Presion
  2115  00E4                     i1l1243:	
  2116                           
  2117                           ;SPI_PIC.c: 121:         PIR1bits.RCIF = 0;
  2118  00E4  128C               	bcf	12,5	;volatile
  2119  00E5                     i1l1245:	
  2120                           
  2121                           ;SPI_PIC.c: 122:         S0=4;
  2122  00E5  3004               	movlw	4
  2123  00E6  00F6               	movwf	??_ISR
  2124  00E7  0876               	movf	??_ISR,w
  2125  00E8  00F0               	movwf	_S0
  2126  00E9  28FE               	goto	i1l88
  2127  00EA                     i1l1249:	
  2128                           
  2129                           ;SPI_PIC.c: 125:          if(S0 == 4){
  2130  00EA  3004               	movlw	4
  2131  00EB  0670               	xorwf	_S0,w
  2132  00EC  1D03               	btfss	3,2
  2133  00ED  28EF               	goto	u58_21
  2134  00EE  28F0               	goto	u58_20
  2135  00EF                     u58_21:	
  2136  00EF  28FD               	goto	i1l93
  2137  00F0                     u58_20:	
  2138  00F0                     i1l1251:	
  2139                           
  2140                           ;SPI_PIC.c: 126:         ULTRA= UART_READ();
  2141  00F0  120A  118A  232F  120A  118A  	fcall	_UART_READ
  2142  00F5  00F6               	movwf	??_ISR
  2143  00F6  0876               	movf	??_ISR,w
  2144  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2145  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2146  00F9  00C1               	movwf	_ULTRA
  2147  00FA                     i1l1253:	
  2148                           
  2149                           ;SPI_PIC.c: 127:         PIR1bits.RCIF = 0;
  2150  00FA  128C               	bcf	12,5	;volatile
  2151  00FB                     i1l1255:	
  2152                           
  2153                           ;SPI_PIC.c: 128:         S0 = 0;
  2154  00FB  01F0               	clrf	_S0
  2155  00FC  28FE               	goto	i1l88
  2156  00FD                     i1l93:	
  2157                           ;SPI_PIC.c: 131:     }
  2158                           
  2159                           
  2160                           ;SPI_PIC.c: 132:     PIR1bits.RCIF = 0;
  2161  00FD  128C               	bcf	12,5	;volatile
  2162  00FE                     i1l88:	
  2163                           ;SPI_PIC.c: 133:     return;
  2164                           
  2165  00FE  0878               	movf	??_ISR+2,w
  2166  00FF  008A               	movwf	10
  2167  0100  0E77               	swapf	(??_ISR+1)^(0+4294967168),w
  2168  0101  0083               	movwf	3
  2169  0102  0EFE               	swapf	btemp,f
  2170  0103  0E7E               	swapf	btemp,w
  2171  0104  0009               	retfie
  2172  0105                     __end_of_ISR:	
  2173                           
  2174                           	psect	intentry
  2175  0004                     __pintentry:	
  2176                           ;incstack = 0
  2177                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2178                           
  2179  0004                     interrupt_function:	
  2180  007E                     saved_w	set	btemp
  2181  0004  00FE               	movwf	btemp
  2182  0005  0E03               	swapf	3,w
  2183  0006  00F7               	movwf	??_ISR+1
  2184  0007  080A               	movf	10,w
  2185  0008  00F8               	movwf	??_ISR+2
  2186  0009  120A  118A  281C   	ljmp	_ISR
  2187                           
  2188                           	psect	text8
  2189  033E                     __ptext8:	
  2190 ;; *************** function _spiWrite *****************
  2191 ;; Defined at:
  2192 ;;		line 35 in file "SPI_SLAVE.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  dat             1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  dat             1    0[COMMON] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         1       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         1       0       0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_ISR
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _spiWrite
  2221  033E                     _spiWrite:	
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _spiWrite: [wreg]
  2225                           ;spiWrite@dat stored from wreg
  2226  033E  00F5               	movwf	spiWrite@dat
  2227  033F                     i1l1117:	
  2228                           
  2229                           ;SPI_SLAVE.c: 35: void spiWrite(char dat);SPI_SLAVE.c: 36: {;SPI_SLAVE.c: 37:     SSPBUF
      +                           = dat;
  2230  033F  0875               	movf	spiWrite@dat,w
  2231  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0342  0093               	movwf	19	;volatile
  2234  0343                     i1l153:	
  2235  0343  0008               	return
  2236  0344                     __end_of_spiWrite:	
  2237                           
  2238                           	psect	text9
  2239  0326                     __ptext9:	
  2240 ;; *************** function _spiRead *****************
  2241 ;; Defined at:
  2242 ;;		line 48 in file "SPI_SLAVE.c"
  2243 ;; Parameters:    Size  Location     Type
  2244 ;;		None
  2245 ;; Auto vars:     Size  Location     Type
  2246 ;;		None
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  1    wreg      unsigned char 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0, pclath, cstack
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       0       0       0       0
  2257 ;;      Locals:         0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0
  2259 ;;      Totals:         0       0       0       0       0
  2260 ;;Total ram usage:        0 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    1
  2263 ;; This function calls:
  2264 ;;		_spiReceiveWait
  2265 ;; This function is called by:
  2266 ;;		_ISR
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _spiRead
  2272  0326                     _spiRead:	
  2273  0326                     i1l1111:	
  2274                           ;incstack = 0
  2275                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2276                           
  2277                           
  2278                           ;SPI_SLAVE.c: 50:     spiReceiveWait();
  2279  0326  120A  118A  2337  120A  118A  	fcall	_spiReceiveWait
  2280  032B                     i1l1113:	
  2281                           
  2282                           ;SPI_SLAVE.c: 51:     return(SSPBUF);
  2283  032B  1283               	bcf	3,5	;RP0=0, select bank0
  2284  032C  1303               	bcf	3,6	;RP1=0, select bank0
  2285  032D  0813               	movf	19,w	;volatile
  2286  032E                     i1l161:	
  2287  032E  0008               	return
  2288  032F                     __end_of_spiRead:	
  2289                           
  2290                           	psect	text10
  2291  0337                     __ptext10:	
  2292 ;; *************** function _spiReceiveWait *****************
  2293 ;; Defined at:
  2294 ;;		line 30 in file "SPI_SLAVE.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		None
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2308 ;;      Params:         0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0
  2310 ;;      Temps:          0       0       0       0       0
  2311 ;;      Totals:         0       0       0       0       0
  2312 ;;Total ram usage:        0 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; This function calls:
  2315 ;;		Nothing
  2316 ;; This function is called by:
  2317 ;;		_spiRead
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           
  2322                           ;psect for function _spiReceiveWait
  2323  0337                     _spiReceiveWait:	
  2324  0337                     i1l1043:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _spiReceiveWait: []
  2327                           
  2328  0337                     i1l147:	
  2329                           ;SPI_SLAVE.c: 32:     while ( !SSPSTATbits.BF );
  2330                           
  2331  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2333  0339  1C14               	btfss	20,0	;volatile
  2334  033A  2B3C               	goto	u31_21
  2335  033B  2B3D               	goto	u31_20
  2336  033C                     u31_21:	
  2337  033C  2B37               	goto	i1l147
  2338  033D                     u31_20:	
  2339  033D                     i1l150:	
  2340  033D  0008               	return
  2341  033E                     __end_of_spiReceiveWait:	
  2342                           
  2343                           	psect	text11
  2344  032F                     __ptext11:	
  2345 ;; *************** function _UART_READ *****************
  2346 ;; Defined at:
  2347 ;;		line 23 in file "UART.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;		None
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  1    wreg      unsigned char 
  2354 ;; Registers used:
  2355 ;;		wreg
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       0       0       0       0
  2362 ;;      Locals:         0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         0       0       0       0       0
  2365 ;;Total ram usage:        0 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_ISR
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function _UART_READ
  2376  032F                     _UART_READ:	
  2377  032F                     i1l1101:	
  2378                           ;incstack = 0
  2379                           ; Regs used in _UART_READ: [wreg]
  2380                           
  2381                           
  2382                           ;UART.c: 24:     if(PIR1bits.RCIF==1){
  2383  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0331  1E8C               	btfss	12,5	;volatile
  2386  0332  2B34               	goto	u45_21
  2387  0333  2B35               	goto	u45_20
  2388  0334                     u45_21:	
  2389  0334  2B36               	goto	i1l19
  2390  0335                     u45_20:	
  2391  0335                     i1l1103:	
  2392                           
  2393                           ;UART.c: 25:         return RCREG;
  2394  0335  081A               	movf	26,w	;volatile
  2395  0336                     i1l19:	
  2396  0336  0008               	return
  2397  0337                     __end_of_UART_READ:	
  2398  007E                     btemp	set	126	;btemp
  2399  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     32      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_UART_WRITE
    _main->_initOsc
    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1113
                                             30 BANK0      2     2      0
                          _UART_INIT
                         _UART_WRITE
                            _initOsc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      31
                                              4 COMMON     1     1      0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     604
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      22
                                              1 COMMON     3     3      0
                          _UART_READ
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_WRITE
   _initOsc
   _setup
     _spiInit

 _ISR (ROOT)
   _UART_READ
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 20 05:03:30 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l22 031B  
                      l15 027C                        l25 0325                        _S0 0070  
                     l120 0297                       l121 029D                       l122 02A3  
                     l123 02A9                       l115 027F                       l124 02AF  
                     l116 02D9                       l125 02DA                       l117 0285  
                     l109 02FA                       l118 028B                       l119 0291  
                     l143 0314                       l312 0119                       l144 0319  
                     l322 01A1                       u400 0189                       u320 010C  
                     u401 0188                       u321 010B                       u410 018E  
                     u330 011D                       u411 018D                       u331 011C  
                     u340 013C                       u341 013B                       u360 0150  
                     u600 0228                       u361 014F                       u610 0241  
            __CFG_CPD$OFF 0000                       u355 0141                       u380 016B  
                     u460 0321                       _ISR 001C                       u381 016A  
                     u621 0253                       u605 0223                       u461 0320  
                     u622 0254                       u375 0152                       u623 0259  
                     u615 023C                       u624 025A                       u385 0167  
                     u625 025F                       u626 0260                       u395 017B  
                     u637 01CC                       u590 0304                       u591 0303  
                     u647 01DC                       u657 01EC                       u667 01FE  
                     u677 0210                       _Luz 0074              __CFG_LVP$OFF 0000  
                    ?_ISR 0075                      l1051 011D                      l1107 031B  
                    l1061 013F                      l1053 0128                      l1045 0105  
                    l1109 0321                      l1071 0179                      l1063 014C  
                    l1055 012C                      l1047 0108                      l1311 030A  
                    l1081 0199                      l1073 017A                      l1065 0150  
                    l1057 0134                      l1049 010C                      l1321 0274  
                    l1313 030C                      l1075 0183                      l1067 0159  
                    l1059 013C                      l1331 027B                      l1323 0275  
                    l1315 0313                      l1307 02FC                      l1069 016B  
                    l1077 0189                      l1325 0276                      l1317 0218  
                    l1309 0304                      l1341 02E3                      l1333 02DB  
                    l1079 018E                      l1327 0277                      l1319 0273  
                    l1351 02EC                      l1343 02E6                      l1335 02DF  
                    l1329 027A                      l1417 02BF                      l1353 02ED  
                    l1345 02E7                      l1337 02E1                      l1363 02B5  
                    l1355 02EE                      l1347 02EA                      l1339 02E2  
                    l1371 01A7                      l1357 02EF                      l1349 02EB  
                    l1381 01D0                      l1373 01AD                      l1359 027E  
                    l1391 01F8                      l1383 01D6                      l1375 01BC  
                    l1393 0202                      l1385 01E0                      l1377 01C0  
                    l1369 01A2                      l1395 020A                      l1387 01E6  
                    l1379 01C6                      l1389 01F0                      i1l19 0336  
                    i1l92 008B                      i1l93 00FD                      i1l86 0092  
                    i1l88 00FE                      _Parq 0072              __CFG_WRT$OFF 0000  
                    _Temp 0073                      _main 01A2                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0076  
         __end_of___aldiv 01A2                     ?_main 0075             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l150 033D                     i1l161 032E  
                   i1l153 0343                     i1l147 0337                     _RCREG 001A  
                   u31_20 033D                     u31_21 033C               ?_UART_WRITE 0075  
                   u50_20 0054                     u50_21 0053                     _SPBRG 0099  
                   u51_20 0067                     u51_21 0066                     _PORTB 0006  
                   u52_20 007C                     u52_21 007B                     u45_20 0335  
                   u53_20 0096                     u45_21 0334                     u53_21 0095  
                   u54_20 009B                     u54_21 009A                     u55_20 00AE  
                   u47_20 0022                     u55_21 00AD                     u47_21 0021  
                   u56_20 00C4                     u48_20 002F                     u56_21 00C3  
                   u48_21 002E                     u57_20 00DA                     u49_20 0041  
                   u57_21 00D9                     u49_21 0040                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   u58_20 00F0                     u58_21 00EF                     _ULTRA 0041  
                   _TXREG 0019        __size_of_UART_INIT 0065        __size_of_UART_READ 0008  
          __CFG_FCMEN$OFF 0000           __end_of_initOsc 02DB                     _setup 02DB  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 031A  
         __end_of_spiRead 032F                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0218  
                  ??_main 003E                    ?_setup 0075                    _ANSELH 0189  
                  i1l1101 032F                    i1l1103 0335                    i1l1111 0326  
                  i1l1113 032B                    i1l1201 007C                    i1l1043 0337  
                  i1l1211 009B                    i1l1203 0084                    i1l1117 033F  
                  i1l1221 00AE                    i1l1213 00A3                    i1l1205 0087  
                  i1l1231 00C4                    i1l1223 00B6                    i1l1215 00A6  
                  i1l1241 00DA                    i1l1233 00CC                    i1l1225 00B9  
                  i1l1209 0096                    i1l1161 002F                    i1l1251 00F0  
                  i1l1243 00E4                    i1l1235 00CF                    i1l1219 00A9  
                  i1l1171 0041                    i1l1163 0035                    i1l1155 001C  
                  i1l1253 00FA                    i1l1245 00E5                    i1l1229 00BE  
                  i1l1181 0054                    i1l1173 0047                    i1l1165 0038  
                  i1l1157 0022                    i1l1255 00FB                    i1l1239 00D4  
                  i1l1191 0067                    i1l1183 005A                    i1l1175 004A  
                  i1l1159 002A                    i1l1249 00EA                    i1l1193 006F  
                  i1l1185 005D                    i1l1169 003C                    i1l1195 0072  
                  i1l1179 004E                    i1l1189 0061                    i1l1199 0076  
             initOsc@frec 0079                    _TRISC3 043B                    _TRISC4 043C  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000       __size_of_UART_WRITE 000C         __end_of_UART_INIT 027D  
       __end_of_UART_READ 0337                 ??___aldiv 0079                 ??_initOsc 0020  
                  saved_w 007E          __end_of_spiWrite 0344                 ??_spiInit 0079  
               ??_spiRead 0075            UART_WRITE@data 0079   __end_of__initialization 0018  
          __pcstackCOMMON 0075             __end_of_setup 02FB                   ??_setup 007A  
              __pbssBANK0 0040                __pmaintext 01A2                __pintentry 0004  
 __size_of_spiReceiveWait 0007              ??_UART_WRITE 0079                   _SSPSTAT 0094  
      __end_of_UART_WRITE 0326                   _Presion 0040                 ?_spiWrite 0075  
                 ___aldiv 0105                   __ptext1 02DB                   __ptext2 02FB  
                 __ptext3 027D                   __ptext4 031A                   __ptext5 0218  
                 __ptext6 0105                   __ptext7 001C                   __ptext8 033E  
                 __ptext9 0326              __size_of_ISR 00E9                   _initOsc 027D  
        ___aldiv@dividend 0024                   _spiInit 02FB                   _spiRead 0326  
    end_of_initialization 0018                 _RASPBERRY 0071                 _RCSTAbits 0018  
        ___aldiv@quotient 002A                ??_spiWrite 0075                 _UART_INIT 0218  
               _UART_READ 032F                 _TRISDbits 0088               spiWrite@dat 0075  
               _TXSTAbits 0098            _spiReceiveWait 0337                ?_UART_INIT 002E  
              ?_UART_READ 0075       start_initialization 000F               __end_of_ISR 0105  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 033E               __pbssCOMMON 0070  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0075  
                ?___aldiv 0020               ??_UART_INIT 0032               ??_UART_READ 0075  
       __size_of_spiWrite 0006                  ?_initOsc 0075                  ?_spiInit 0020  
                ?_spiRead 0075            __size_of_setup 0020           ___aldiv@divisor 0020  
    spiInit@sTransmitEdge 0022         interrupt_function 0004           ___aldiv@counter 0028  
                _PIE1bits 008C        spiInit@sDataSample 0020                  _PIR1bits 000C  
        __size_of___aldiv 009D          __size_of_initOsc 005E                  __ptext10 0337  
                __ptext11 032F          __size_of_spiInit 001F          __size_of_spiRead 0009  
       __CFG_BOR4V$BOR40V 0000         UART_INIT@baudrate 002E             __size_of_main 0076  
                _spiWrite 033E              spiInit@sType 0079         spiInit@sClockIdle 0021  
              _INTCONbits 000B                  intlevel1 0000          ??_spiReceiveWait 0075  
              _OSCCONbits 008F                _UART_WRITE 031A              ___aldiv@sign 0029  
