

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 12 13:10:40 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	functab,global,class=ENTRY,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0013                     _SSPBUF	set	19
   445  0014                     _SSPCON	set	20
   446  000B                     _INTCONbits	set	11
   447  0019                     _TXREG	set	25
   448  001A                     _RCREG	set	26
   449  000C                     _PIR1bits	set	12
   450  0018                     _RCSTAbits	set	24
   451  0094                     _SSPSTATbits	set	148
   452  0094                     _SSPSTAT	set	148
   453  008F                     _OSCCONbits	set	143
   454  008C                     _PIE1bits	set	140
   455  0088                     _TRISDbits	set	136
   456  0088                     _TRISD	set	136
   457  0087                     _TRISC	set	135
   458  0086                     _TRISB	set	134
   459  0085                     _TRISA	set	133
   460  0098                     _TXSTAbits	set	152
   461  0099                     _SPBRG	set	153
   462  043B                     _TRISC3	set	1083
   463  043C                     _TRISC4	set	1084
   464  043D                     _TRISC5	set	1085
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467                           
   468                           ; #config settings
   469  0000                     
   470                           	psect	cinit
   471  07F7                     start_initialization:	
   472  07F7                     __initialization:	
   473                           
   474                           ; Clear objects allocated to COMMON
   475  07F7  01FC               	clrf	__pbssCOMMON& (0+127)
   476  07F8  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK0
   479  07F9  1283               	bcf	3,5	;RP0=0, select bank0
   480  07FA  1303               	bcf	3,6	;RP1=0, select bank0
   481  07FB  01B6               	clrf	__pbssBANK0& (0+127)
   482  07FC                     end_of_initialization:	
   483                           ;End of C runtime variable initialization code
   484                           
   485  07FC                     __end_of__initialization:	
   486  07FC  0183               	clrf	3
   487  07FD  120A  118A  2EE2   	ljmp	_main	;jump to C main() function
   488                           
   489                           	psect	bssCOMMON
   490  007C                     __pbssCOMMON:	
   491  007C                     _Temp:	
   492  007C                     	ds	1
   493  007D                     _Luz:	
   494  007D                     	ds	1
   495                           
   496                           	psect	bssBANK0
   497  0036                     __pbssBANK0:	
   498  0036                     _Parq:	
   499  0036                     	ds	1
   500                           
   501                           	psect	cstackCOMMON
   502  0070                     __pcstackCOMMON:	
   503  0070                     ?_setup:	
   504  0070                     ?_initOsc:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ??_initOsc:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_spiWrite:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_spiWrite:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_spiInit:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_UART_READ:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ??_UART_READ:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_main:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?___aldiv:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     spiInit@sDataSample:	
   532                           ; 4 bytes @ 0x0
   533                           
   534  0070                     spiWrite@dat:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ___aldiv@divisor:	
   538                           ; 1 bytes @ 0x0
   539                           
   540                           
   541                           ; 4 bytes @ 0x0
   542  0070                     	ds	1
   543  0071                     spiInit@sClockIdle:	
   544                           
   545                           ; 1 bytes @ 0x1
   546  0071                     	ds	1
   547  0072                     initOsc@frec:	
   548  0072                     spiInit@sTransmitEdge:	
   549                           ; 1 bytes @ 0x2
   550                           
   551                           
   552                           ; 1 bytes @ 0x2
   553  0072                     	ds	1
   554  0073                     ??_spiInit:	
   555  0073                     spiInit@sType:	
   556                           ; 1 bytes @ 0x3
   557                           
   558                           
   559                           ; 1 bytes @ 0x3
   560  0073                     	ds	1
   561  0074                     ??_setup:	
   562  0074                     ___aldiv@dividend:	
   563                           ; 1 bytes @ 0x4
   564                           
   565                           
   566                           ; 4 bytes @ 0x4
   567  0074                     	ds	4
   568  0078                     ??___aldiv:	
   569                           
   570                           ; 1 bytes @ 0x8
   571  0078                     	ds	1
   572  0079                     ??_main:	
   573                           
   574                           ; 1 bytes @ 0x9
   575  0079                     	ds	3
   576                           
   577                           	psect	cstackBANK0
   578  0020                     __pcstackBANK0:	
   579  0020                     ___aldiv@counter:	
   580                           
   581                           ; 1 bytes @ 0x0
   582  0020                     	ds	1
   583  0021                     ___aldiv@sign:	
   584                           
   585                           ; 1 bytes @ 0x1
   586  0021                     	ds	1
   587  0022                     ___aldiv@quotient:	
   588                           
   589                           ; 4 bytes @ 0x2
   590  0022                     	ds	4
   591  0026                     ?_UART_INIT:	
   592  0026                     UART_INIT@baudrate:	
   593                           ; 1 bytes @ 0x6
   594                           
   595                           
   596                           ; 4 bytes @ 0x6
   597  0026                     	ds	4
   598  002A                     ??_UART_INIT:	
   599                           
   600                           ; 1 bytes @ 0xA
   601  002A                     	ds	12
   602                           
   603                           	psect	maintext
   604  06E2                     __pmaintext:	
   605 ;;
   606 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   607 ;;
   608 ;; *************** function _main *****************
   609 ;; Defined at:
   610 ;;		line 48 in file "SPI_PIC.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;		None
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  1    wreg      void 
   617 ;; Registers used:
   618 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : B00/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   624 ;;      Params:         0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0
   626 ;;      Temps:          3       0       0       0       0
   627 ;;      Totals:         3       0       0       0       0
   628 ;;Total ram usage:        3 bytes
   629 ;; Hardware stack levels required when called:    2
   630 ;; This function calls:
   631 ;;		_UART_INIT
   632 ;;		_UART_READ
   633 ;;		_initOsc
   634 ;;		_setup
   635 ;;		_spiWrite
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           
   642                           ;psect for function _main
   643  06E2                     _main:	
   644  06E2                     l990:	
   645                           ;incstack = 0
   646                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   647                           
   648                           
   649                           ;SPI_PIC.c: 49:     setup();
   650  06E2  120A  118A  2608  120A  118A  	fcall	_setup
   651  06E7                     l992:	
   652                           
   653                           ;SPI_PIC.c: 50:     initOsc(7);
   654  06E7  3007               	movlw	7
   655  06E8  120A  118A  2623  120A  118A  	fcall	_initOsc
   656  06ED                     l994:	
   657                           
   658                           ;SPI_PIC.c: 51:     UART_INIT(9600);
   659  06ED  3000               	movlw	0
   660  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   661  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   662  06F0  00A9               	movwf	UART_INIT@baudrate+3
   663  06F1  3000               	movlw	0
   664  06F2  00A8               	movwf	UART_INIT@baudrate+2
   665  06F3  3025               	movlw	37
   666  06F4  00A7               	movwf	UART_INIT@baudrate+1
   667  06F5  3080               	movlw	128
   668  06F6  00A6               	movwf	UART_INIT@baudrate
   669  06F7  120A  118A  267F  120A  118A  	fcall	_UART_INIT
   670  06FC                     l996:	
   671                           
   672                           ;SPI_PIC.c: 53:         _delay((unsigned long)((100)*(8000000/4000.0)));
   673  06FC  3002               	movlw	2
   674  06FD  00FB               	movwf	??_main+2
   675  06FE  3004               	movlw	4
   676  06FF  00FA               	movwf	??_main+1
   677  0700  30BA               	movlw	186
   678  0701  00F9               	movwf	??_main
   679  0702                     u337:	
   680  0702  0BF9               	decfsz	??_main,f
   681  0703  2F02               	goto	u337
   682  0704  0BFA               	decfsz	??_main+1,f
   683  0705  2F02               	goto	u337
   684  0706  0BFB               	decfsz	??_main+2,f
   685  0707  2F02               	goto	u337
   686  0708  0000               	nop
   687  0709                     l998:	
   688                           
   689                           ;SPI_PIC.c: 54:         Luz = UART_READ();
   690  0709  120A  118A  25E9  120A  118A  	fcall	_UART_READ
   691  070E  00F9               	movwf	??_main
   692  070F  0879               	movf	??_main,w
   693  0710  00FD               	movwf	_Luz
   694  0711                     l1000:	
   695                           
   696                           ;SPI_PIC.c: 55:         spiWrite(Luz);
   697  0711  087D               	movf	_Luz,w
   698  0712  120A  118A  25E3  120A  118A  	fcall	_spiWrite
   699  0717                     l1002:	
   700                           
   701                           ;SPI_PIC.c: 56:         _delay((unsigned long)((200)*(8000000/4000.0)));
   702  0717  3003               	movlw	3
   703  0718  00FB               	movwf	??_main+2
   704  0719  3008               	movlw	8
   705  071A  00FA               	movwf	??_main+1
   706  071B  3077               	movlw	119
   707  071C  00F9               	movwf	??_main
   708  071D                     u347:	
   709  071D  0BF9               	decfsz	??_main,f
   710  071E  2F1D               	goto	u347
   711  071F  0BFA               	decfsz	??_main+1,f
   712  0720  2F1D               	goto	u347
   713  0721  0BFB               	decfsz	??_main+2,f
   714  0722  2F1D               	goto	u347
   715  0723                     l1004:	
   716                           
   717                           ;SPI_PIC.c: 57:         Temp = UART_READ();
   718  0723  120A  118A  25E9  120A  118A  	fcall	_UART_READ
   719  0728  00F9               	movwf	??_main
   720  0729  0879               	movf	??_main,w
   721  072A  00FC               	movwf	_Temp
   722  072B                     l1006:	
   723                           
   724                           ;SPI_PIC.c: 58:         spiWrite(Temp);
   725  072B  087C               	movf	_Temp,w
   726  072C  120A  118A  25E3  120A  118A  	fcall	_spiWrite
   727  0731                     l1008:	
   728                           
   729                           ;SPI_PIC.c: 59:         _delay((unsigned long)((200)*(8000000/4000.0)));
   730  0731  3003               	movlw	3
   731  0732  00FB               	movwf	??_main+2
   732  0733  3008               	movlw	8
   733  0734  00FA               	movwf	??_main+1
   734  0735  3077               	movlw	119
   735  0736  00F9               	movwf	??_main
   736  0737                     u357:	
   737  0737  0BF9               	decfsz	??_main,f
   738  0738  2F37               	goto	u357
   739  0739  0BFA               	decfsz	??_main+1,f
   740  073A  2F37               	goto	u357
   741  073B  0BFB               	decfsz	??_main+2,f
   742  073C  2F37               	goto	u357
   743  073D                     l1010:	
   744                           
   745                           ;SPI_PIC.c: 60:         Parq = UART_READ;
   746  073D  3001               	movlw	(low (fp__UART_READ-fpbase))& (0+255)
   747  073E  00F9               	movwf	??_main
   748  073F  0879               	movf	??_main,w
   749  0740  1283               	bcf	3,5	;RP0=0, select bank0
   750  0741  1303               	bcf	3,6	;RP1=0, select bank0
   751  0742  00B6               	movwf	_Parq
   752  0743                     l1012:	
   753                           
   754                           ;SPI_PIC.c: 61:         spiWrite(Parq);
   755  0743  0836               	movf	_Parq,w
   756  0744  120A  118A  25E3  120A  118A  	fcall	_spiWrite
   757  0749                     l1014:	
   758                           
   759                           ;SPI_PIC.c: 62:         _delay((unsigned long)((300)*(8000000/4000.0)));
   760  0749  3004               	movlw	4
   761  074A  00FB               	movwf	??_main+2
   762  074B  300C               	movlw	12
   763  074C  00FA               	movwf	??_main+1
   764  074D  3033               	movlw	51
   765  074E  00F9               	movwf	??_main
   766  074F                     u367:	
   767  074F  0BF9               	decfsz	??_main,f
   768  0750  2F4F               	goto	u367
   769  0751  0BFA               	decfsz	??_main+1,f
   770  0752  2F4F               	goto	u367
   771  0753  0BFB               	decfsz	??_main+2,f
   772  0754  2F4F               	goto	u367
   773  0755  2F56               	nop2
   774  0756  2EFC               	goto	l996
   775  0757  120A  118A  2800   	ljmp	start
   776  075A                     __end_of_main:	
   777                           
   778                           	psect	text1
   779  05E3                     __ptext1:	
   780 ;; *************** function _spiWrite *****************
   781 ;; Defined at:
   782 ;;		line 35 in file "SPI_SLAVE.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;  dat             1    wreg     unsigned char 
   785 ;; Auto vars:     Size  Location     Type
   786 ;;  dat             1    0[COMMON] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         1       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         1       0       0       0       0
   800 ;;Total ram usage:        1 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; This function calls:
   803 ;;		Nothing
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _spiWrite
   811  05E3                     _spiWrite:	
   812                           
   813                           ;incstack = 0
   814                           ; Regs used in _spiWrite: [wreg]
   815                           ;spiWrite@dat stored from wreg
   816  05E3  00F0               	movwf	spiWrite@dat
   817  05E4                     l988:	
   818                           
   819                           ;SPI_SLAVE.c: 35: void spiWrite(char dat);SPI_SLAVE.c: 36: {;SPI_SLAVE.c: 37:     SSPBUF
      +                           = dat;
   820  05E4  0870               	movf	spiWrite@dat,w
   821  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   822  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   823  05E7  0093               	movwf	19	;volatile
   824  05E8                     l118:	
   825  05E8  0008               	return
   826  05E9                     __end_of_spiWrite:	
   827                           
   828                           	psect	text2
   829  0608                     __ptext2:	
   830 ;; *************** function _setup *****************
   831 ;; Defined at:
   832 ;;		line 68 in file "SPI_PIC.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      void 
   839 ;; Registers used:
   840 ;;		wreg, status,2, status,0, pclath, cstack
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   846 ;;      Params:         0       0       0       0       0
   847 ;;      Locals:         0       0       0       0       0
   848 ;;      Temps:          0       0       0       0       0
   849 ;;      Totals:         0       0       0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    1
   853 ;; This function calls:
   854 ;;		_spiInit
   855 ;; This function is called by:
   856 ;;		_main
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _setup
   862  0608                     _setup:	
   863  0608                     l958:	
   864                           ;incstack = 0
   865                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   866                           
   867                           
   868                           ;SPI_PIC.c: 69:     TRISA = 0;
   869  0608  1683               	bsf	3,5	;RP0=1, select bank1
   870  0609  1303               	bcf	3,6	;RP1=0, select bank1
   871  060A  0185               	clrf	5	;volatile
   872                           
   873                           ;SPI_PIC.c: 70:     TRISB = 0;
   874  060B  0186               	clrf	6	;volatile
   875  060C                     l960:	
   876                           
   877                           ;SPI_PIC.c: 71:     TRISC = 0b11010000;
   878  060C  30D0               	movlw	208
   879  060D  0087               	movwf	7	;volatile
   880  060E                     l962:	
   881                           
   882                           ;SPI_PIC.c: 72:     TRISD = 0;
   883  060E  0188               	clrf	8	;volatile
   884  060F                     l964:	
   885                           
   886                           ;SPI_PIC.c: 73:     TRISDbits.TRISD1 = 0;
   887  060F  1088               	bcf	8,1	;volatile
   888  0610                     l966:	
   889                           
   890                           ;SPI_PIC.c: 74:     ANSEL = 0;
   891  0610  1683               	bsf	3,5	;RP0=1, select bank3
   892  0611  1703               	bsf	3,6	;RP1=1, select bank3
   893  0612  0188               	clrf	8	;volatile
   894  0613                     l968:	
   895                           
   896                           ;SPI_PIC.c: 75:     ANSELH = 0;
   897  0613  0189               	clrf	9	;volatile
   898  0614                     l970:	
   899                           
   900                           ;SPI_PIC.c: 76:     PIE1bits.RCIE = 1;
   901  0614  1683               	bsf	3,5	;RP0=1, select bank1
   902  0615  1303               	bcf	3,6	;RP1=0, select bank1
   903  0616  168C               	bsf	12,5	;volatile
   904  0617                     l972:	
   905                           
   906                           ;SPI_PIC.c: 77:     INTCONbits.PEIE = 1;
   907  0617  170B               	bsf	11,6	;volatile
   908  0618                     l974:	
   909                           
   910                           ;SPI_PIC.c: 78:     INTCONbits.GIE = 1;
   911  0618  178B               	bsf	11,7	;volatile
   912  0619                     l976:	
   913                           
   914                           ;SPI_PIC.c: 79:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   915  0619  01F0               	clrf	spiInit@sDataSample
   916  061A  01F1               	clrf	spiInit@sClockIdle
   917  061B  01F2               	clrf	spiInit@sTransmitEdge
   918  061C  3024               	movlw	36
   919  061D  120A  118A  25F1  120A  118A  	fcall	_spiInit
   920  0622                     l74:	
   921  0622  0008               	return
   922  0623                     __end_of_setup:	
   923                           
   924                           	psect	text3
   925  05F1                     __ptext3:	
   926 ;; *************** function _spiInit *****************
   927 ;; Defined at:
   928 ;;		line 12 in file "SPI_SLAVE.c"
   929 ;; Parameters:    Size  Location     Type
   930 ;;  sType           1    wreg     enum E1264
   931 ;;  sDataSample     1    0[COMMON] enum E1272
   932 ;;  sClockIdle      1    1[COMMON] enum E1276
   933 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  sType           1    3[COMMON] enum E1264
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         3       0       0       0       0
   946 ;;      Locals:         1       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0
   948 ;;      Totals:         4       0       0       0       0
   949 ;;Total ram usage:        4 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; This function calls:
   952 ;;		Nothing
   953 ;; This function is called by:
   954 ;;		_setup
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           
   959                           ;psect for function _spiInit
   960  05F1                     _spiInit:	
   961                           
   962                           ;incstack = 0
   963                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   964                           ;spiInit@sType stored from wreg
   965  05F1  00F3               	movwf	spiInit@sType
   966  05F2                     l886:	
   967                           
   968                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5=0;
   969  05F2  1683               	bsf	3,5	;RP0=1, select bank1
   970  05F3  1303               	bcf	3,6	;RP1=0, select bank1
   971  05F4  1287               	bcf	7,5	;volatile
   972                           
   973                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
   974  05F5  1607               	bsf	7,4	;volatile
   975                           
   976                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
   977  05F6  1D73               	btfss	spiInit@sType,2
   978  05F7  2DF9               	goto	u181
   979  05F8  2DFA               	goto	u180
   980  05F9                     u181:	
   981  05F9  2DFE               	goto	l892
   982  05FA                     u180:	
   983  05FA                     l888:	
   984                           
   985                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
   986  05FA  0872               	movf	spiInit@sTransmitEdge,w
   987  05FB  0094               	movwf	20	;volatile
   988  05FC                     l890:	
   989                           
   990                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
   991  05FC  1587               	bsf	7,3	;volatile
   992                           
   993                           ;SPI_SLAVE.c: 20:     }
   994  05FD  2E02               	goto	l108
   995  05FE                     l892:	
   996                           
   997                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   998  05FE  0870               	movf	spiInit@sDataSample,w
   999  05FF  0472               	iorwf	spiInit@sTransmitEdge,w
  1000  0600  0094               	movwf	20	;volatile
  1001  0601                     l894:	
  1002                           
  1003                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
  1004  0601  1187               	bcf	7,3	;volatile
  1005  0602                     l108:	
  1006                           ;SPI_SLAVE.c: 25:     }
  1007                           
  1008                           
  1009                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
  1010  0602  0873               	movf	spiInit@sType,w
  1011  0603  0471               	iorwf	spiInit@sClockIdle,w
  1012  0604  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0605  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0606  0094               	movwf	20	;volatile
  1015  0607                     l109:	
  1016  0607  0008               	return
  1017  0608                     __end_of_spiInit:	
  1018                           
  1019                           	psect	text4
  1020  0623                     __ptext4:	
  1021 ;; *************** function _initOsc *****************
  1022 ;; Defined at:
  1023 ;;		line 8 in file "OSCI.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  frec            1    wreg     unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  frec            1    2[COMMON] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0
  1039 ;;      Temps:          2       0       0       0       0
  1040 ;;      Totals:         3       0       0       0       0
  1041 ;;Total ram usage:        3 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           
  1051                           ;psect for function _initOsc
  1052  0623                     _initOsc:	
  1053                           
  1054                           ;incstack = 0
  1055                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1056                           ;initOsc@frec stored from wreg
  1057  0623  00F2               	movwf	initOsc@frec
  1058  0624                     l978:	
  1059                           
  1060                           ;OSCI.c: 9:     switch(frec){
  1061  0624  2E5B               	goto	l982
  1062  0625                     l80:	
  1063                           ;OSCI.c: 10:         case 0:
  1064                           
  1065                           
  1066                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
  1067  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1068  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1069  0627  120F               	bcf	15,4	;volatile
  1070                           
  1071                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
  1072  0628  128F               	bcf	15,5	;volatile
  1073                           
  1074                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
  1075  0629  130F               	bcf	15,6	;volatile
  1076                           
  1077                           ;OSCI.c: 14:             break;
  1078  062A  2E7D               	goto	l81
  1079  062B                     l82:	
  1080                           ;OSCI.c: 15:         case 1:
  1081                           
  1082                           
  1083                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
  1084  062B  1683               	bsf	3,5	;RP0=1, select bank1
  1085  062C  1303               	bcf	3,6	;RP1=0, select bank1
  1086  062D  160F               	bsf	15,4	;volatile
  1087                           
  1088                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
  1089  062E  128F               	bcf	15,5	;volatile
  1090                           
  1091                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
  1092  062F  130F               	bcf	15,6	;volatile
  1093                           
  1094                           ;OSCI.c: 19:             break;
  1095  0630  2E7D               	goto	l81
  1096  0631                     l83:	
  1097                           ;OSCI.c: 20:         case 2:
  1098                           
  1099                           
  1100                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1101  0631  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0632  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0633  120F               	bcf	15,4	;volatile
  1104                           
  1105                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1106  0634  168F               	bsf	15,5	;volatile
  1107                           
  1108                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1109  0635  130F               	bcf	15,6	;volatile
  1110                           
  1111                           ;OSCI.c: 24:             break;
  1112  0636  2E7D               	goto	l81
  1113  0637                     l84:	
  1114                           ;OSCI.c: 25:         case 3:
  1115                           
  1116                           
  1117                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1118  0637  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0638  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0639  160F               	bsf	15,4	;volatile
  1121                           
  1122                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1123  063A  168F               	bsf	15,5	;volatile
  1124                           
  1125                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1126  063B  130F               	bcf	15,6	;volatile
  1127                           
  1128                           ;OSCI.c: 29:             break;
  1129  063C  2E7D               	goto	l81
  1130  063D                     l85:	
  1131                           ;OSCI.c: 30:         case 4:
  1132                           
  1133                           
  1134                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1135  063D  1683               	bsf	3,5	;RP0=1, select bank1
  1136  063E  1303               	bcf	3,6	;RP1=0, select bank1
  1137  063F  120F               	bcf	15,4	;volatile
  1138                           
  1139                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1140  0640  128F               	bcf	15,5	;volatile
  1141                           
  1142                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1143  0641  170F               	bsf	15,6	;volatile
  1144                           
  1145                           ;OSCI.c: 34:             break;
  1146  0642  2E7D               	goto	l81
  1147  0643                     l86:	
  1148                           ;OSCI.c: 35:         case 5:
  1149                           
  1150                           
  1151                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1152  0643  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0644  1303               	bcf	3,6	;RP1=0, select bank1
  1154  0645  160F               	bsf	15,4	;volatile
  1155                           
  1156                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1157  0646  128F               	bcf	15,5	;volatile
  1158                           
  1159                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1160  0647  170F               	bsf	15,6	;volatile
  1161                           
  1162                           ;OSCI.c: 39:             break;
  1163  0648  2E7D               	goto	l81
  1164  0649                     l87:	
  1165                           ;OSCI.c: 40:         case 6:
  1166                           
  1167                           
  1168                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1169  0649  1683               	bsf	3,5	;RP0=1, select bank1
  1170  064A  1303               	bcf	3,6	;RP1=0, select bank1
  1171  064B  120F               	bcf	15,4	;volatile
  1172                           
  1173                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1174  064C  168F               	bsf	15,5	;volatile
  1175                           
  1176                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1177  064D  170F               	bsf	15,6	;volatile
  1178                           
  1179                           ;OSCI.c: 44:             break;
  1180  064E  2E7D               	goto	l81
  1181  064F                     l88:	
  1182                           ;OSCI.c: 45:         case 7:
  1183                           
  1184                           
  1185                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1186  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0650  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0651  160F               	bsf	15,4	;volatile
  1189                           
  1190                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1191  0652  168F               	bsf	15,5	;volatile
  1192                           
  1193                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1194  0653  170F               	bsf	15,6	;volatile
  1195                           
  1196                           ;OSCI.c: 49:             break;
  1197  0654  2E7D               	goto	l81
  1198  0655                     l89:	
  1199                           ;OSCI.c: 50:         default:
  1200                           
  1201                           
  1202                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1203  0655  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0656  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0657  120F               	bcf	15,4	;volatile
  1206                           
  1207                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1208  0658  168F               	bsf	15,5	;volatile
  1209                           
  1210                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1211  0659  170F               	bsf	15,6	;volatile
  1212                           
  1213                           ;OSCI.c: 54:             break;
  1214  065A  2E7D               	goto	l81
  1215  065B                     l982:	
  1216  065B  0872               	movf	initOsc@frec,w
  1217  065C  00F0               	movwf	??_initOsc
  1218  065D  01F1               	clrf	??_initOsc+1
  1219                           
  1220                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1221                           ; Switch size 1, requested type "simple"
  1222                           ; Number of cases is 1, Range of values is 0 to 0
  1223                           ; switch strategies available:
  1224                           ; Name         Instructions Cycles
  1225                           ; simple_byte            4     3 (average)
  1226                           ; direct_byte           11     8 (fixed)
  1227                           ; jumptable            260     6 (fixed)
  1228                           ;	Chosen strategy is simple_byte
  1229  065E  0871               	movf	??_initOsc+1,w
  1230  065F  3A00               	xorlw	0	; case 0
  1231  0660  1903               	skipnz
  1232  0661  2E63               	goto	l1036
  1233  0662  2E55               	goto	l89
  1234  0663                     l1036:	
  1235                           
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 8, Range of values is 0 to 7
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte           25    13 (average)
  1241                           ; direct_byte           32     8 (fixed)
  1242                           ; jumptable            260     6 (fixed)
  1243                           ;	Chosen strategy is simple_byte
  1244  0663  0870               	movf	??_initOsc,w
  1245  0664  3A00               	xorlw	0	; case 0
  1246  0665  1903               	skipnz
  1247  0666  2E25               	goto	l80
  1248  0667  3A01               	xorlw	1	; case 1
  1249  0668  1903               	skipnz
  1250  0669  2E2B               	goto	l82
  1251  066A  3A03               	xorlw	3	; case 2
  1252  066B  1903               	skipnz
  1253  066C  2E31               	goto	l83
  1254  066D  3A01               	xorlw	1	; case 3
  1255  066E  1903               	skipnz
  1256  066F  2E37               	goto	l84
  1257  0670  3A07               	xorlw	7	; case 4
  1258  0671  1903               	skipnz
  1259  0672  2E3D               	goto	l85
  1260  0673  3A01               	xorlw	1	; case 5
  1261  0674  1903               	skipnz
  1262  0675  2E43               	goto	l86
  1263  0676  3A03               	xorlw	3	; case 6
  1264  0677  1903               	skipnz
  1265  0678  2E49               	goto	l87
  1266  0679  3A01               	xorlw	1	; case 7
  1267  067A  1903               	skipnz
  1268  067B  2E4F               	goto	l88
  1269  067C  2E55               	goto	l89
  1270  067D                     l81:	
  1271                           
  1272                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1273  067D  140F               	bsf	15,0	;volatile
  1274  067E                     l90:	
  1275  067E  0008               	return
  1276  067F                     __end_of_initOsc:	
  1277                           
  1278                           	psect	text5
  1279  05E9                     __ptext5:	
  1280 ;; *************** function _UART_READ *****************
  1281 ;; Defined at:
  1282 ;;		line 23 in file "UART.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      unsigned char 
  1289 ;; Registers used:
  1290 ;;		wreg
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1296 ;;      Params:         0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0
  1299 ;;      Totals:         0       0       0       0       0
  1300 ;;Total ram usage:        0 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _UART_READ
  1311  05E9                     _UART_READ:	
  1312  05E9                     l952:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _UART_READ: [wreg]
  1315                           
  1316                           
  1317                           ;UART.c: 24:     if(PIR1bits.RCIF==1){
  1318  05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1319  05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1320  05EB  1E8C               	btfss	12,5	;volatile
  1321  05EC  2DEE               	goto	u321
  1322  05ED  2DEF               	goto	u320
  1323  05EE                     u321:	
  1324  05EE  2DF0               	goto	l19
  1325  05EF                     u320:	
  1326  05EF                     l954:	
  1327                           
  1328                           ;UART.c: 25:         return RCREG;
  1329  05EF  081A               	movf	26,w	;volatile
  1330  05F0                     l19:	
  1331  05F0  0008               	return
  1332  05F1                     __end_of_UART_READ:	
  1333                           
  1334                           	psect	text6
  1335  067F                     __ptext6:	
  1336 ;; *************** function _UART_INIT *****************
  1337 ;; Defined at:
  1338 ;;		line 6 in file "UART.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  baudrate        4    6[BANK0 ] const long 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      unsigned char 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, pclath, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       4       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          0      12       0       0       0
  1355 ;;      Totals:         0      16       0       0       0
  1356 ;;Total ram usage:       16 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		___aldiv
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _UART_INIT
  1368  067F                     _UART_INIT:	
  1369  067F                     l936:	
  1370                           ;incstack = 0
  1371                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1372                           
  1373                           
  1374                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1375  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0681  0826               	movf	UART_INIT@baudrate,w
  1378  0682  00AA               	movwf	??_UART_INIT
  1379  0683  0827               	movf	UART_INIT@baudrate+1,w
  1380  0684  00AB               	movwf	??_UART_INIT+1
  1381  0685  0828               	movf	UART_INIT@baudrate+2,w
  1382  0686  00AC               	movwf	??_UART_INIT+2
  1383  0687  0829               	movf	UART_INIT@baudrate+3,w
  1384  0688  00AD               	movwf	??_UART_INIT+3
  1385  0689  3004               	movlw	4
  1386  068A                     u295:	
  1387  068A  1003               	clrc
  1388  068B  0DAA               	rlf	??_UART_INIT,f
  1389  068C  0DAB               	rlf	??_UART_INIT+1,f
  1390  068D  0DAC               	rlf	??_UART_INIT+2,f
  1391  068E  0DAD               	rlf	??_UART_INIT+3,f
  1392  068F                     u290:	
  1393  068F  3EFF               	addlw	-1
  1394  0690  1D03               	skipz
  1395  0691  2E8A               	goto	u295
  1396  0692  082D               	movf	??_UART_INIT+3,w
  1397  0693  00F3               	movwf	___aldiv@divisor+3
  1398  0694  082C               	movf	??_UART_INIT+2,w
  1399  0695  00F2               	movwf	___aldiv@divisor+2
  1400  0696  082B               	movf	??_UART_INIT+1,w
  1401  0697  00F1               	movwf	___aldiv@divisor+1
  1402  0698  082A               	movf	??_UART_INIT,w
  1403  0699  00F0               	movwf	___aldiv@divisor
  1404  069A  0826               	movf	UART_INIT@baudrate,w
  1405  069B  00AE               	movwf	??_UART_INIT+4
  1406  069C  0827               	movf	UART_INIT@baudrate+1,w
  1407  069D  00AF               	movwf	??_UART_INIT+5
  1408  069E  0828               	movf	UART_INIT@baudrate+2,w
  1409  069F  00B0               	movwf	??_UART_INIT+6
  1410  06A0  0829               	movf	UART_INIT@baudrate+3,w
  1411  06A1  00B1               	movwf	??_UART_INIT+7
  1412  06A2  3004               	movlw	4
  1413  06A3                     u305:	
  1414  06A3  1003               	clrc
  1415  06A4  0DAE               	rlf	??_UART_INIT+4,f
  1416  06A5  0DAF               	rlf	??_UART_INIT+5,f
  1417  06A6  0DB0               	rlf	??_UART_INIT+6,f
  1418  06A7  0DB1               	rlf	??_UART_INIT+7,f
  1419  06A8                     u300:	
  1420  06A8  3EFF               	addlw	-1
  1421  06A9  1D03               	skipz
  1422  06AA  2EA3               	goto	u305
  1423  06AB  3000               	movlw	0
  1424  06AC  00B2               	movwf	??_UART_INIT+8
  1425  06AD  3012               	movlw	18
  1426  06AE  00B3               	movwf	??_UART_INIT+9
  1427  06AF  307A               	movlw	122
  1428  06B0  00B4               	movwf	??_UART_INIT+10
  1429  06B1  3000               	movlw	0
  1430  06B2  00B5               	movwf	??_UART_INIT+11
  1431  06B3  082E               	movf	??_UART_INIT+4,w
  1432  06B4  02B2               	subwf	??_UART_INIT+8,f
  1433  06B5  082F               	movf	??_UART_INIT+5,w
  1434  06B6  1C03               	skipc
  1435  06B7  0F2F               	incfsz	??_UART_INIT+5,w
  1436  06B8  2EBA               	goto	u311
  1437  06B9  2EBB               	goto	u312
  1438  06BA                     u311:	
  1439  06BA  02B3               	subwf	??_UART_INIT+9,f
  1440  06BB                     u312:	
  1441  06BB  0830               	movf	??_UART_INIT+6,w
  1442  06BC  1C03               	skipc
  1443  06BD  0F30               	incfsz	??_UART_INIT+6,w
  1444  06BE  2EC0               	goto	u313
  1445  06BF  2EC1               	goto	u314
  1446  06C0                     u313:	
  1447  06C0  02B4               	subwf	??_UART_INIT+10,f
  1448  06C1                     u314:	
  1449  06C1  0831               	movf	??_UART_INIT+7,w
  1450  06C2  1C03               	skipc
  1451  06C3  0F31               	incfsz	??_UART_INIT+7,w
  1452  06C4  2EC6               	goto	u315
  1453  06C5  2EC7               	goto	u316
  1454  06C6                     u315:	
  1455  06C6  02B5               	subwf	??_UART_INIT+11,f
  1456  06C7                     u316:	
  1457  06C7  0835               	movf	??_UART_INIT+11,w
  1458  06C8  00F7               	movwf	___aldiv@dividend+3
  1459  06C9  0834               	movf	??_UART_INIT+10,w
  1460  06CA  00F6               	movwf	___aldiv@dividend+2
  1461  06CB  0833               	movf	??_UART_INIT+9,w
  1462  06CC  00F5               	movwf	___aldiv@dividend+1
  1463  06CD  0832               	movf	??_UART_INIT+8,w
  1464  06CE  00F4               	movwf	___aldiv@dividend
  1465  06CF  120A  118A  275A  120A  118A  	fcall	___aldiv
  1466  06D4  0870               	movf	?___aldiv,w
  1467  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  1468  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  1469  06D7  0099               	movwf	25	;volatile
  1470  06D8                     l938:	
  1471                           
  1472                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  1473  06D8  1518               	bsf	24,2	;volatile
  1474  06D9                     l940:	
  1475                           
  1476                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  1477  06D9  1698               	bsf	24,5	;volatile
  1478  06DA                     l942:	
  1479                           
  1480                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  1481  06DA  1218               	bcf	24,4	;volatile
  1482  06DB                     l944:	
  1483                           
  1484                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1485  06DB  1318               	bcf	24,6	;volatile
  1486  06DC                     l946:	
  1487                           
  1488                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  1489  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1490  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1491  06DE  1618               	bsf	24,4	;volatile
  1492  06DF                     l948:	
  1493                           
  1494                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  1495  06DF  1798               	bsf	24,7	;volatile
  1496  06E0                     l950:	
  1497                           
  1498                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  1499  06E0  1318               	bcf	24,6	;volatile
  1500  06E1                     l15:	
  1501  06E1  0008               	return
  1502  06E2                     __end_of_UART_INIT:	
  1503                           
  1504                           	psect	text7
  1505  075A                     __ptext7:	
  1506 ;; *************** function ___aldiv *****************
  1507 ;; Defined at:
  1508 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  divisor         4    0[COMMON] long 
  1511 ;;  dividend        4    4[COMMON] long 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  quotient        4    2[BANK0 ] long 
  1514 ;;  sign            1    1[BANK0 ] unsigned char 
  1515 ;;  counter         1    0[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  4    0[COMMON] long 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1525 ;;      Params:         8       0       0       0       0
  1526 ;;      Locals:         0       6       0       0       0
  1527 ;;      Temps:          1       0       0       0       0
  1528 ;;      Totals:         9       6       0       0       0
  1529 ;;Total ram usage:       15 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_UART_INIT
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           
  1539                           ;psect for function ___aldiv
  1540  075A                     ___aldiv:	
  1541  075A                     l896:	
  1542                           ;incstack = 0
  1543                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1544                           
  1545  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1546  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1547  075C  01A1               	clrf	___aldiv@sign
  1548  075D                     l898:	
  1549  075D  1FF3               	btfss	___aldiv@divisor+3,7
  1550  075E  2F60               	goto	u191
  1551  075F  2F61               	goto	u190
  1552  0760                     u191:	
  1553  0760  2F6E               	goto	l277
  1554  0761                     u190:	
  1555  0761                     l900:	
  1556  0761  09F0               	comf	___aldiv@divisor,f
  1557  0762  09F1               	comf	___aldiv@divisor+1,f
  1558  0763  09F2               	comf	___aldiv@divisor+2,f
  1559  0764  09F3               	comf	___aldiv@divisor+3,f
  1560  0765  0AF0               	incf	___aldiv@divisor,f
  1561  0766  1903               	skipnz
  1562  0767  0AF1               	incf	___aldiv@divisor+1,f
  1563  0768  1903               	skipnz
  1564  0769  0AF2               	incf	___aldiv@divisor+2,f
  1565  076A  1903               	skipnz
  1566  076B  0AF3               	incf	___aldiv@divisor+3,f
  1567  076C  01A1               	clrf	___aldiv@sign
  1568  076D  0AA1               	incf	___aldiv@sign,f
  1569  076E                     l277:	
  1570  076E  1FF7               	btfss	___aldiv@dividend+3,7
  1571  076F  2F71               	goto	u201
  1572  0770  2F72               	goto	u200
  1573  0771                     u201:	
  1574  0771  2F81               	goto	l906
  1575  0772                     u200:	
  1576  0772                     l902:	
  1577  0772  09F4               	comf	___aldiv@dividend,f
  1578  0773  09F5               	comf	___aldiv@dividend+1,f
  1579  0774  09F6               	comf	___aldiv@dividend+2,f
  1580  0775  09F7               	comf	___aldiv@dividend+3,f
  1581  0776  0AF4               	incf	___aldiv@dividend,f
  1582  0777  1903               	skipnz
  1583  0778  0AF5               	incf	___aldiv@dividend+1,f
  1584  0779  1903               	skipnz
  1585  077A  0AF6               	incf	___aldiv@dividend+2,f
  1586  077B  1903               	skipnz
  1587  077C  0AF7               	incf	___aldiv@dividend+3,f
  1588  077D                     l904:	
  1589  077D  3001               	movlw	1
  1590  077E  00F8               	movwf	??___aldiv
  1591  077F  0878               	movf	??___aldiv,w
  1592  0780  06A1               	xorwf	___aldiv@sign,f
  1593  0781                     l906:	
  1594  0781  3000               	movlw	0
  1595  0782  00A5               	movwf	___aldiv@quotient+3
  1596  0783  3000               	movlw	0
  1597  0784  00A4               	movwf	___aldiv@quotient+2
  1598  0785  3000               	movlw	0
  1599  0786  00A3               	movwf	___aldiv@quotient+1
  1600  0787  3000               	movlw	0
  1601  0788  00A2               	movwf	___aldiv@quotient
  1602  0789                     l908:	
  1603  0789  0873               	movf	___aldiv@divisor+3,w
  1604  078A  0472               	iorwf	___aldiv@divisor+2,w
  1605  078B  0471               	iorwf	___aldiv@divisor+1,w
  1606  078C  0470               	iorwf	___aldiv@divisor,w
  1607  078D  1903               	skipnz
  1608  078E  2F90               	goto	u211
  1609  078F  2F91               	goto	u210
  1610  0790                     u211:	
  1611  0790  2FDE               	goto	l928
  1612  0791                     u210:	
  1613  0791                     l910:	
  1614  0791  01A0               	clrf	___aldiv@counter
  1615  0792  0AA0               	incf	___aldiv@counter,f
  1616  0793  2FA1               	goto	l914
  1617  0794                     l912:	
  1618  0794  3001               	movlw	1
  1619  0795  00F8               	movwf	??___aldiv
  1620  0796                     u225:	
  1621  0796  1003               	clrc
  1622  0797  0DF0               	rlf	___aldiv@divisor,f
  1623  0798  0DF1               	rlf	___aldiv@divisor+1,f
  1624  0799  0DF2               	rlf	___aldiv@divisor+2,f
  1625  079A  0DF3               	rlf	___aldiv@divisor+3,f
  1626  079B  0BF8               	decfsz	??___aldiv,f
  1627  079C  2F96               	goto	u225
  1628  079D  3001               	movlw	1
  1629  079E  00F8               	movwf	??___aldiv
  1630  079F  0878               	movf	??___aldiv,w
  1631  07A0  07A0               	addwf	___aldiv@counter,f
  1632  07A1                     l914:	
  1633  07A1  1FF3               	btfss	___aldiv@divisor+3,7
  1634  07A2  2FA4               	goto	u231
  1635  07A3  2FA5               	goto	u230
  1636  07A4                     u231:	
  1637  07A4  2F94               	goto	l912
  1638  07A5                     u230:	
  1639  07A5                     l916:	
  1640  07A5  3001               	movlw	1
  1641  07A6  00F8               	movwf	??___aldiv
  1642  07A7                     u245:	
  1643  07A7  1003               	clrc
  1644  07A8  0DA2               	rlf	___aldiv@quotient,f
  1645  07A9  0DA3               	rlf	___aldiv@quotient+1,f
  1646  07AA  0DA4               	rlf	___aldiv@quotient+2,f
  1647  07AB  0DA5               	rlf	___aldiv@quotient+3,f
  1648  07AC  0BF8               	decfsz	??___aldiv,f
  1649  07AD  2FA7               	goto	u245
  1650  07AE                     l918:	
  1651  07AE  0873               	movf	___aldiv@divisor+3,w
  1652  07AF  0277               	subwf	___aldiv@dividend+3,w
  1653  07B0  1D03               	skipz
  1654  07B1  2FBC               	goto	u255
  1655  07B2  0872               	movf	___aldiv@divisor+2,w
  1656  07B3  0276               	subwf	___aldiv@dividend+2,w
  1657  07B4  1D03               	skipz
  1658  07B5  2FBC               	goto	u255
  1659  07B6  0871               	movf	___aldiv@divisor+1,w
  1660  07B7  0275               	subwf	___aldiv@dividend+1,w
  1661  07B8  1D03               	skipz
  1662  07B9  2FBC               	goto	u255
  1663  07BA  0870               	movf	___aldiv@divisor,w
  1664  07BB  0274               	subwf	___aldiv@dividend,w
  1665  07BC                     u255:	
  1666  07BC  1C03               	skipc
  1667  07BD  2FBF               	goto	u251
  1668  07BE  2FC0               	goto	u250
  1669  07BF                     u251:	
  1670  07BF  2FCF               	goto	l924
  1671  07C0                     u250:	
  1672  07C0                     l920:	
  1673  07C0  0870               	movf	___aldiv@divisor,w
  1674  07C1  02F4               	subwf	___aldiv@dividend,f
  1675  07C2  0871               	movf	___aldiv@divisor+1,w
  1676  07C3  1C03               	skipc
  1677  07C4  0F71               	incfsz	___aldiv@divisor+1,w
  1678  07C5  02F5               	subwf	___aldiv@dividend+1,f
  1679  07C6  0872               	movf	___aldiv@divisor+2,w
  1680  07C7  1C03               	skipc
  1681  07C8  0F72               	incfsz	___aldiv@divisor+2,w
  1682  07C9  02F6               	subwf	___aldiv@dividend+2,f
  1683  07CA  0873               	movf	___aldiv@divisor+3,w
  1684  07CB  1C03               	skipc
  1685  07CC  0F73               	incfsz	___aldiv@divisor+3,w
  1686  07CD  02F7               	subwf	___aldiv@dividend+3,f
  1687  07CE                     l922:	
  1688  07CE  1422               	bsf	___aldiv@quotient,0
  1689  07CF                     l924:	
  1690  07CF  3001               	movlw	1
  1691  07D0                     u265:	
  1692  07D0  1003               	clrc
  1693  07D1  0CF3               	rrf	___aldiv@divisor+3,f
  1694  07D2  0CF2               	rrf	___aldiv@divisor+2,f
  1695  07D3  0CF1               	rrf	___aldiv@divisor+1,f
  1696  07D4  0CF0               	rrf	___aldiv@divisor,f
  1697  07D5  3EFF               	addlw	-1
  1698  07D6  1D03               	skipz
  1699  07D7  2FD0               	goto	u265
  1700  07D8                     l926:	
  1701  07D8  3001               	movlw	1
  1702  07D9  02A0               	subwf	___aldiv@counter,f
  1703  07DA  1D03               	btfss	3,2
  1704  07DB  2FDD               	goto	u271
  1705  07DC  2FDE               	goto	u270
  1706  07DD                     u271:	
  1707  07DD  2FA5               	goto	l916
  1708  07DE                     u270:	
  1709  07DE                     l928:	
  1710  07DE  0821               	movf	___aldiv@sign,w
  1711  07DF  1903               	btfsc	3,2
  1712  07E0  2FE2               	goto	u281
  1713  07E1  2FE3               	goto	u280
  1714  07E2                     u281:	
  1715  07E2  2FEE               	goto	l932
  1716  07E3                     u280:	
  1717  07E3                     l930:	
  1718  07E3  09A2               	comf	___aldiv@quotient,f
  1719  07E4  09A3               	comf	___aldiv@quotient+1,f
  1720  07E5  09A4               	comf	___aldiv@quotient+2,f
  1721  07E6  09A5               	comf	___aldiv@quotient+3,f
  1722  07E7  0AA2               	incf	___aldiv@quotient,f
  1723  07E8  1903               	skipnz
  1724  07E9  0AA3               	incf	___aldiv@quotient+1,f
  1725  07EA  1903               	skipnz
  1726  07EB  0AA4               	incf	___aldiv@quotient+2,f
  1727  07EC  1903               	skipnz
  1728  07ED  0AA5               	incf	___aldiv@quotient+3,f
  1729  07EE                     l932:	
  1730  07EE  0825               	movf	___aldiv@quotient+3,w
  1731  07EF  00F3               	movwf	?___aldiv+3
  1732  07F0  0824               	movf	___aldiv@quotient+2,w
  1733  07F1  00F2               	movwf	?___aldiv+2
  1734  07F2  0823               	movf	___aldiv@quotient+1,w
  1735  07F3  00F1               	movwf	?___aldiv+1
  1736  07F4  0822               	movf	___aldiv@quotient,w
  1737  07F5  00F0               	movwf	?___aldiv
  1738  07F6                     l287:	
  1739  07F6  0008               	return
  1740  07F7                     __end_of___aldiv:	
  1741  0002                     
  1742                           	psect	functab
  1743  0003                     __pfunctab:	
  1744  0003                     __fptable:	
  1745  0003                     fptable:	
  1746  0003  00FF               	movwf	(btemp+1)& (0+127)
  1747  0004  3000               	movlw	high fptable
  1748  0005  008A               	movwf	10
  1749  0006  087F               	movf	(btemp+1)& (0+127),w
  1750  0007  0782               	addwf	2,f
  1751  0008                     fpbase:	
  1752  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  1753  0009                     fp__UART_READ:	
  1754  0009                     entry__UART_READ:	
  1755  0009  120A  118A  2DE9   	ljmp	_UART_READ
  1756  000C                     __end_of__fptable:	
  1757  007E                     btemp	set	126	;btemp
  1758  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     22      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     976
                                              9 COMMON     3     3      0
                          _UART_INIT
                          _UART_READ
                            _initOsc
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_READ
   _initOsc
   _setup
     _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      25       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      17       5       28.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      25      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 12 13:10:40 2020

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l15 06E1                        l19 05F0                        l80 0625  
                      l81 067D                        l90 067E                        l82 062B  
                      l74 0622                        l83 0631                        l84 0637  
                      l85 063D                        l86 0643                        l87 0649  
                      l88 064F                        l89 0655                       l108 0602  
                     l109 0607                       l118 05E8                       l277 076E  
                     l287 07F6                       l900 0761                       l910 0791  
                     l902 0772                       l920 07C0                       l912 0794  
                     l904 077D                       l930 07E3                       l922 07CE  
                     l914 07A1                       l906 0781                       l932 07EE  
                     l924 07CF                       l916 07A5                       l908 0789  
                     l940 06D9                       l926 07D8                       l918 07AE  
                     l950 06E0                       l942 06DA                       l928 07DE  
                     l944 06DB                       l936 067F                       l952 05E9  
                     l960 060C                       l946 06DC                       l938 06D8  
                     l954 05EF                       l890 05FC                       l970 0614  
                     l962 060E                       l948 06DF                       l892 05FE  
                     l972 0617                       l964 060F                       l982 065B  
                     l894 0601                       l886 05F2                       l974 0618  
                     l966 0610                       l958 0608                       l990 06E2  
                     l896 075A                       l888 05FA                       l976 0619  
                     l968 0613                       l992 06E7                       l898 075D  
                     l978 0624                       l994 06ED                       l988 05E4  
                     l996 06FC                       l998 0709                       u200 0772  
                     u201 0771                       u210 0791                       u211 0790  
                     u300 06A8                       u230 07A5                       u231 07A4  
                     u311 06BA                       u312 06BB                       u320 05EF  
                     u225 0796                       u313 06C0                       u305 06A3  
                     u321 05EE                       u250 07C0                       u314 06C1  
                     u251 07BF                       u315 06C6                       u316 06C7  
                     u180 05FA                       u245 07A7                       u181 05F9  
                     u270 07DE                       u190 0761                       u271 07DD  
                     u255 07BC                       u191 0760                       u280 07E3  
                     u281 07E2                       u265 07D0                       u337 0702  
                     u290 068F              __CFG_CPD$OFF 0000                       u347 071D  
                     u357 0737                       u295 068A                       u367 074F  
                     _Luz 007D              __CFG_LVP$OFF 0000                      l1000 0711  
                    l1010 073D                      l1002 0717                      l1012 0743  
                    l1004 0723                      l1014 0749                      l1006 072B  
                    l1008 0731                      l1036 0663                      _Parq 0036  
            __CFG_WRT$OFF 0000                      _Temp 007C                      _main 06E2  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
         __end_of___aldiv 07F7                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _RCREG 001A                     _SPBRG 0099  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TXREG 0019        __size_of_UART_INIT 0063  
      __size_of_UART_READ 0008            __CFG_FCMEN$OFF 0000           __end_of_initOsc 067F  
                   _setup 0608                     fpbase 0008            __CFG_BOREN$OFF 0000  
         entry__UART_READ 0009                     pclath 000A           __end_of_spiInit 0608  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07F7              __end_of_main 075A                    ??_main 0079  
                  ?_setup 0070                    _ANSELH 0189               initOsc@frec 0072  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of__fptable 000C  
          __CFG_PWRTE$OFF 0000         __end_of_UART_INIT 06E2         __end_of_UART_READ 05F1  
               ??___aldiv 0078                    fptable 0003                 ??_initOsc 0070  
                  fptotal 0002          __end_of_spiWrite 05E9                 ??_spiInit 0073  
 __end_of__initialization 07FC            __pcstackCOMMON 0070             __end_of_setup 0623  
                 ??_setup 0074                __pbssBANK0 0036                __pmaintext 06E2  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   ___aldiv 075A  
                 __ptext1 05E3                   __ptext2 0608                   __ptext3 05F1  
                 __ptext4 0623                   __ptext5 05E9                   __ptext6 067F  
                 __ptext7 075A                   _initOsc 0623          ___aldiv@dividend 0074  
                 _spiInit 05F1      end_of_initialization 07FC                 _RCSTAbits 0018  
        ___aldiv@quotient 0022                ??_spiWrite 0070                 _UART_INIT 067F  
               _UART_READ 05E9                 _TRISDbits 0088               spiWrite@dat 0070  
               _TXSTAbits 0098                ?_UART_INIT 0026                ?_UART_READ 0070  
     start_initialization 07F7  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 007C  
               ___latbits 0002             __pcstackBANK0 0020         __size_of__fptable 0009  
               __pfunctab 0003                  ?___aldiv 0070               ??_UART_INIT 002A  
             ??_UART_READ 0070         __size_of_spiWrite 0006                  ?_initOsc 0070  
                ?_spiInit 0070            __size_of_setup 001B           ___aldiv@divisor 0070  
    spiInit@sTransmitEdge 0072           ___aldiv@counter 0020                  _PIE1bits 008C  
      spiInit@sDataSample 0070                  _PIR1bits 000C              fp__UART_READ 0009  
        __size_of___aldiv 009D                  __fptable 0003          __size_of_initOsc 005C  
        __size_of_spiInit 0017         __CFG_BOR4V$BOR40V 0000         UART_INIT@baudrate 0026  
           __size_of_main 0078                  _spiWrite 05E3              spiInit@sType 0073  
       spiInit@sClockIdle 0071                _INTCONbits 000B                _OSCCONbits 008F  
            ___aldiv@sign 0021  
