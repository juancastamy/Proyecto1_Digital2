

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 17 16:31:57 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	functab,global,class=ENTRY,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0013                     _SSPBUF	set	19
   445  0014                     _SSPCON	set	20
   446  000B                     _INTCONbits	set	11
   447  0019                     _TXREG	set	25
   448  001A                     _RCREG	set	26
   449  000C                     _PIR1bits	set	12
   450  0018                     _RCSTAbits	set	24
   451  0094                     _SSPSTATbits	set	148
   452  0094                     _SSPSTAT	set	148
   453  008F                     _OSCCONbits	set	143
   454  008C                     _PIE1bits	set	140
   455  0088                     _TRISDbits	set	136
   456  0088                     _TRISD	set	136
   457  0087                     _TRISC	set	135
   458  0086                     _TRISB	set	134
   459  0085                     _TRISA	set	133
   460  0098                     _TXSTAbits	set	152
   461  0099                     _SPBRG	set	153
   462  043B                     _TRISC3	set	1083
   463  043C                     _TRISC4	set	1084
   464  043D                     _TRISC5	set	1085
   465  0189                     _ANSELH	set	393
   466  0188                     _ANSEL	set	392
   467                           
   468                           ; #config settings
   469  0000                     
   470                           	psect	cinit
   471  07F5                     start_initialization:	
   472  07F5                     __initialization:	
   473                           
   474                           ; Clear objects allocated to COMMON
   475  07F5  01FC               	clrf	__pbssCOMMON& (0+127)
   476  07F6  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   477                           
   478                           ; Clear objects allocated to BANK0
   479  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   480  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   481  07F9  01B6               	clrf	__pbssBANK0& (0+127)
   482  07FA  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   483  07FB  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   484  07FC                     end_of_initialization:	
   485                           ;End of C runtime variable initialization code
   486                           
   487  07FC                     __end_of__initialization:	
   488  07FC  0183               	clrf	3
   489  07FD  120A  118A  2F45   	ljmp	_main	;jump to C main() function
   490                           
   491                           	psect	bssCOMMON
   492  007C                     __pbssCOMMON:	
   493  007C                     _Temp:	
   494  007C                     	ds	1
   495  007D                     _Luz:	
   496  007D                     	ds	1
   497                           
   498                           	psect	bssBANK0
   499  0036                     __pbssBANK0:	
   500  0036                     _Presion:	
   501  0036                     	ds	1
   502  0037                     _ULTRA:	
   503  0037                     	ds	1
   504  0038                     _Parq:	
   505  0038                     	ds	1
   506                           
   507                           	psect	cstackCOMMON
   508  0070                     __pcstackCOMMON:	
   509  0070                     ?_setup:	
   510  0070                     ?_initOsc:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_initOsc:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_spiWrite:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_spiWrite:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_spiInit:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_UART_READ:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_UART_READ:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_main:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?___aldiv:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     spiInit@sDataSample:	
   538                           ; 4 bytes @ 0x0
   539                           
   540  0070                     spiWrite@dat:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ___aldiv@divisor:	
   544                           ; 1 bytes @ 0x0
   545                           
   546                           
   547                           ; 4 bytes @ 0x0
   548  0070                     	ds	1
   549  0071                     spiInit@sClockIdle:	
   550                           
   551                           ; 1 bytes @ 0x1
   552  0071                     	ds	1
   553  0072                     initOsc@frec:	
   554  0072                     spiInit@sTransmitEdge:	
   555                           ; 1 bytes @ 0x2
   556                           
   557                           
   558                           ; 1 bytes @ 0x2
   559  0072                     	ds	1
   560  0073                     ??_spiInit:	
   561  0073                     spiInit@sType:	
   562                           ; 1 bytes @ 0x3
   563                           
   564                           
   565                           ; 1 bytes @ 0x3
   566  0073                     	ds	1
   567  0074                     ??_setup:	
   568  0074                     ___aldiv@dividend:	
   569                           ; 1 bytes @ 0x4
   570                           
   571                           
   572                           ; 4 bytes @ 0x4
   573  0074                     	ds	4
   574  0078                     ??___aldiv:	
   575                           
   576                           ; 1 bytes @ 0x8
   577  0078                     	ds	1
   578  0079                     ??_main:	
   579                           
   580                           ; 1 bytes @ 0x9
   581  0079                     	ds	3
   582                           
   583                           	psect	cstackBANK0
   584  0020                     __pcstackBANK0:	
   585  0020                     ___aldiv@counter:	
   586                           
   587                           ; 1 bytes @ 0x0
   588  0020                     	ds	1
   589  0021                     ___aldiv@sign:	
   590                           
   591                           ; 1 bytes @ 0x1
   592  0021                     	ds	1
   593  0022                     ___aldiv@quotient:	
   594                           
   595                           ; 4 bytes @ 0x2
   596  0022                     	ds	4
   597  0026                     ?_UART_INIT:	
   598  0026                     UART_INIT@baudrate:	
   599                           ; 1 bytes @ 0x6
   600                           
   601                           
   602                           ; 4 bytes @ 0x6
   603  0026                     	ds	4
   604  002A                     ??_UART_INIT:	
   605                           
   606                           ; 1 bytes @ 0xA
   607  002A                     	ds	12
   608                           
   609                           	psect	maintext
   610  0745                     __pmaintext:	
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 56 in file "SPI_PIC.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : B00/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   630 ;;      Params:         0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0
   632 ;;      Temps:          3       0       0       0       0
   633 ;;      Totals:         3       0       0       0       0
   634 ;;Total ram usage:        3 bytes
   635 ;; Hardware stack levels required when called:    2
   636 ;; This function calls:
   637 ;;		_UART_INIT
   638 ;;		_UART_READ
   639 ;;		_initOsc
   640 ;;		_setup
   641 ;;		_spiWrite
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           
   648                           ;psect for function _main
   649  0745                     _main:	
   650  0745                     l1006:	
   651                           ;incstack = 0
   652                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   653                           
   654                           
   655                           ;SPI_PIC.c: 57:     setup();
   656  0745  120A  118A  25CE  120A  118A  	fcall	_setup
   657  074A                     l1008:	
   658                           
   659                           ;SPI_PIC.c: 58:     initOsc(7);
   660  074A  3007               	movlw	7
   661  074B  120A  118A  25E9  120A  118A  	fcall	_initOsc
   662  0750                     l1010:	
   663                           
   664                           ;SPI_PIC.c: 59:     UART_INIT(9600);
   665  0750  3000               	movlw	0
   666  0751  1283               	bcf	3,5	;RP0=0, select bank0
   667  0752  1303               	bcf	3,6	;RP1=0, select bank0
   668  0753  00A9               	movwf	UART_INIT@baudrate+3
   669  0754  3000               	movlw	0
   670  0755  00A8               	movwf	UART_INIT@baudrate+2
   671  0756  3025               	movlw	37
   672  0757  00A7               	movwf	UART_INIT@baudrate+1
   673  0758  3080               	movlw	128
   674  0759  00A6               	movwf	UART_INIT@baudrate
   675  075A  120A  118A  2645  120A  118A  	fcall	_UART_INIT
   676  075F                     l1012:	
   677                           
   678                           ;SPI_PIC.c: 62:         _delay((unsigned long)((100)*(8000000/4000.0)));
   679  075F  3002               	movlw	2
   680  0760  00FB               	movwf	??_main+2
   681  0761  3004               	movlw	4
   682  0762  00FA               	movwf	??_main+1
   683  0763  30BA               	movlw	186
   684  0764  00F9               	movwf	??_main
   685  0765                     u337:	
   686  0765  0BF9               	decfsz	??_main,f
   687  0766  2F65               	goto	u337
   688  0767  0BFA               	decfsz	??_main+1,f
   689  0768  2F65               	goto	u337
   690  0769  0BFB               	decfsz	??_main+2,f
   691  076A  2F65               	goto	u337
   692  076B  0000               	nop
   693  076C                     l1014:	
   694                           
   695                           ;SPI_PIC.c: 63:         Luz = UART_READ();
   696  076C  120A  118A  25AF  120A  118A  	fcall	_UART_READ
   697  0771  00F9               	movwf	??_main
   698  0772  0879               	movf	??_main,w
   699  0773  00FD               	movwf	_Luz
   700  0774                     l1016:	
   701                           
   702                           ;SPI_PIC.c: 64:         spiWrite(Luz);
   703  0774  087D               	movf	_Luz,w
   704  0775  120A  118A  25A9  120A  118A  	fcall	_spiWrite
   705  077A                     l1018:	
   706                           
   707                           ;SPI_PIC.c: 65:         _delay((unsigned long)((200)*(8000000/4000.0)));
   708  077A  3003               	movlw	3
   709  077B  00FB               	movwf	??_main+2
   710  077C  3008               	movlw	8
   711  077D  00FA               	movwf	??_main+1
   712  077E  3077               	movlw	119
   713  077F  00F9               	movwf	??_main
   714  0780                     u347:	
   715  0780  0BF9               	decfsz	??_main,f
   716  0781  2F80               	goto	u347
   717  0782  0BFA               	decfsz	??_main+1,f
   718  0783  2F80               	goto	u347
   719  0784  0BFB               	decfsz	??_main+2,f
   720  0785  2F80               	goto	u347
   721  0786                     l1020:	
   722                           
   723                           ;SPI_PIC.c: 67:         Temp = UART_READ();
   724  0786  120A  118A  25AF  120A  118A  	fcall	_UART_READ
   725  078B  00F9               	movwf	??_main
   726  078C  0879               	movf	??_main,w
   727  078D  00FC               	movwf	_Temp
   728  078E                     l1022:	
   729                           
   730                           ;SPI_PIC.c: 68:         spiWrite(Temp);
   731  078E  087C               	movf	_Temp,w
   732  078F  120A  118A  25A9  120A  118A  	fcall	_spiWrite
   733  0794                     l1024:	
   734                           
   735                           ;SPI_PIC.c: 69:         _delay((unsigned long)((200)*(8000000/4000.0)));
   736  0794  3003               	movlw	3
   737  0795  00FB               	movwf	??_main+2
   738  0796  3008               	movlw	8
   739  0797  00FA               	movwf	??_main+1
   740  0798  3077               	movlw	119
   741  0799  00F9               	movwf	??_main
   742  079A                     u357:	
   743  079A  0BF9               	decfsz	??_main,f
   744  079B  2F9A               	goto	u357
   745  079C  0BFA               	decfsz	??_main+1,f
   746  079D  2F9A               	goto	u357
   747  079E  0BFB               	decfsz	??_main+2,f
   748  079F  2F9A               	goto	u357
   749  07A0                     l1026:	
   750                           
   751                           ;SPI_PIC.c: 71:         Parq = UART_READ;
   752  07A0  3001               	movlw	(low (fp__UART_READ-fpbase))& (0+255)
   753  07A1  00F9               	movwf	??_main
   754  07A2  0879               	movf	??_main,w
   755  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   756  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   757  07A5  00B8               	movwf	_Parq
   758  07A6                     l1028:	
   759                           
   760                           ;SPI_PIC.c: 72:         spiWrite(Parq);
   761  07A6  0838               	movf	_Parq,w
   762  07A7  120A  118A  25A9  120A  118A  	fcall	_spiWrite
   763  07AC                     l1030:	
   764                           
   765                           ;SPI_PIC.c: 73:         _delay((unsigned long)((200)*(8000000/4000.0)));
   766  07AC  3003               	movlw	3
   767  07AD  00FB               	movwf	??_main+2
   768  07AE  3008               	movlw	8
   769  07AF  00FA               	movwf	??_main+1
   770  07B0  3077               	movlw	119
   771  07B1  00F9               	movwf	??_main
   772  07B2                     u367:	
   773  07B2  0BF9               	decfsz	??_main,f
   774  07B3  2FB2               	goto	u367
   775  07B4  0BFA               	decfsz	??_main+1,f
   776  07B5  2FB2               	goto	u367
   777  07B6  0BFB               	decfsz	??_main+2,f
   778  07B7  2FB2               	goto	u367
   779  07B8                     l1032:	
   780                           
   781                           ;SPI_PIC.c: 75:         Presion = UART_READ();
   782  07B8  120A  118A  25AF  120A  118A  	fcall	_UART_READ
   783  07BD  00F9               	movwf	??_main
   784  07BE  0879               	movf	??_main,w
   785  07BF  1283               	bcf	3,5	;RP0=0, select bank0
   786  07C0  1303               	bcf	3,6	;RP1=0, select bank0
   787  07C1  00B6               	movwf	_Presion
   788  07C2                     l1034:	
   789                           
   790                           ;SPI_PIC.c: 76:         spiWrite(Presion);
   791  07C2  0836               	movf	_Presion,w
   792  07C3  120A  118A  25A9  120A  118A  	fcall	_spiWrite
   793  07C8                     l1036:	
   794                           
   795                           ;SPI_PIC.c: 77:         _delay((unsigned long)((200)*(8000000/4000.0)));
   796  07C8  3003               	movlw	3
   797  07C9  00FB               	movwf	??_main+2
   798  07CA  3008               	movlw	8
   799  07CB  00FA               	movwf	??_main+1
   800  07CC  3077               	movlw	119
   801  07CD  00F9               	movwf	??_main
   802  07CE                     u377:	
   803  07CE  0BF9               	decfsz	??_main,f
   804  07CF  2FCE               	goto	u377
   805  07D0  0BFA               	decfsz	??_main+1,f
   806  07D1  2FCE               	goto	u377
   807  07D2  0BFB               	decfsz	??_main+2,f
   808  07D3  2FCE               	goto	u377
   809  07D4                     l1038:	
   810                           
   811                           ;SPI_PIC.c: 79:         ULTRA = UART_READ();
   812  07D4  120A  118A  25AF  120A  118A  	fcall	_UART_READ
   813  07D9  00F9               	movwf	??_main
   814  07DA  0879               	movf	??_main,w
   815  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   816  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   817  07DD  00B7               	movwf	_ULTRA
   818  07DE                     l1040:	
   819                           
   820                           ;SPI_PIC.c: 80:         spiWrite(ULTRA);
   821  07DE  0837               	movf	_ULTRA,w
   822  07DF  120A  118A  25A9  120A  118A  	fcall	_spiWrite
   823  07E4                     l1042:	
   824                           
   825                           ;SPI_PIC.c: 81:         _delay((unsigned long)((100)*(8000000/4000.0)));
   826  07E4  3002               	movlw	2
   827  07E5  00FB               	movwf	??_main+2
   828  07E6  3004               	movlw	4
   829  07E7  00FA               	movwf	??_main+1
   830  07E8  30BA               	movlw	186
   831  07E9  00F9               	movwf	??_main
   832  07EA                     u387:	
   833  07EA  0BF9               	decfsz	??_main,f
   834  07EB  2FEA               	goto	u387
   835  07EC  0BFA               	decfsz	??_main+1,f
   836  07ED  2FEA               	goto	u387
   837  07EE  0BFB               	decfsz	??_main+2,f
   838  07EF  2FEA               	goto	u387
   839  07F0  0000               	nop
   840  07F1  2F5F               	goto	l1012
   841  07F2  120A  118A  2800   	ljmp	start
   842  07F5                     __end_of_main:	
   843                           
   844                           	psect	text1
   845  05A9                     __ptext1:	
   846 ;; *************** function _spiWrite *****************
   847 ;; Defined at:
   848 ;;		line 35 in file "SPI_SLAVE.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  dat             1    wreg     unsigned char 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  dat             1    0[COMMON] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		wreg
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         0       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0
   864 ;;      Temps:          0       0       0       0       0
   865 ;;      Totals:         1       0       0       0       0
   866 ;;Total ram usage:        1 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _spiWrite
   877  05A9                     _spiWrite:	
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _spiWrite: [wreg]
   881                           ;spiWrite@dat stored from wreg
   882  05A9  00F0               	movwf	spiWrite@dat
   883  05AA                     l1004:	
   884                           
   885                           ;SPI_SLAVE.c: 35: void spiWrite(char dat);SPI_SLAVE.c: 36: {;SPI_SLAVE.c: 37:     SSPBUF
      +                           = dat;
   886  05AA  0870               	movf	spiWrite@dat,w
   887  05AB  1283               	bcf	3,5	;RP0=0, select bank0
   888  05AC  1303               	bcf	3,6	;RP1=0, select bank0
   889  05AD  0093               	movwf	19	;volatile
   890  05AE                     l122:	
   891  05AE  0008               	return
   892  05AF                     __end_of_spiWrite:	
   893                           
   894                           	psect	text2
   895  05CE                     __ptext2:	
   896 ;; *************** function _setup *****************
   897 ;; Defined at:
   898 ;;		line 87 in file "SPI_PIC.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0
   914 ;;      Temps:          0       0       0       0       0
   915 ;;      Totals:         0       0       0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    1
   919 ;; This function calls:
   920 ;;		_spiInit
   921 ;; This function is called by:
   922 ;;		_main
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _setup
   928  05CE                     _setup:	
   929  05CE                     l974:	
   930                           ;incstack = 0
   931                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   932                           
   933                           
   934                           ;SPI_PIC.c: 88:     TRISA = 0;
   935  05CE  1683               	bsf	3,5	;RP0=1, select bank1
   936  05CF  1303               	bcf	3,6	;RP1=0, select bank1
   937  05D0  0185               	clrf	5	;volatile
   938                           
   939                           ;SPI_PIC.c: 89:     TRISB = 0;
   940  05D1  0186               	clrf	6	;volatile
   941  05D2                     l976:	
   942                           
   943                           ;SPI_PIC.c: 90:     TRISC = 0b11010000;
   944  05D2  30D0               	movlw	208
   945  05D3  0087               	movwf	7	;volatile
   946  05D4                     l978:	
   947                           
   948                           ;SPI_PIC.c: 91:     TRISD = 0;
   949  05D4  0188               	clrf	8	;volatile
   950  05D5                     l980:	
   951                           
   952                           ;SPI_PIC.c: 92:     TRISDbits.TRISD1 = 0;
   953  05D5  1088               	bcf	8,1	;volatile
   954  05D6                     l982:	
   955                           
   956                           ;SPI_PIC.c: 93:     ANSEL = 0;
   957  05D6  1683               	bsf	3,5	;RP0=1, select bank3
   958  05D7  1703               	bsf	3,6	;RP1=1, select bank3
   959  05D8  0188               	clrf	8	;volatile
   960  05D9                     l984:	
   961                           
   962                           ;SPI_PIC.c: 94:     ANSELH = 0;
   963  05D9  0189               	clrf	9	;volatile
   964  05DA                     l986:	
   965                           
   966                           ;SPI_PIC.c: 95:     PIE1bits.RCIE = 1;
   967  05DA  1683               	bsf	3,5	;RP0=1, select bank1
   968  05DB  1303               	bcf	3,6	;RP1=0, select bank1
   969  05DC  168C               	bsf	12,5	;volatile
   970  05DD                     l988:	
   971                           
   972                           ;SPI_PIC.c: 96:     INTCONbits.PEIE = 1;
   973  05DD  170B               	bsf	11,6	;volatile
   974  05DE                     l990:	
   975                           
   976                           ;SPI_PIC.c: 97:     INTCONbits.GIE = 1;
   977  05DE  178B               	bsf	11,7	;volatile
   978  05DF                     l992:	
   979                           
   980                           ;SPI_PIC.c: 98:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   981  05DF  01F0               	clrf	spiInit@sDataSample
   982  05E0  01F1               	clrf	spiInit@sClockIdle
   983  05E1  01F2               	clrf	spiInit@sTransmitEdge
   984  05E2  3024               	movlw	36
   985  05E3  120A  118A  25B7  120A  118A  	fcall	_spiInit
   986  05E8                     l78:	
   987  05E8  0008               	return
   988  05E9                     __end_of_setup:	
   989                           
   990                           	psect	text3
   991  05B7                     __ptext3:	
   992 ;; *************** function _spiInit *****************
   993 ;; Defined at:
   994 ;;		line 12 in file "SPI_SLAVE.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  sType           1    wreg     enum E1264
   997 ;;  sDataSample     1    0[COMMON] enum E1272
   998 ;;  sClockIdle      1    1[COMMON] enum E1276
   999 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  sType           1    3[COMMON] enum E1264
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         3       0       0       0       0
  1012 ;;      Locals:         1       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0
  1014 ;;      Totals:         4       0       0       0       0
  1015 ;;Total ram usage:        4 bytes
  1016 ;; Hardware stack levels used:    1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_setup
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _spiInit
  1026  05B7                     _spiInit:	
  1027                           
  1028                           ;incstack = 0
  1029                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1030                           ;spiInit@sType stored from wreg
  1031  05B7  00F3               	movwf	spiInit@sType
  1032  05B8                     l902:	
  1033                           
  1034                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5=0;
  1035  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  1036  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  1037  05BA  1287               	bcf	7,5	;volatile
  1038                           
  1039                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
  1040  05BB  1607               	bsf	7,4	;volatile
  1041                           
  1042                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
  1043  05BC  1D73               	btfss	spiInit@sType,2
  1044  05BD  2DBF               	goto	u181
  1045  05BE  2DC0               	goto	u180
  1046  05BF                     u181:	
  1047  05BF  2DC4               	goto	l908
  1048  05C0                     u180:	
  1049  05C0                     l904:	
  1050                           
  1051                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
  1052  05C0  0872               	movf	spiInit@sTransmitEdge,w
  1053  05C1  0094               	movwf	20	;volatile
  1054  05C2                     l906:	
  1055                           
  1056                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
  1057  05C2  1587               	bsf	7,3	;volatile
  1058                           
  1059                           ;SPI_SLAVE.c: 20:     }
  1060  05C3  2DC8               	goto	l112
  1061  05C4                     l908:	
  1062                           
  1063                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
  1064  05C4  0870               	movf	spiInit@sDataSample,w
  1065  05C5  0472               	iorwf	spiInit@sTransmitEdge,w
  1066  05C6  0094               	movwf	20	;volatile
  1067  05C7                     l910:	
  1068                           
  1069                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
  1070  05C7  1187               	bcf	7,3	;volatile
  1071  05C8                     l112:	
  1072                           ;SPI_SLAVE.c: 25:     }
  1073                           
  1074                           
  1075                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
  1076  05C8  0873               	movf	spiInit@sType,w
  1077  05C9  0471               	iorwf	spiInit@sClockIdle,w
  1078  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1079  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1080  05CC  0094               	movwf	20	;volatile
  1081  05CD                     l113:	
  1082  05CD  0008               	return
  1083  05CE                     __end_of_spiInit:	
  1084                           
  1085                           	psect	text4
  1086  05E9                     __ptext4:	
  1087 ;; *************** function _initOsc *****************
  1088 ;; Defined at:
  1089 ;;		line 8 in file "OSCI.c"
  1090 ;; Parameters:    Size  Location     Type
  1091 ;;  frec            1    wreg     unsigned char 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  frec            1    2[COMMON] unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1103 ;;      Params:         0       0       0       0       0
  1104 ;;      Locals:         1       0       0       0       0
  1105 ;;      Temps:          2       0       0       0       0
  1106 ;;      Totals:         3       0       0       0       0
  1107 ;;Total ram usage:        3 bytes
  1108 ;; Hardware stack levels used:    1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           
  1117                           ;psect for function _initOsc
  1118  05E9                     _initOsc:	
  1119                           
  1120                           ;incstack = 0
  1121                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
  1122                           ;initOsc@frec stored from wreg
  1123  05E9  00F2               	movwf	initOsc@frec
  1124  05EA                     l994:	
  1125                           
  1126                           ;OSCI.c: 9:     switch(frec){
  1127  05EA  2E21               	goto	l998
  1128  05EB                     l84:	
  1129                           ;OSCI.c: 10:         case 0:
  1130                           
  1131                           
  1132                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
  1133  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  1134  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  1135  05ED  120F               	bcf	15,4	;volatile
  1136                           
  1137                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
  1138  05EE  128F               	bcf	15,5	;volatile
  1139                           
  1140                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
  1141  05EF  130F               	bcf	15,6	;volatile
  1142                           
  1143                           ;OSCI.c: 14:             break;
  1144  05F0  2E43               	goto	l85
  1145  05F1                     l86:	
  1146                           ;OSCI.c: 15:         case 1:
  1147                           
  1148                           
  1149                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
  1150  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  1151  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  1152  05F3  160F               	bsf	15,4	;volatile
  1153                           
  1154                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
  1155  05F4  128F               	bcf	15,5	;volatile
  1156                           
  1157                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
  1158  05F5  130F               	bcf	15,6	;volatile
  1159                           
  1160                           ;OSCI.c: 19:             break;
  1161  05F6  2E43               	goto	l85
  1162  05F7                     l87:	
  1163                           ;OSCI.c: 20:         case 2:
  1164                           
  1165                           
  1166                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1167  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  1168  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  1169  05F9  120F               	bcf	15,4	;volatile
  1170                           
  1171                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1172  05FA  168F               	bsf	15,5	;volatile
  1173                           
  1174                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1175  05FB  130F               	bcf	15,6	;volatile
  1176                           
  1177                           ;OSCI.c: 24:             break;
  1178  05FC  2E43               	goto	l85
  1179  05FD                     l88:	
  1180                           ;OSCI.c: 25:         case 3:
  1181                           
  1182                           
  1183                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1184  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  1185  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  1186  05FF  160F               	bsf	15,4	;volatile
  1187                           
  1188                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1189  0600  168F               	bsf	15,5	;volatile
  1190                           
  1191                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1192  0601  130F               	bcf	15,6	;volatile
  1193                           
  1194                           ;OSCI.c: 29:             break;
  1195  0602  2E43               	goto	l85
  1196  0603                     l89:	
  1197                           ;OSCI.c: 30:         case 4:
  1198                           
  1199                           
  1200                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1201  0603  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0604  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0605  120F               	bcf	15,4	;volatile
  1204                           
  1205                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1206  0606  128F               	bcf	15,5	;volatile
  1207                           
  1208                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1209  0607  170F               	bsf	15,6	;volatile
  1210                           
  1211                           ;OSCI.c: 34:             break;
  1212  0608  2E43               	goto	l85
  1213  0609                     l90:	
  1214                           ;OSCI.c: 35:         case 5:
  1215                           
  1216                           
  1217                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1218  0609  1683               	bsf	3,5	;RP0=1, select bank1
  1219  060A  1303               	bcf	3,6	;RP1=0, select bank1
  1220  060B  160F               	bsf	15,4	;volatile
  1221                           
  1222                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1223  060C  128F               	bcf	15,5	;volatile
  1224                           
  1225                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1226  060D  170F               	bsf	15,6	;volatile
  1227                           
  1228                           ;OSCI.c: 39:             break;
  1229  060E  2E43               	goto	l85
  1230  060F                     l91:	
  1231                           ;OSCI.c: 40:         case 6:
  1232                           
  1233                           
  1234                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1235  060F  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0610  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0611  120F               	bcf	15,4	;volatile
  1238                           
  1239                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1240  0612  168F               	bsf	15,5	;volatile
  1241                           
  1242                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1243  0613  170F               	bsf	15,6	;volatile
  1244                           
  1245                           ;OSCI.c: 44:             break;
  1246  0614  2E43               	goto	l85
  1247  0615                     l92:	
  1248                           ;OSCI.c: 45:         case 7:
  1249                           
  1250                           
  1251                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1252  0615  1683               	bsf	3,5	;RP0=1, select bank1
  1253  0616  1303               	bcf	3,6	;RP1=0, select bank1
  1254  0617  160F               	bsf	15,4	;volatile
  1255                           
  1256                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1257  0618  168F               	bsf	15,5	;volatile
  1258                           
  1259                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1260  0619  170F               	bsf	15,6	;volatile
  1261                           
  1262                           ;OSCI.c: 49:             break;
  1263  061A  2E43               	goto	l85
  1264  061B                     l93:	
  1265                           ;OSCI.c: 50:         default:
  1266                           
  1267                           
  1268                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1269  061B  1683               	bsf	3,5	;RP0=1, select bank1
  1270  061C  1303               	bcf	3,6	;RP1=0, select bank1
  1271  061D  120F               	bcf	15,4	;volatile
  1272                           
  1273                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1274  061E  168F               	bsf	15,5	;volatile
  1275                           
  1276                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1277  061F  170F               	bsf	15,6	;volatile
  1278                           
  1279                           ;OSCI.c: 54:             break;
  1280  0620  2E43               	goto	l85
  1281  0621                     l998:	
  1282  0621  0872               	movf	initOsc@frec,w
  1283  0622  00F0               	movwf	??_initOsc
  1284  0623  01F1               	clrf	??_initOsc+1
  1285                           
  1286                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1287                           ; Switch size 1, requested type "simple"
  1288                           ; Number of cases is 1, Range of values is 0 to 0
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte            4     3 (average)
  1292                           ; direct_byte           11     8 (fixed)
  1293                           ; jumptable            260     6 (fixed)
  1294                           ;	Chosen strategy is simple_byte
  1295  0624  0871               	movf	??_initOsc+1,w
  1296  0625  3A00               	xorlw	0	; case 0
  1297  0626  1903               	skipnz
  1298  0627  2E29               	goto	l1064
  1299  0628  2E1B               	goto	l93
  1300  0629                     l1064:	
  1301                           
  1302                           ; Switch size 1, requested type "simple"
  1303                           ; Number of cases is 8, Range of values is 0 to 7
  1304                           ; switch strategies available:
  1305                           ; Name         Instructions Cycles
  1306                           ; simple_byte           25    13 (average)
  1307                           ; direct_byte           32     8 (fixed)
  1308                           ; jumptable            260     6 (fixed)
  1309                           ;	Chosen strategy is simple_byte
  1310  0629  0870               	movf	??_initOsc,w
  1311  062A  3A00               	xorlw	0	; case 0
  1312  062B  1903               	skipnz
  1313  062C  2DEB               	goto	l84
  1314  062D  3A01               	xorlw	1	; case 1
  1315  062E  1903               	skipnz
  1316  062F  2DF1               	goto	l86
  1317  0630  3A03               	xorlw	3	; case 2
  1318  0631  1903               	skipnz
  1319  0632  2DF7               	goto	l87
  1320  0633  3A01               	xorlw	1	; case 3
  1321  0634  1903               	skipnz
  1322  0635  2DFD               	goto	l88
  1323  0636  3A07               	xorlw	7	; case 4
  1324  0637  1903               	skipnz
  1325  0638  2E03               	goto	l89
  1326  0639  3A01               	xorlw	1	; case 5
  1327  063A  1903               	skipnz
  1328  063B  2E09               	goto	l90
  1329  063C  3A03               	xorlw	3	; case 6
  1330  063D  1903               	skipnz
  1331  063E  2E0F               	goto	l91
  1332  063F  3A01               	xorlw	1	; case 7
  1333  0640  1903               	skipnz
  1334  0641  2E15               	goto	l92
  1335  0642  2E1B               	goto	l93
  1336  0643                     l85:	
  1337                           
  1338                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1339  0643  140F               	bsf	15,0	;volatile
  1340  0644                     l94:	
  1341  0644  0008               	return
  1342  0645                     __end_of_initOsc:	
  1343                           
  1344                           	psect	text5
  1345  05AF                     __ptext5:	
  1346 ;; *************** function _UART_READ *****************
  1347 ;; Defined at:
  1348 ;;		line 23 in file "UART.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      unsigned char 
  1355 ;; Registers used:
  1356 ;;		wreg
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _UART_READ
  1377  05AF                     _UART_READ:	
  1378  05AF                     l968:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _UART_READ: [wreg]
  1381                           
  1382                           
  1383                           ;UART.c: 24:     if(PIR1bits.RCIF==1){
  1384  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1385  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1386  05B1  1E8C               	btfss	12,5	;volatile
  1387  05B2  2DB4               	goto	u321
  1388  05B3  2DB5               	goto	u320
  1389  05B4                     u321:	
  1390  05B4  2DB6               	goto	l19
  1391  05B5                     u320:	
  1392  05B5                     l970:	
  1393                           
  1394                           ;UART.c: 25:         return RCREG;
  1395  05B5  081A               	movf	26,w	;volatile
  1396  05B6                     l19:	
  1397  05B6  0008               	return
  1398  05B7                     __end_of_UART_READ:	
  1399                           
  1400                           	psect	text6
  1401  0645                     __ptext6:	
  1402 ;; *************** function _UART_INIT *****************
  1403 ;; Defined at:
  1404 ;;		line 6 in file "UART.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  baudrate        4    6[BANK0 ] const long 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      unsigned char 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       4       0       0       0
  1419 ;;      Locals:         0       0       0       0       0
  1420 ;;      Temps:          0      12       0       0       0
  1421 ;;      Totals:         0      16       0       0       0
  1422 ;;Total ram usage:       16 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    1
  1425 ;; This function calls:
  1426 ;;		___aldiv
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _UART_INIT
  1434  0645                     _UART_INIT:	
  1435  0645                     l952:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1438                           
  1439                           
  1440                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1441  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0647  0826               	movf	UART_INIT@baudrate,w
  1444  0648  00AA               	movwf	??_UART_INIT
  1445  0649  0827               	movf	UART_INIT@baudrate+1,w
  1446  064A  00AB               	movwf	??_UART_INIT+1
  1447  064B  0828               	movf	UART_INIT@baudrate+2,w
  1448  064C  00AC               	movwf	??_UART_INIT+2
  1449  064D  0829               	movf	UART_INIT@baudrate+3,w
  1450  064E  00AD               	movwf	??_UART_INIT+3
  1451  064F  3004               	movlw	4
  1452  0650                     u295:	
  1453  0650  1003               	clrc
  1454  0651  0DAA               	rlf	??_UART_INIT,f
  1455  0652  0DAB               	rlf	??_UART_INIT+1,f
  1456  0653  0DAC               	rlf	??_UART_INIT+2,f
  1457  0654  0DAD               	rlf	??_UART_INIT+3,f
  1458  0655                     u290:	
  1459  0655  3EFF               	addlw	-1
  1460  0656  1D03               	skipz
  1461  0657  2E50               	goto	u295
  1462  0658  082D               	movf	??_UART_INIT+3,w
  1463  0659  00F3               	movwf	___aldiv@divisor+3
  1464  065A  082C               	movf	??_UART_INIT+2,w
  1465  065B  00F2               	movwf	___aldiv@divisor+2
  1466  065C  082B               	movf	??_UART_INIT+1,w
  1467  065D  00F1               	movwf	___aldiv@divisor+1
  1468  065E  082A               	movf	??_UART_INIT,w
  1469  065F  00F0               	movwf	___aldiv@divisor
  1470  0660  0826               	movf	UART_INIT@baudrate,w
  1471  0661  00AE               	movwf	??_UART_INIT+4
  1472  0662  0827               	movf	UART_INIT@baudrate+1,w
  1473  0663  00AF               	movwf	??_UART_INIT+5
  1474  0664  0828               	movf	UART_INIT@baudrate+2,w
  1475  0665  00B0               	movwf	??_UART_INIT+6
  1476  0666  0829               	movf	UART_INIT@baudrate+3,w
  1477  0667  00B1               	movwf	??_UART_INIT+7
  1478  0668  3004               	movlw	4
  1479  0669                     u305:	
  1480  0669  1003               	clrc
  1481  066A  0DAE               	rlf	??_UART_INIT+4,f
  1482  066B  0DAF               	rlf	??_UART_INIT+5,f
  1483  066C  0DB0               	rlf	??_UART_INIT+6,f
  1484  066D  0DB1               	rlf	??_UART_INIT+7,f
  1485  066E                     u300:	
  1486  066E  3EFF               	addlw	-1
  1487  066F  1D03               	skipz
  1488  0670  2E69               	goto	u305
  1489  0671  3000               	movlw	0
  1490  0672  00B2               	movwf	??_UART_INIT+8
  1491  0673  3012               	movlw	18
  1492  0674  00B3               	movwf	??_UART_INIT+9
  1493  0675  307A               	movlw	122
  1494  0676  00B4               	movwf	??_UART_INIT+10
  1495  0677  3000               	movlw	0
  1496  0678  00B5               	movwf	??_UART_INIT+11
  1497  0679  082E               	movf	??_UART_INIT+4,w
  1498  067A  02B2               	subwf	??_UART_INIT+8,f
  1499  067B  082F               	movf	??_UART_INIT+5,w
  1500  067C  1C03               	skipc
  1501  067D  0F2F               	incfsz	??_UART_INIT+5,w
  1502  067E  2E80               	goto	u311
  1503  067F  2E81               	goto	u312
  1504  0680                     u311:	
  1505  0680  02B3               	subwf	??_UART_INIT+9,f
  1506  0681                     u312:	
  1507  0681  0830               	movf	??_UART_INIT+6,w
  1508  0682  1C03               	skipc
  1509  0683  0F30               	incfsz	??_UART_INIT+6,w
  1510  0684  2E86               	goto	u313
  1511  0685  2E87               	goto	u314
  1512  0686                     u313:	
  1513  0686  02B4               	subwf	??_UART_INIT+10,f
  1514  0687                     u314:	
  1515  0687  0831               	movf	??_UART_INIT+7,w
  1516  0688  1C03               	skipc
  1517  0689  0F31               	incfsz	??_UART_INIT+7,w
  1518  068A  2E8C               	goto	u315
  1519  068B  2E8D               	goto	u316
  1520  068C                     u315:	
  1521  068C  02B5               	subwf	??_UART_INIT+11,f
  1522  068D                     u316:	
  1523  068D  0835               	movf	??_UART_INIT+11,w
  1524  068E  00F7               	movwf	___aldiv@dividend+3
  1525  068F  0834               	movf	??_UART_INIT+10,w
  1526  0690  00F6               	movwf	___aldiv@dividend+2
  1527  0691  0833               	movf	??_UART_INIT+9,w
  1528  0692  00F5               	movwf	___aldiv@dividend+1
  1529  0693  0832               	movf	??_UART_INIT+8,w
  1530  0694  00F4               	movwf	___aldiv@dividend
  1531  0695  120A  118A  26A8  120A  118A  	fcall	___aldiv
  1532  069A  0870               	movf	?___aldiv,w
  1533  069B  1683               	bsf	3,5	;RP0=1, select bank1
  1534  069C  1303               	bcf	3,6	;RP1=0, select bank1
  1535  069D  0099               	movwf	25	;volatile
  1536  069E                     l954:	
  1537                           
  1538                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  1539  069E  1518               	bsf	24,2	;volatile
  1540  069F                     l956:	
  1541                           
  1542                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  1543  069F  1698               	bsf	24,5	;volatile
  1544  06A0                     l958:	
  1545                           
  1546                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  1547  06A0  1218               	bcf	24,4	;volatile
  1548  06A1                     l960:	
  1549                           
  1550                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1551  06A1  1318               	bcf	24,6	;volatile
  1552  06A2                     l962:	
  1553                           
  1554                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  1555  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1556  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1557  06A4  1618               	bsf	24,4	;volatile
  1558  06A5                     l964:	
  1559                           
  1560                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  1561  06A5  1798               	bsf	24,7	;volatile
  1562  06A6                     l966:	
  1563                           
  1564                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  1565  06A6  1318               	bcf	24,6	;volatile
  1566  06A7                     l15:	
  1567  06A7  0008               	return
  1568  06A8                     __end_of_UART_INIT:	
  1569                           
  1570                           	psect	text7
  1571  06A8                     __ptext7:	
  1572 ;; *************** function ___aldiv *****************
  1573 ;; Defined at:
  1574 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  divisor         4    0[COMMON] long 
  1577 ;;  dividend        4    4[COMMON] long 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  quotient        4    2[BANK0 ] long 
  1580 ;;  sign            1    1[BANK0 ] unsigned char 
  1581 ;;  counter         1    0[BANK0 ] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  4    0[COMMON] long 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         8       0       0       0       0
  1592 ;;      Locals:         0       6       0       0       0
  1593 ;;      Temps:          1       0       0       0       0
  1594 ;;      Totals:         9       6       0       0       0
  1595 ;;Total ram usage:       15 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_UART_INIT
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function ___aldiv
  1606  06A8                     ___aldiv:	
  1607  06A8                     l912:	
  1608                           ;incstack = 0
  1609                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1610                           
  1611  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1612  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1613  06AA  01A1               	clrf	___aldiv@sign
  1614  06AB                     l914:	
  1615  06AB  1FF3               	btfss	___aldiv@divisor+3,7
  1616  06AC  2EAE               	goto	u191
  1617  06AD  2EAF               	goto	u190
  1618  06AE                     u191:	
  1619  06AE  2EBC               	goto	l281
  1620  06AF                     u190:	
  1621  06AF                     l916:	
  1622  06AF  09F0               	comf	___aldiv@divisor,f
  1623  06B0  09F1               	comf	___aldiv@divisor+1,f
  1624  06B1  09F2               	comf	___aldiv@divisor+2,f
  1625  06B2  09F3               	comf	___aldiv@divisor+3,f
  1626  06B3  0AF0               	incf	___aldiv@divisor,f
  1627  06B4  1903               	skipnz
  1628  06B5  0AF1               	incf	___aldiv@divisor+1,f
  1629  06B6  1903               	skipnz
  1630  06B7  0AF2               	incf	___aldiv@divisor+2,f
  1631  06B8  1903               	skipnz
  1632  06B9  0AF3               	incf	___aldiv@divisor+3,f
  1633  06BA  01A1               	clrf	___aldiv@sign
  1634  06BB  0AA1               	incf	___aldiv@sign,f
  1635  06BC                     l281:	
  1636  06BC  1FF7               	btfss	___aldiv@dividend+3,7
  1637  06BD  2EBF               	goto	u201
  1638  06BE  2EC0               	goto	u200
  1639  06BF                     u201:	
  1640  06BF  2ECF               	goto	l922
  1641  06C0                     u200:	
  1642  06C0                     l918:	
  1643  06C0  09F4               	comf	___aldiv@dividend,f
  1644  06C1  09F5               	comf	___aldiv@dividend+1,f
  1645  06C2  09F6               	comf	___aldiv@dividend+2,f
  1646  06C3  09F7               	comf	___aldiv@dividend+3,f
  1647  06C4  0AF4               	incf	___aldiv@dividend,f
  1648  06C5  1903               	skipnz
  1649  06C6  0AF5               	incf	___aldiv@dividend+1,f
  1650  06C7  1903               	skipnz
  1651  06C8  0AF6               	incf	___aldiv@dividend+2,f
  1652  06C9  1903               	skipnz
  1653  06CA  0AF7               	incf	___aldiv@dividend+3,f
  1654  06CB                     l920:	
  1655  06CB  3001               	movlw	1
  1656  06CC  00F8               	movwf	??___aldiv
  1657  06CD  0878               	movf	??___aldiv,w
  1658  06CE  06A1               	xorwf	___aldiv@sign,f
  1659  06CF                     l922:	
  1660  06CF  3000               	movlw	0
  1661  06D0  00A5               	movwf	___aldiv@quotient+3
  1662  06D1  3000               	movlw	0
  1663  06D2  00A4               	movwf	___aldiv@quotient+2
  1664  06D3  3000               	movlw	0
  1665  06D4  00A3               	movwf	___aldiv@quotient+1
  1666  06D5  3000               	movlw	0
  1667  06D6  00A2               	movwf	___aldiv@quotient
  1668  06D7                     l924:	
  1669  06D7  0873               	movf	___aldiv@divisor+3,w
  1670  06D8  0472               	iorwf	___aldiv@divisor+2,w
  1671  06D9  0471               	iorwf	___aldiv@divisor+1,w
  1672  06DA  0470               	iorwf	___aldiv@divisor,w
  1673  06DB  1903               	skipnz
  1674  06DC  2EDE               	goto	u211
  1675  06DD  2EDF               	goto	u210
  1676  06DE                     u211:	
  1677  06DE  2F2C               	goto	l944
  1678  06DF                     u210:	
  1679  06DF                     l926:	
  1680  06DF  01A0               	clrf	___aldiv@counter
  1681  06E0  0AA0               	incf	___aldiv@counter,f
  1682  06E1  2EEF               	goto	l930
  1683  06E2                     l928:	
  1684  06E2  3001               	movlw	1
  1685  06E3  00F8               	movwf	??___aldiv
  1686  06E4                     u225:	
  1687  06E4  1003               	clrc
  1688  06E5  0DF0               	rlf	___aldiv@divisor,f
  1689  06E6  0DF1               	rlf	___aldiv@divisor+1,f
  1690  06E7  0DF2               	rlf	___aldiv@divisor+2,f
  1691  06E8  0DF3               	rlf	___aldiv@divisor+3,f
  1692  06E9  0BF8               	decfsz	??___aldiv,f
  1693  06EA  2EE4               	goto	u225
  1694  06EB  3001               	movlw	1
  1695  06EC  00F8               	movwf	??___aldiv
  1696  06ED  0878               	movf	??___aldiv,w
  1697  06EE  07A0               	addwf	___aldiv@counter,f
  1698  06EF                     l930:	
  1699  06EF  1FF3               	btfss	___aldiv@divisor+3,7
  1700  06F0  2EF2               	goto	u231
  1701  06F1  2EF3               	goto	u230
  1702  06F2                     u231:	
  1703  06F2  2EE2               	goto	l928
  1704  06F3                     u230:	
  1705  06F3                     l932:	
  1706  06F3  3001               	movlw	1
  1707  06F4  00F8               	movwf	??___aldiv
  1708  06F5                     u245:	
  1709  06F5  1003               	clrc
  1710  06F6  0DA2               	rlf	___aldiv@quotient,f
  1711  06F7  0DA3               	rlf	___aldiv@quotient+1,f
  1712  06F8  0DA4               	rlf	___aldiv@quotient+2,f
  1713  06F9  0DA5               	rlf	___aldiv@quotient+3,f
  1714  06FA  0BF8               	decfsz	??___aldiv,f
  1715  06FB  2EF5               	goto	u245
  1716  06FC                     l934:	
  1717  06FC  0873               	movf	___aldiv@divisor+3,w
  1718  06FD  0277               	subwf	___aldiv@dividend+3,w
  1719  06FE  1D03               	skipz
  1720  06FF  2F0A               	goto	u255
  1721  0700  0872               	movf	___aldiv@divisor+2,w
  1722  0701  0276               	subwf	___aldiv@dividend+2,w
  1723  0702  1D03               	skipz
  1724  0703  2F0A               	goto	u255
  1725  0704  0871               	movf	___aldiv@divisor+1,w
  1726  0705  0275               	subwf	___aldiv@dividend+1,w
  1727  0706  1D03               	skipz
  1728  0707  2F0A               	goto	u255
  1729  0708  0870               	movf	___aldiv@divisor,w
  1730  0709  0274               	subwf	___aldiv@dividend,w
  1731  070A                     u255:	
  1732  070A  1C03               	skipc
  1733  070B  2F0D               	goto	u251
  1734  070C  2F0E               	goto	u250
  1735  070D                     u251:	
  1736  070D  2F1D               	goto	l940
  1737  070E                     u250:	
  1738  070E                     l936:	
  1739  070E  0870               	movf	___aldiv@divisor,w
  1740  070F  02F4               	subwf	___aldiv@dividend,f
  1741  0710  0871               	movf	___aldiv@divisor+1,w
  1742  0711  1C03               	skipc
  1743  0712  0F71               	incfsz	___aldiv@divisor+1,w
  1744  0713  02F5               	subwf	___aldiv@dividend+1,f
  1745  0714  0872               	movf	___aldiv@divisor+2,w
  1746  0715  1C03               	skipc
  1747  0716  0F72               	incfsz	___aldiv@divisor+2,w
  1748  0717  02F6               	subwf	___aldiv@dividend+2,f
  1749  0718  0873               	movf	___aldiv@divisor+3,w
  1750  0719  1C03               	skipc
  1751  071A  0F73               	incfsz	___aldiv@divisor+3,w
  1752  071B  02F7               	subwf	___aldiv@dividend+3,f
  1753  071C                     l938:	
  1754  071C  1422               	bsf	___aldiv@quotient,0
  1755  071D                     l940:	
  1756  071D  3001               	movlw	1
  1757  071E                     u265:	
  1758  071E  1003               	clrc
  1759  071F  0CF3               	rrf	___aldiv@divisor+3,f
  1760  0720  0CF2               	rrf	___aldiv@divisor+2,f
  1761  0721  0CF1               	rrf	___aldiv@divisor+1,f
  1762  0722  0CF0               	rrf	___aldiv@divisor,f
  1763  0723  3EFF               	addlw	-1
  1764  0724  1D03               	skipz
  1765  0725  2F1E               	goto	u265
  1766  0726                     l942:	
  1767  0726  3001               	movlw	1
  1768  0727  02A0               	subwf	___aldiv@counter,f
  1769  0728  1D03               	btfss	3,2
  1770  0729  2F2B               	goto	u271
  1771  072A  2F2C               	goto	u270
  1772  072B                     u271:	
  1773  072B  2EF3               	goto	l932
  1774  072C                     u270:	
  1775  072C                     l944:	
  1776  072C  0821               	movf	___aldiv@sign,w
  1777  072D  1903               	btfsc	3,2
  1778  072E  2F30               	goto	u281
  1779  072F  2F31               	goto	u280
  1780  0730                     u281:	
  1781  0730  2F3C               	goto	l948
  1782  0731                     u280:	
  1783  0731                     l946:	
  1784  0731  09A2               	comf	___aldiv@quotient,f
  1785  0732  09A3               	comf	___aldiv@quotient+1,f
  1786  0733  09A4               	comf	___aldiv@quotient+2,f
  1787  0734  09A5               	comf	___aldiv@quotient+3,f
  1788  0735  0AA2               	incf	___aldiv@quotient,f
  1789  0736  1903               	skipnz
  1790  0737  0AA3               	incf	___aldiv@quotient+1,f
  1791  0738  1903               	skipnz
  1792  0739  0AA4               	incf	___aldiv@quotient+2,f
  1793  073A  1903               	skipnz
  1794  073B  0AA5               	incf	___aldiv@quotient+3,f
  1795  073C                     l948:	
  1796  073C  0825               	movf	___aldiv@quotient+3,w
  1797  073D  00F3               	movwf	?___aldiv+3
  1798  073E  0824               	movf	___aldiv@quotient+2,w
  1799  073F  00F2               	movwf	?___aldiv+2
  1800  0740  0823               	movf	___aldiv@quotient+1,w
  1801  0741  00F1               	movwf	?___aldiv+1
  1802  0742  0822               	movf	___aldiv@quotient,w
  1803  0743  00F0               	movwf	?___aldiv
  1804  0744                     l291:	
  1805  0744  0008               	return
  1806  0745                     __end_of___aldiv:	
  1807  0002                     
  1808                           	psect	functab
  1809  0003                     __pfunctab:	
  1810  0003                     __fptable:	
  1811  0003                     fptable:	
  1812  0003  00FF               	movwf	(btemp+1)& (0+127)
  1813  0004  3000               	movlw	high fptable
  1814  0005  008A               	movwf	10
  1815  0006  087F               	movf	(btemp+1)& (0+127),w
  1816  0007  0782               	addwf	2,f
  1817  0008                     fpbase:	
  1818  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  1819  0009                     fp__UART_READ:	
  1820  0009                     entry__UART_READ:	
  1821  0009  120A  118A  2DAF   	ljmp	_UART_READ
  1822  000C                     __end_of__fptable:	
  1823  007E                     btemp	set	126	;btemp
  1824  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     22      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     976
                                              9 COMMON     3     3      0
                          _UART_INIT
                          _UART_READ
                            _initOsc
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_READ
   _initOsc
   _setup
     _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      19       5       31.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 17 16:31:57 2020

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      l15 06A7                        l19 05B6                        l90 0609  
                      l91 060F                        l92 0615                        l84 05EB  
                      l93 061B                        l85 0643                        l94 0644  
                      l86 05F1                        l78 05E8                        l87 05F7  
                      l88 05FD                        l89 0603                       l112 05C8  
                     l113 05CD                       l122 05AE                       l281 06BC  
                     l291 0744                       l910 05C7                       l902 05B8  
                     l920 06CB                       l912 06A8                       l904 05C0  
                     l930 06EF                       l922 06CF                       l914 06AB  
                     l906 05C2                       l940 071D                       l932 06F3  
                     l924 06D7                       l916 06AF                       l908 05C4  
                     l942 0726                       l934 06FC                       l926 06DF  
                     l918 06C0                       l936 070E                       l928 06E2  
                     l944 072C                       l960 06A1                       l952 0645  
                     l946 0731                       l938 071C                       l962 06A2  
                     l954 069E                       l970 05B5                       l948 073C  
                     l964 06A5                       l956 069F                       l980 05D5  
                     l966 06A6                       l958 06A0                       l990 05DE  
                     l982 05D6                       l974 05CE                       l968 05AF  
                     l992 05DF                       l984 05D9                       l976 05D2  
                     l994 05EA                       l986 05DA                       l978 05D4  
                     l988 05DD                       l998 0621                       u200 06C0  
                     u201 06BF                       u210 06DF                       u211 06DE  
                     u300 066E                       u230 06F3                       u231 06F2  
                     u311 0680                       u312 0681                       u320 05B5  
                     u225 06E4                       u313 0686                       u305 0669  
                     u321 05B4                       u250 070E                       u314 0687  
                     u251 070D                       u315 068C                       u316 068D  
                     u180 05C0                       u245 06F5                       u181 05BF  
                     u270 072C                       u190 06AF                       u271 072B  
                     u255 070A                       u191 06AE                       u280 0731  
                     u281 0730                       u265 071E                       u337 0765  
                     u290 0655              __CFG_CPD$OFF 0000                       u347 0780  
                     u357 079A                       u295 0650                       u367 07B2  
                     u377 07CE                       u387 07EA                       _Luz 007D  
            __CFG_LVP$OFF 0000                      l1010 0750                      l1004 05AA  
                    l1020 0786                      l1012 075F                      l1030 07AC  
                    l1022 078E                      l1014 076C                      l1006 0745  
                    l1040 07DE                      l1032 07B8                      l1024 0794  
                    l1016 0774                      l1008 074A                      l1042 07E4  
                    l1034 07C2                      l1026 07A0                      l1018 077A  
                    l1036 07C8                      l1028 07A6                      l1038 07D4  
                    l1064 0629                      _Parq 0038              __CFG_WRT$OFF 0000  
                    _Temp 007C                      _main 0745                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000           __end_of___aldiv 0745  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   _RCREG 001A                     _SPBRG 0099                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _ULTRA 0037                     _TXREG 0019        __size_of_UART_INIT 0063  
      __size_of_UART_READ 0008            __CFG_FCMEN$OFF 0000           __end_of_initOsc 0645  
                   _setup 05CE                     fpbase 0008            __CFG_BOREN$OFF 0000  
         entry__UART_READ 0009                     pclath 000A           __end_of_spiInit 05CE  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07F5              __end_of_main 07F5                    ??_main 0079  
                  ?_setup 0070                    _ANSELH 0189               initOsc@frec 0072  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013          __end_of__fptable 000C  
          __CFG_PWRTE$OFF 0000         __end_of_UART_INIT 06A8         __end_of_UART_READ 05B7  
               ??___aldiv 0078                    fptable 0003                 ??_initOsc 0070  
                  fptotal 0002          __end_of_spiWrite 05AF                 ??_spiInit 0073  
 __end_of__initialization 07FC            __pcstackCOMMON 0070             __end_of_setup 05E9  
                 ??_setup 0074                __pbssBANK0 0036                __pmaintext 0745  
                 _SSPSTAT 0094                   _Presion 0036                 ?_spiWrite 0070  
                 ___aldiv 06A8                   __ptext1 05A9                   __ptext2 05CE  
                 __ptext3 05B7                   __ptext4 05E9                   __ptext5 05AF  
                 __ptext6 0645                   __ptext7 06A8                   _initOsc 05E9  
        ___aldiv@dividend 0074                   _spiInit 05B7      end_of_initialization 07FC  
               _RCSTAbits 0018          ___aldiv@quotient 0022                ??_spiWrite 0070  
               _UART_INIT 0645                 _UART_READ 05AF                 _TRISDbits 0088  
             spiWrite@dat 0070                 _TXSTAbits 0098                ?_UART_INIT 0026  
              ?_UART_READ 0070       start_initialization 07F5  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 007C                 ___latbits 0002             __pcstackBANK0 0020  
       __size_of__fptable 0009                 __pfunctab 0003                  ?___aldiv 0070  
             ??_UART_INIT 002A               ??_UART_READ 0070         __size_of_spiWrite 0006  
                ?_initOsc 0070                  ?_spiInit 0070            __size_of_setup 001B  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 0020  
                _PIE1bits 008C        spiInit@sDataSample 0070                  _PIR1bits 000C  
            fp__UART_READ 0009          __size_of___aldiv 009D                  __fptable 0003  
        __size_of_initOsc 005C          __size_of_spiInit 0017         __CFG_BOR4V$BOR40V 0000  
       UART_INIT@baudrate 0026             __size_of_main 00B0                  _spiWrite 05A9  
            spiInit@sType 0073         spiInit@sClockIdle 0071                _INTCONbits 000B  
              _OSCCONbits 008F              ___aldiv@sign 0021  
