

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 11 18:56:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.10
    18                           ; Generated 31/07/2019 GMT
    19                           ; 
    20                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  0008                     	;# 
   294  0009                     	;# 
   295  000A                     	;# 
   296  000B                     	;# 
   297  000C                     	;# 
   298  000D                     	;# 
   299  000E                     	;# 
   300  000E                     	;# 
   301  000F                     	;# 
   302  0010                     	;# 
   303  0011                     	;# 
   304  0012                     	;# 
   305  0013                     	;# 
   306  0014                     	;# 
   307  0015                     	;# 
   308  0015                     	;# 
   309  0016                     	;# 
   310  0017                     	;# 
   311  0018                     	;# 
   312  0019                     	;# 
   313  001A                     	;# 
   314  001B                     	;# 
   315  001B                     	;# 
   316  001C                     	;# 
   317  001D                     	;# 
   318  001E                     	;# 
   319  001F                     	;# 
   320  0081                     	;# 
   321  0085                     	;# 
   322  0086                     	;# 
   323  0087                     	;# 
   324  0088                     	;# 
   325  0089                     	;# 
   326  008C                     	;# 
   327  008D                     	;# 
   328  008E                     	;# 
   329  008F                     	;# 
   330  0090                     	;# 
   331  0091                     	;# 
   332  0092                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0094                     	;# 
   337  0095                     	;# 
   338  0096                     	;# 
   339  0097                     	;# 
   340  0098                     	;# 
   341  0099                     	;# 
   342  009A                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  009F                     	;# 
   348  0105                     	;# 
   349  0107                     	;# 
   350  0108                     	;# 
   351  0109                     	;# 
   352  010C                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  0185                     	;# 
   358  0187                     	;# 
   359  0188                     	;# 
   360  0189                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  000E                     	;# 
   379  000F                     	;# 
   380  0010                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001D                     	;# 
   396  001E                     	;# 
   397  001F                     	;# 
   398  0081                     	;# 
   399  0085                     	;# 
   400  0086                     	;# 
   401  0087                     	;# 
   402  0088                     	;# 
   403  0089                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  008E                     	;# 
   407  008F                     	;# 
   408  0090                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0093                     	;# 
   413  0093                     	;# 
   414  0094                     	;# 
   415  0095                     	;# 
   416  0096                     	;# 
   417  0097                     	;# 
   418  0098                     	;# 
   419  0099                     	;# 
   420  009A                     	;# 
   421  009B                     	;# 
   422  009C                     	;# 
   423  009D                     	;# 
   424  009E                     	;# 
   425  009F                     	;# 
   426  0105                     	;# 
   427  0107                     	;# 
   428  0108                     	;# 
   429  0109                     	;# 
   430  010C                     	;# 
   431  010C                     	;# 
   432  010D                     	;# 
   433  010E                     	;# 
   434  010F                     	;# 
   435  0185                     	;# 
   436  0187                     	;# 
   437  0188                     	;# 
   438  0189                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  0013                     _SSPBUF	set	19
   442  0014                     _SSPCON	set	20
   443  000B                     _INTCONbits	set	11
   444  0006                     _PORTB	set	6
   445  0019                     _TXREG	set	25
   446  001A                     _RCREG	set	26
   447  000C                     _PIR1bits	set	12
   448  0018                     _RCSTAbits	set	24
   449  0094                     _SSPSTATbits	set	148
   450  0094                     _SSPSTAT	set	148
   451  008F                     _OSCCONbits	set	143
   452  008C                     _PIE1bits	set	140
   453  0088                     _TRISDbits	set	136
   454  0088                     _TRISD	set	136
   455  0087                     _TRISC	set	135
   456  0086                     _TRISB	set	134
   457  0085                     _TRISA	set	133
   458  0098                     _TXSTAbits	set	152
   459  0099                     _SPBRG	set	153
   460  043B                     _TRISC3	set	1083
   461  043C                     _TRISC4	set	1084
   462  043D                     _TRISC5	set	1085
   463  0189                     _ANSELH	set	393
   464  0188                     _ANSEL	set	392
   465                           
   466                           ; #config settings
   467  0000                     
   468                           	psect	cinit
   469  07FC                     start_initialization:	
   470  07FC                     __initialization:	
   471  07FC                     end_of_initialization:	
   472                           ;End of C runtime variable initialization code
   473                           
   474  07FC                     __end_of__initialization:	
   475  07FC  0183               	clrf	3
   476  07FD  120A  118A  2E69   	ljmp	_main	;jump to C main() function
   477                           
   478                           	psect	cstackCOMMON
   479  0070                     __pcstackCOMMON:	
   480  0070                     ?_setup:	
   481  0070                     ?_initOsc:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ??_initOsc:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_spiWrite:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ??_spiWrite:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_spiInit:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_UART_READ:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ??_UART_READ:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?___aldiv:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     spiInit@sDataSample:	
   509                           ; 4 bytes @ 0x0
   510                           
   511  0070                     spiWrite@dat:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ___aldiv@divisor:	
   515                           ; 1 bytes @ 0x0
   516                           
   517                           
   518                           ; 4 bytes @ 0x0
   519  0070                     	ds	1
   520  0071                     spiInit@sClockIdle:	
   521                           
   522                           ; 1 bytes @ 0x1
   523  0071                     	ds	1
   524  0072                     initOsc@frec:	
   525  0072                     spiInit@sTransmitEdge:	
   526                           ; 1 bytes @ 0x2
   527                           
   528                           
   529                           ; 1 bytes @ 0x2
   530  0072                     	ds	1
   531  0073                     ??_spiInit:	
   532  0073                     spiInit@sType:	
   533                           ; 1 bytes @ 0x3
   534                           
   535                           
   536                           ; 1 bytes @ 0x3
   537  0073                     	ds	1
   538  0074                     ??_setup:	
   539  0074                     ___aldiv@dividend:	
   540                           ; 1 bytes @ 0x4
   541                           
   542                           
   543                           ; 4 bytes @ 0x4
   544  0074                     	ds	4
   545  0078                     ??___aldiv:	
   546                           
   547                           ; 1 bytes @ 0x8
   548  0078                     	ds	1
   549  0079                     ??_main:	
   550                           
   551                           ; 1 bytes @ 0x9
   552  0079                     	ds	2
   553                           
   554                           	psect	cstackBANK0
   555  0020                     __pcstackBANK0:	
   556  0020                     ___aldiv@counter:	
   557                           
   558                           ; 1 bytes @ 0x0
   559  0020                     	ds	1
   560  0021                     ___aldiv@sign:	
   561                           
   562                           ; 1 bytes @ 0x1
   563  0021                     	ds	1
   564  0022                     ___aldiv@quotient:	
   565                           
   566                           ; 4 bytes @ 0x2
   567  0022                     	ds	4
   568  0026                     ?_UART_INIT:	
   569  0026                     UART_INIT@baudrate:	
   570                           ; 1 bytes @ 0x6
   571                           
   572                           
   573                           ; 4 bytes @ 0x6
   574  0026                     	ds	4
   575  002A                     ??_UART_INIT:	
   576                           
   577                           ; 1 bytes @ 0xA
   578  002A                     	ds	12
   579                           
   580                           	psect	maintext
   581  0669                     __pmaintext:	
   582 ;;
   583 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   584 ;;
   585 ;; *************** function _main *****************
   586 ;; Defined at:
   587 ;;		line 44 in file "SPI_PIC.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : B00/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          2       0       0       0       0
   604 ;;      Totals:         2       0       0       0       0
   605 ;;Total ram usage:        2 bytes
   606 ;; Hardware stack levels required when called:    2
   607 ;; This function calls:
   608 ;;		_UART_INIT
   609 ;;		_UART_READ
   610 ;;		_initOsc
   611 ;;		_setup
   612 ;;		_spiWrite
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           
   619                           ;psect for function _main
   620  0669                     _main:	
   621  0669                     l954:	
   622                           ;incstack = 0
   623                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   624                           
   625                           
   626                           ;SPI_PIC.c: 45:     setup();
   627  0669  120A  118A  264E  120A  118A  	fcall	_setup
   628  066E                     l956:	
   629                           
   630                           ;SPI_PIC.c: 46:     initOsc(7);
   631  066E  3007               	movlw	7
   632  066F  120A  118A  26A0  120A  118A  	fcall	_initOsc
   633  0674                     l958:	
   634                           
   635                           ;SPI_PIC.c: 47:     UART_INIT(9600);
   636  0674  3000               	movlw	0
   637  0675  1283               	bcf	3,5	;RP0=0, select bank0
   638  0676  1303               	bcf	3,6	;RP1=0, select bank0
   639  0677  00A9               	movwf	UART_INIT@baudrate+3
   640  0678  3000               	movlw	0
   641  0679  00A8               	movwf	UART_INIT@baudrate+2
   642  067A  3025               	movlw	37
   643  067B  00A7               	movwf	UART_INIT@baudrate+1
   644  067C  3080               	movlw	128
   645  067D  00A6               	movwf	UART_INIT@baudrate
   646  067E  120A  118A  26FC  120A  118A  	fcall	_UART_INIT
   647  0683                     l960:	
   648                           
   649                           ;SPI_PIC.c: 49:         PORTB = UART_READ();
   650  0683  120A  118A  262F  120A  118A  	fcall	_UART_READ
   651  0688  1283               	bcf	3,5	;RP0=0, select bank0
   652  0689  1303               	bcf	3,6	;RP1=0, select bank0
   653  068A  0086               	movwf	6	;volatile
   654  068B                     l962:	
   655                           
   656                           ;SPI_PIC.c: 50:         _delay((unsigned long)((5)*(8000000/4000.0)));
   657  068B  300D               	movlw	13
   658  068C  00FA               	movwf	??_main+1
   659  068D  30FB               	movlw	251
   660  068E  00F9               	movwf	??_main
   661  068F                     u327:	
   662  068F  0BF9               	decfsz	??_main,f
   663  0690  2E8F               	goto	u327
   664  0691  0BFA               	decfsz	??_main+1,f
   665  0692  2E8F               	goto	u327
   666  0693  2E94               	nop2
   667  0694                     l964:	
   668                           
   669                           ;SPI_PIC.c: 51:         spiWrite(PORTB);
   670  0694  1283               	bcf	3,5	;RP0=0, select bank0
   671  0695  1303               	bcf	3,6	;RP1=0, select bank0
   672  0696  0806               	movf	6,w	;volatile
   673  0697  120A  118A  2629  120A  118A  	fcall	_spiWrite
   674  069C  2E83               	goto	l960
   675  069D  120A  118A  2800   	ljmp	start
   676  06A0                     __end_of_main:	
   677                           
   678                           	psect	text1
   679  0629                     __ptext1:	
   680 ;; *************** function _spiWrite *****************
   681 ;; Defined at:
   682 ;;		line 35 in file "SPI_SLAVE.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  dat             1    wreg     unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  dat             1    0[COMMON] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         1       0       0       0       0
   700 ;;Total ram usage:        1 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; This function calls:
   703 ;;		Nothing
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           
   710                           ;psect for function _spiWrite
   711  0629                     _spiWrite:	
   712                           
   713                           ;incstack = 0
   714                           ; Regs used in _spiWrite: [wreg]
   715                           ;spiWrite@dat stored from wreg
   716  0629  00F0               	movwf	spiWrite@dat
   717  062A                     l816:	
   718                           
   719                           ;SPI_SLAVE.c: 35: void spiWrite(char dat);SPI_SLAVE.c: 36: {;SPI_SLAVE.c: 37:     SSPBUF
      +                           = dat;
   720  062A  0870               	movf	spiWrite@dat,w
   721  062B  1283               	bcf	3,5	;RP0=0, select bank0
   722  062C  1303               	bcf	3,6	;RP1=0, select bank0
   723  062D  0093               	movwf	19	;volatile
   724  062E                     l114:	
   725  062E  0008               	return
   726  062F                     __end_of_spiWrite:	
   727                           
   728                           	psect	text2
   729  064E                     __ptext2:	
   730 ;; *************** function _setup *****************
   731 ;; Defined at:
   732 ;;		line 56 in file "SPI_PIC.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0, pclath, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    1
   753 ;; This function calls:
   754 ;;		_spiInit
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _setup
   762  064E                     _setup:	
   763  064E                     l934:	
   764                           ;incstack = 0
   765                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   766                           
   767                           
   768                           ;SPI_PIC.c: 57:     TRISA = 0;
   769  064E  1683               	bsf	3,5	;RP0=1, select bank1
   770  064F  1303               	bcf	3,6	;RP1=0, select bank1
   771  0650  0185               	clrf	5	;volatile
   772                           
   773                           ;SPI_PIC.c: 58:     TRISB = 0;
   774  0651  0186               	clrf	6	;volatile
   775  0652                     l936:	
   776                           
   777                           ;SPI_PIC.c: 59:     TRISC = 0b11010000;
   778  0652  30D0               	movlw	208
   779  0653  0087               	movwf	7	;volatile
   780  0654                     l938:	
   781                           
   782                           ;SPI_PIC.c: 60:     TRISD = 0;
   783  0654  0188               	clrf	8	;volatile
   784  0655                     l940:	
   785                           
   786                           ;SPI_PIC.c: 61:     TRISDbits.TRISD1 = 0;
   787  0655  1088               	bcf	8,1	;volatile
   788  0656                     l942:	
   789                           
   790                           ;SPI_PIC.c: 62:     ANSEL = 0;
   791  0656  1683               	bsf	3,5	;RP0=1, select bank3
   792  0657  1703               	bsf	3,6	;RP1=1, select bank3
   793  0658  0188               	clrf	8	;volatile
   794  0659                     l944:	
   795                           
   796                           ;SPI_PIC.c: 63:     ANSELH = 0;
   797  0659  0189               	clrf	9	;volatile
   798  065A                     l946:	
   799                           
   800                           ;SPI_PIC.c: 64:     PIE1bits.RCIE = 1;
   801  065A  1683               	bsf	3,5	;RP0=1, select bank1
   802  065B  1303               	bcf	3,6	;RP1=0, select bank1
   803  065C  168C               	bsf	12,5	;volatile
   804  065D                     l948:	
   805                           
   806                           ;SPI_PIC.c: 65:     INTCONbits.PEIE = 1;
   807  065D  170B               	bsf	11,6	;volatile
   808  065E                     l950:	
   809                           
   810                           ;SPI_PIC.c: 66:     INTCONbits.GIE = 1;
   811  065E  178B               	bsf	11,7	;volatile
   812  065F                     l952:	
   813                           
   814                           ;SPI_PIC.c: 67:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW,
      +                           SPI_IDLE_2_ACTIVE);
   815  065F  01F0               	clrf	spiInit@sDataSample
   816  0660  01F1               	clrf	spiInit@sClockIdle
   817  0661  01F2               	clrf	spiInit@sTransmitEdge
   818  0662  3024               	movlw	36
   819  0663  120A  118A  2637  120A  118A  	fcall	_spiInit
   820  0668                     l70:	
   821  0668  0008               	return
   822  0669                     __end_of_setup:	
   823                           
   824                           	psect	text3
   825  0637                     __ptext3:	
   826 ;; *************** function _spiInit *****************
   827 ;; Defined at:
   828 ;;		line 12 in file "SPI_SLAVE.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  sType           1    wreg     enum E1264
   831 ;;  sDataSample     1    0[COMMON] enum E1272
   832 ;;  sClockIdle      1    1[COMMON] enum E1276
   833 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  sType           1    3[COMMON] enum E1264
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         3       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; This function calls:
   852 ;;		Nothing
   853 ;; This function is called by:
   854 ;;		_setup
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _spiInit
   860  0637                     _spiInit:	
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   864                           ;spiInit@sType stored from wreg
   865  0637  00F3               	movwf	spiInit@sType
   866  0638                     l868:	
   867                           
   868                           ;SPI_SLAVE.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Id
      +                          le sClockIdle, Spi_Transmit_Edge sTransmitEdge);SPI_SLAVE.c: 13: {;SPI_SLAVE.c: 14:     
      +                          TRISC5=0;
   869  0638  1683               	bsf	3,5	;RP0=1, select bank1
   870  0639  1303               	bcf	3,6	;RP1=0, select bank1
   871  063A  1287               	bcf	7,5	;volatile
   872                           
   873                           ;SPI_SLAVE.c: 15:     TRISC4 = 1;
   874  063B  1607               	bsf	7,4	;volatile
   875                           
   876                           ;SPI_SLAVE.c: 16:     if(sType & 0b00000100)
   877  063C  1D73               	btfss	spiInit@sType,2
   878  063D  2E3F               	goto	u181
   879  063E  2E40               	goto	u180
   880  063F                     u181:	
   881  063F  2E44               	goto	l874
   882  0640                     u180:	
   883  0640                     l870:	
   884                           
   885                           ;SPI_SLAVE.c: 17:     {;SPI_SLAVE.c: 18:         SSPSTAT = sTransmitEdge;
   886  0640  0872               	movf	spiInit@sTransmitEdge,w
   887  0641  0094               	movwf	20	;volatile
   888  0642                     l872:	
   889                           
   890                           ;SPI_SLAVE.c: 19:         TRISC3 = 1;
   891  0642  1587               	bsf	7,3	;volatile
   892                           
   893                           ;SPI_SLAVE.c: 20:     }
   894  0643  2E48               	goto	l104
   895  0644                     l874:	
   896                           
   897                           ;SPI_SLAVE.c: 22:     {;SPI_SLAVE.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   898  0644  0870               	movf	spiInit@sDataSample,w
   899  0645  0472               	iorwf	spiInit@sTransmitEdge,w
   900  0646  0094               	movwf	20	;volatile
   901  0647                     l876:	
   902                           
   903                           ;SPI_SLAVE.c: 24:         TRISC3 = 0;
   904  0647  1187               	bcf	7,3	;volatile
   905  0648                     l104:	
   906                           ;SPI_SLAVE.c: 25:     }
   907                           
   908                           
   909                           ;SPI_SLAVE.c: 27:     SSPCON = sType | sClockIdle;
   910  0648  0873               	movf	spiInit@sType,w
   911  0649  0471               	iorwf	spiInit@sClockIdle,w
   912  064A  1283               	bcf	3,5	;RP0=0, select bank0
   913  064B  1303               	bcf	3,6	;RP1=0, select bank0
   914  064C  0094               	movwf	20	;volatile
   915  064D                     l105:	
   916  064D  0008               	return
   917  064E                     __end_of_spiInit:	
   918                           
   919                           	psect	text4
   920  06A0                     __ptext4:	
   921 ;; *************** function _initOsc *****************
   922 ;; Defined at:
   923 ;;		line 8 in file "OSCI.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  frec            1    wreg     unsigned char 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  frec            1    2[COMMON] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         1       0       0       0       0
   939 ;;      Temps:          2       0       0       0       0
   940 ;;      Totals:         3       0       0       0       0
   941 ;;Total ram usage:        3 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function _initOsc
   952  06A0                     _initOsc:	
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _initOsc: [wreg-fsr0h+status,2+status,0]
   956                           ;initOsc@frec stored from wreg
   957  06A0  00F2               	movwf	initOsc@frec
   958  06A1                     l806:	
   959                           
   960                           ;OSCI.c: 9:     switch(frec){
   961  06A1  2ED8               	goto	l810
   962  06A2                     l76:	
   963                           ;OSCI.c: 10:         case 0:
   964                           
   965                           
   966                           ;OSCI.c: 11:             OSCCONbits.IRCF0 = 0;
   967  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   968  06A3  1303               	bcf	3,6	;RP1=0, select bank1
   969  06A4  120F               	bcf	15,4	;volatile
   970                           
   971                           ;OSCI.c: 12:             OSCCONbits.IRCF1 = 0;
   972  06A5  128F               	bcf	15,5	;volatile
   973                           
   974                           ;OSCI.c: 13:             OSCCONbits.IRCF2 = 0;
   975  06A6  130F               	bcf	15,6	;volatile
   976                           
   977                           ;OSCI.c: 14:             break;
   978  06A7  2EFA               	goto	l77
   979  06A8                     l78:	
   980                           ;OSCI.c: 15:         case 1:
   981                           
   982                           
   983                           ;OSCI.c: 16:             OSCCONbits.IRCF0 = 1;
   984  06A8  1683               	bsf	3,5	;RP0=1, select bank1
   985  06A9  1303               	bcf	3,6	;RP1=0, select bank1
   986  06AA  160F               	bsf	15,4	;volatile
   987                           
   988                           ;OSCI.c: 17:             OSCCONbits.IRCF1 = 0;
   989  06AB  128F               	bcf	15,5	;volatile
   990                           
   991                           ;OSCI.c: 18:             OSCCONbits.IRCF2 = 0;
   992  06AC  130F               	bcf	15,6	;volatile
   993                           
   994                           ;OSCI.c: 19:             break;
   995  06AD  2EFA               	goto	l77
   996  06AE                     l79:	
   997                           ;OSCI.c: 20:         case 2:
   998                           
   999                           
  1000                           ;OSCI.c: 21:             OSCCONbits.IRCF0 = 0;
  1001  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  1002  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  1003  06B0  120F               	bcf	15,4	;volatile
  1004                           
  1005                           ;OSCI.c: 22:             OSCCONbits.IRCF1 = 1;
  1006  06B1  168F               	bsf	15,5	;volatile
  1007                           
  1008                           ;OSCI.c: 23:             OSCCONbits.IRCF2 = 0;
  1009  06B2  130F               	bcf	15,6	;volatile
  1010                           
  1011                           ;OSCI.c: 24:             break;
  1012  06B3  2EFA               	goto	l77
  1013  06B4                     l80:	
  1014                           ;OSCI.c: 25:         case 3:
  1015                           
  1016                           
  1017                           ;OSCI.c: 26:             OSCCONbits.IRCF0 = 1;
  1018  06B4  1683               	bsf	3,5	;RP0=1, select bank1
  1019  06B5  1303               	bcf	3,6	;RP1=0, select bank1
  1020  06B6  160F               	bsf	15,4	;volatile
  1021                           
  1022                           ;OSCI.c: 27:             OSCCONbits.IRCF1 = 1;
  1023  06B7  168F               	bsf	15,5	;volatile
  1024                           
  1025                           ;OSCI.c: 28:             OSCCONbits.IRCF2 = 0;
  1026  06B8  130F               	bcf	15,6	;volatile
  1027                           
  1028                           ;OSCI.c: 29:             break;
  1029  06B9  2EFA               	goto	l77
  1030  06BA                     l81:	
  1031                           ;OSCI.c: 30:         case 4:
  1032                           
  1033                           
  1034                           ;OSCI.c: 31:             OSCCONbits.IRCF0 = 0;
  1035  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  1036  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  1037  06BC  120F               	bcf	15,4	;volatile
  1038                           
  1039                           ;OSCI.c: 32:             OSCCONbits.IRCF1 = 0;
  1040  06BD  128F               	bcf	15,5	;volatile
  1041                           
  1042                           ;OSCI.c: 33:             OSCCONbits.IRCF2 = 1;
  1043  06BE  170F               	bsf	15,6	;volatile
  1044                           
  1045                           ;OSCI.c: 34:             break;
  1046  06BF  2EFA               	goto	l77
  1047  06C0                     l82:	
  1048                           ;OSCI.c: 35:         case 5:
  1049                           
  1050                           
  1051                           ;OSCI.c: 36:             OSCCONbits.IRCF0 = 1;
  1052  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  1053  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  1054  06C2  160F               	bsf	15,4	;volatile
  1055                           
  1056                           ;OSCI.c: 37:             OSCCONbits.IRCF1 = 0;
  1057  06C3  128F               	bcf	15,5	;volatile
  1058                           
  1059                           ;OSCI.c: 38:             OSCCONbits.IRCF2 = 1;
  1060  06C4  170F               	bsf	15,6	;volatile
  1061                           
  1062                           ;OSCI.c: 39:             break;
  1063  06C5  2EFA               	goto	l77
  1064  06C6                     l83:	
  1065                           ;OSCI.c: 40:         case 6:
  1066                           
  1067                           
  1068                           ;OSCI.c: 41:             OSCCONbits.IRCF0 = 0;
  1069  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  1070  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  1071  06C8  120F               	bcf	15,4	;volatile
  1072                           
  1073                           ;OSCI.c: 42:             OSCCONbits.IRCF1 = 1;
  1074  06C9  168F               	bsf	15,5	;volatile
  1075                           
  1076                           ;OSCI.c: 43:             OSCCONbits.IRCF2 = 1;
  1077  06CA  170F               	bsf	15,6	;volatile
  1078                           
  1079                           ;OSCI.c: 44:             break;
  1080  06CB  2EFA               	goto	l77
  1081  06CC                     l84:	
  1082                           ;OSCI.c: 45:         case 7:
  1083                           
  1084                           
  1085                           ;OSCI.c: 46:             OSCCONbits.IRCF0 = 1;
  1086  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  1087  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  1088  06CE  160F               	bsf	15,4	;volatile
  1089                           
  1090                           ;OSCI.c: 47:             OSCCONbits.IRCF1 = 1;
  1091  06CF  168F               	bsf	15,5	;volatile
  1092                           
  1093                           ;OSCI.c: 48:             OSCCONbits.IRCF2 = 1;
  1094  06D0  170F               	bsf	15,6	;volatile
  1095                           
  1096                           ;OSCI.c: 49:             break;
  1097  06D1  2EFA               	goto	l77
  1098  06D2                     l85:	
  1099                           ;OSCI.c: 50:         default:
  1100                           
  1101                           
  1102                           ;OSCI.c: 51:             OSCCONbits.IRCF0 = 0;
  1103  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  1104  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  1105  06D4  120F               	bcf	15,4	;volatile
  1106                           
  1107                           ;OSCI.c: 52:             OSCCONbits.IRCF1 = 1;
  1108  06D5  168F               	bsf	15,5	;volatile
  1109                           
  1110                           ;OSCI.c: 53:             OSCCONbits.IRCF2 = 1;
  1111  06D6  170F               	bsf	15,6	;volatile
  1112                           
  1113                           ;OSCI.c: 54:             break;
  1114  06D7  2EFA               	goto	l77
  1115  06D8                     l810:	
  1116  06D8  0872               	movf	initOsc@frec,w
  1117  06D9  00F0               	movwf	??_initOsc
  1118  06DA  01F1               	clrf	??_initOsc+1
  1119                           
  1120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1121                           ; Switch size 1, requested type "simple"
  1122                           ; Number of cases is 1, Range of values is 0 to 0
  1123                           ; switch strategies available:
  1124                           ; Name         Instructions Cycles
  1125                           ; simple_byte            4     3 (average)
  1126                           ; direct_byte           11     8 (fixed)
  1127                           ; jumptable            260     6 (fixed)
  1128                           ;	Chosen strategy is simple_byte
  1129  06DB  0871               	movf	??_initOsc+1,w
  1130  06DC  3A00               	xorlw	0	; case 0
  1131  06DD  1903               	skipnz
  1132  06DE  2EE0               	goto	l986
  1133  06DF  2ED2               	goto	l85
  1134  06E0                     l986:	
  1135                           
  1136                           ; Switch size 1, requested type "simple"
  1137                           ; Number of cases is 8, Range of values is 0 to 7
  1138                           ; switch strategies available:
  1139                           ; Name         Instructions Cycles
  1140                           ; simple_byte           25    13 (average)
  1141                           ; direct_byte           32     8 (fixed)
  1142                           ; jumptable            260     6 (fixed)
  1143                           ;	Chosen strategy is simple_byte
  1144  06E0  0870               	movf	??_initOsc,w
  1145  06E1  3A00               	xorlw	0	; case 0
  1146  06E2  1903               	skipnz
  1147  06E3  2EA2               	goto	l76
  1148  06E4  3A01               	xorlw	1	; case 1
  1149  06E5  1903               	skipnz
  1150  06E6  2EA8               	goto	l78
  1151  06E7  3A03               	xorlw	3	; case 2
  1152  06E8  1903               	skipnz
  1153  06E9  2EAE               	goto	l79
  1154  06EA  3A01               	xorlw	1	; case 3
  1155  06EB  1903               	skipnz
  1156  06EC  2EB4               	goto	l80
  1157  06ED  3A07               	xorlw	7	; case 4
  1158  06EE  1903               	skipnz
  1159  06EF  2EBA               	goto	l81
  1160  06F0  3A01               	xorlw	1	; case 5
  1161  06F1  1903               	skipnz
  1162  06F2  2EC0               	goto	l82
  1163  06F3  3A03               	xorlw	3	; case 6
  1164  06F4  1903               	skipnz
  1165  06F5  2EC6               	goto	l83
  1166  06F6  3A01               	xorlw	1	; case 7
  1167  06F7  1903               	skipnz
  1168  06F8  2ECC               	goto	l84
  1169  06F9  2ED2               	goto	l85
  1170  06FA                     l77:	
  1171                           
  1172                           ;OSCI.c: 57:     OSCCONbits.SCS = 1;
  1173  06FA  140F               	bsf	15,0	;volatile
  1174  06FB                     l86:	
  1175  06FB  0008               	return
  1176  06FC                     __end_of_initOsc:	
  1177                           
  1178                           	psect	text5
  1179  062F                     __ptext5:	
  1180 ;; *************** function _UART_READ *****************
  1181 ;; Defined at:
  1182 ;;		line 23 in file "UART.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      unsigned char 
  1189 ;; Registers used:
  1190 ;;		wreg
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           
  1210                           ;psect for function _UART_READ
  1211  062F                     _UART_READ:	
  1212  062F                     l780:	
  1213                           ;incstack = 0
  1214                           ; Regs used in _UART_READ: [wreg]
  1215                           
  1216                           
  1217                           ;UART.c: 24:     if(PIR1bits.RCIF==1){
  1218  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0631  1E8C               	btfss	12,5	;volatile
  1221  0632  2E34               	goto	u151
  1222  0633  2E35               	goto	u150
  1223  0634                     u151:	
  1224  0634  2E36               	goto	l19
  1225  0635                     u150:	
  1226  0635                     l782:	
  1227                           
  1228                           ;UART.c: 25:         return RCREG;
  1229  0635  081A               	movf	26,w	;volatile
  1230  0636                     l19:	
  1231  0636  0008               	return
  1232  0637                     __end_of_UART_READ:	
  1233                           
  1234                           	psect	text6
  1235  06FC                     __ptext6:	
  1236 ;; *************** function _UART_INIT *****************
  1237 ;; Defined at:
  1238 ;;		line 6 in file "UART.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  baudrate        4    6[BANK0 ] const long 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      unsigned char 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       4       0       0       0
  1253 ;;      Locals:         0       0       0       0       0
  1254 ;;      Temps:          0      12       0       0       0
  1255 ;;      Totals:         0      16       0       0       0
  1256 ;;Total ram usage:       16 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    1
  1259 ;; This function calls:
  1260 ;;		___aldiv
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _UART_INIT
  1268  06FC                     _UART_INIT:	
  1269  06FC                     l918:	
  1270                           ;incstack = 0
  1271                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  1272                           
  1273                           
  1274                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  1275  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1276  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1277  06FE  0826               	movf	UART_INIT@baudrate,w
  1278  06FF  00AA               	movwf	??_UART_INIT
  1279  0700  0827               	movf	UART_INIT@baudrate+1,w
  1280  0701  00AB               	movwf	??_UART_INIT+1
  1281  0702  0828               	movf	UART_INIT@baudrate+2,w
  1282  0703  00AC               	movwf	??_UART_INIT+2
  1283  0704  0829               	movf	UART_INIT@baudrate+3,w
  1284  0705  00AD               	movwf	??_UART_INIT+3
  1285  0706  3004               	movlw	4
  1286  0707                     u295:	
  1287  0707  1003               	clrc
  1288  0708  0DAA               	rlf	??_UART_INIT,f
  1289  0709  0DAB               	rlf	??_UART_INIT+1,f
  1290  070A  0DAC               	rlf	??_UART_INIT+2,f
  1291  070B  0DAD               	rlf	??_UART_INIT+3,f
  1292  070C                     u290:	
  1293  070C  3EFF               	addlw	-1
  1294  070D  1D03               	skipz
  1295  070E  2F07               	goto	u295
  1296  070F  082D               	movf	??_UART_INIT+3,w
  1297  0710  00F3               	movwf	___aldiv@divisor+3
  1298  0711  082C               	movf	??_UART_INIT+2,w
  1299  0712  00F2               	movwf	___aldiv@divisor+2
  1300  0713  082B               	movf	??_UART_INIT+1,w
  1301  0714  00F1               	movwf	___aldiv@divisor+1
  1302  0715  082A               	movf	??_UART_INIT,w
  1303  0716  00F0               	movwf	___aldiv@divisor
  1304  0717  0826               	movf	UART_INIT@baudrate,w
  1305  0718  00AE               	movwf	??_UART_INIT+4
  1306  0719  0827               	movf	UART_INIT@baudrate+1,w
  1307  071A  00AF               	movwf	??_UART_INIT+5
  1308  071B  0828               	movf	UART_INIT@baudrate+2,w
  1309  071C  00B0               	movwf	??_UART_INIT+6
  1310  071D  0829               	movf	UART_INIT@baudrate+3,w
  1311  071E  00B1               	movwf	??_UART_INIT+7
  1312  071F  3004               	movlw	4
  1313  0720                     u305:	
  1314  0720  1003               	clrc
  1315  0721  0DAE               	rlf	??_UART_INIT+4,f
  1316  0722  0DAF               	rlf	??_UART_INIT+5,f
  1317  0723  0DB0               	rlf	??_UART_INIT+6,f
  1318  0724  0DB1               	rlf	??_UART_INIT+7,f
  1319  0725                     u300:	
  1320  0725  3EFF               	addlw	-1
  1321  0726  1D03               	skipz
  1322  0727  2F20               	goto	u305
  1323  0728  3000               	movlw	0
  1324  0729  00B2               	movwf	??_UART_INIT+8
  1325  072A  3012               	movlw	18
  1326  072B  00B3               	movwf	??_UART_INIT+9
  1327  072C  307A               	movlw	122
  1328  072D  00B4               	movwf	??_UART_INIT+10
  1329  072E  3000               	movlw	0
  1330  072F  00B5               	movwf	??_UART_INIT+11
  1331  0730  082E               	movf	??_UART_INIT+4,w
  1332  0731  02B2               	subwf	??_UART_INIT+8,f
  1333  0732  082F               	movf	??_UART_INIT+5,w
  1334  0733  1C03               	skipc
  1335  0734  0F2F               	incfsz	??_UART_INIT+5,w
  1336  0735  2F37               	goto	u311
  1337  0736  2F38               	goto	u312
  1338  0737                     u311:	
  1339  0737  02B3               	subwf	??_UART_INIT+9,f
  1340  0738                     u312:	
  1341  0738  0830               	movf	??_UART_INIT+6,w
  1342  0739  1C03               	skipc
  1343  073A  0F30               	incfsz	??_UART_INIT+6,w
  1344  073B  2F3D               	goto	u313
  1345  073C  2F3E               	goto	u314
  1346  073D                     u313:	
  1347  073D  02B4               	subwf	??_UART_INIT+10,f
  1348  073E                     u314:	
  1349  073E  0831               	movf	??_UART_INIT+7,w
  1350  073F  1C03               	skipc
  1351  0740  0F31               	incfsz	??_UART_INIT+7,w
  1352  0741  2F43               	goto	u315
  1353  0742  2F44               	goto	u316
  1354  0743                     u315:	
  1355  0743  02B5               	subwf	??_UART_INIT+11,f
  1356  0744                     u316:	
  1357  0744  0835               	movf	??_UART_INIT+11,w
  1358  0745  00F7               	movwf	___aldiv@dividend+3
  1359  0746  0834               	movf	??_UART_INIT+10,w
  1360  0747  00F6               	movwf	___aldiv@dividend+2
  1361  0748  0833               	movf	??_UART_INIT+9,w
  1362  0749  00F5               	movwf	___aldiv@dividend+1
  1363  074A  0832               	movf	??_UART_INIT+8,w
  1364  074B  00F4               	movwf	___aldiv@dividend
  1365  074C  120A  118A  275F  120A  118A  	fcall	___aldiv
  1366  0751  0870               	movf	?___aldiv,w
  1367  0752  1683               	bsf	3,5	;RP0=1, select bank1
  1368  0753  1303               	bcf	3,6	;RP1=0, select bank1
  1369  0754  0099               	movwf	25	;volatile
  1370  0755                     l920:	
  1371                           
  1372                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  1373  0755  1518               	bsf	24,2	;volatile
  1374  0756                     l922:	
  1375                           
  1376                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  1377  0756  1698               	bsf	24,5	;volatile
  1378  0757                     l924:	
  1379                           
  1380                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  1381  0757  1218               	bcf	24,4	;volatile
  1382  0758                     l926:	
  1383                           
  1384                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  1385  0758  1318               	bcf	24,6	;volatile
  1386  0759                     l928:	
  1387                           
  1388                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  1389  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1390  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1391  075B  1618               	bsf	24,4	;volatile
  1392  075C                     l930:	
  1393                           
  1394                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  1395  075C  1798               	bsf	24,7	;volatile
  1396  075D                     l932:	
  1397                           
  1398                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  1399  075D  1318               	bcf	24,6	;volatile
  1400  075E                     l15:	
  1401  075E  0008               	return
  1402  075F                     __end_of_UART_INIT:	
  1403                           
  1404                           	psect	text7
  1405  075F                     __ptext7:	
  1406 ;; *************** function ___aldiv *****************
  1407 ;; Defined at:
  1408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  divisor         4    0[COMMON] long 
  1411 ;;  dividend        4    4[COMMON] long 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  quotient        4    2[BANK0 ] long 
  1414 ;;  sign            1    1[BANK0 ] unsigned char 
  1415 ;;  counter         1    0[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  4    0[COMMON] long 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         8       0       0       0       0
  1426 ;;      Locals:         0       6       0       0       0
  1427 ;;      Temps:          1       0       0       0       0
  1428 ;;      Totals:         9       6       0       0       0
  1429 ;;Total ram usage:       15 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_UART_INIT
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           
  1439                           ;psect for function ___aldiv
  1440  075F                     ___aldiv:	
  1441  075F                     l878:	
  1442                           ;incstack = 0
  1443                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1444                           
  1445  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0761  01A1               	clrf	___aldiv@sign
  1448  0762                     l880:	
  1449  0762  1FF3               	btfss	___aldiv@divisor+3,7
  1450  0763  2F65               	goto	u191
  1451  0764  2F66               	goto	u190
  1452  0765                     u191:	
  1453  0765  2F73               	goto	l273
  1454  0766                     u190:	
  1455  0766                     l882:	
  1456  0766  09F0               	comf	___aldiv@divisor,f
  1457  0767  09F1               	comf	___aldiv@divisor+1,f
  1458  0768  09F2               	comf	___aldiv@divisor+2,f
  1459  0769  09F3               	comf	___aldiv@divisor+3,f
  1460  076A  0AF0               	incf	___aldiv@divisor,f
  1461  076B  1903               	skipnz
  1462  076C  0AF1               	incf	___aldiv@divisor+1,f
  1463  076D  1903               	skipnz
  1464  076E  0AF2               	incf	___aldiv@divisor+2,f
  1465  076F  1903               	skipnz
  1466  0770  0AF3               	incf	___aldiv@divisor+3,f
  1467  0771  01A1               	clrf	___aldiv@sign
  1468  0772  0AA1               	incf	___aldiv@sign,f
  1469  0773                     l273:	
  1470  0773  1FF7               	btfss	___aldiv@dividend+3,7
  1471  0774  2F76               	goto	u201
  1472  0775  2F77               	goto	u200
  1473  0776                     u201:	
  1474  0776  2F86               	goto	l888
  1475  0777                     u200:	
  1476  0777                     l884:	
  1477  0777  09F4               	comf	___aldiv@dividend,f
  1478  0778  09F5               	comf	___aldiv@dividend+1,f
  1479  0779  09F6               	comf	___aldiv@dividend+2,f
  1480  077A  09F7               	comf	___aldiv@dividend+3,f
  1481  077B  0AF4               	incf	___aldiv@dividend,f
  1482  077C  1903               	skipnz
  1483  077D  0AF5               	incf	___aldiv@dividend+1,f
  1484  077E  1903               	skipnz
  1485  077F  0AF6               	incf	___aldiv@dividend+2,f
  1486  0780  1903               	skipnz
  1487  0781  0AF7               	incf	___aldiv@dividend+3,f
  1488  0782                     l886:	
  1489  0782  3001               	movlw	1
  1490  0783  00F8               	movwf	??___aldiv
  1491  0784  0878               	movf	??___aldiv,w
  1492  0785  06A1               	xorwf	___aldiv@sign,f
  1493  0786                     l888:	
  1494  0786  3000               	movlw	0
  1495  0787  00A5               	movwf	___aldiv@quotient+3
  1496  0788  3000               	movlw	0
  1497  0789  00A4               	movwf	___aldiv@quotient+2
  1498  078A  3000               	movlw	0
  1499  078B  00A3               	movwf	___aldiv@quotient+1
  1500  078C  3000               	movlw	0
  1501  078D  00A2               	movwf	___aldiv@quotient
  1502  078E                     l890:	
  1503  078E  0873               	movf	___aldiv@divisor+3,w
  1504  078F  0472               	iorwf	___aldiv@divisor+2,w
  1505  0790  0471               	iorwf	___aldiv@divisor+1,w
  1506  0791  0470               	iorwf	___aldiv@divisor,w
  1507  0792  1903               	skipnz
  1508  0793  2F95               	goto	u211
  1509  0794  2F96               	goto	u210
  1510  0795                     u211:	
  1511  0795  2FE3               	goto	l910
  1512  0796                     u210:	
  1513  0796                     l892:	
  1514  0796  01A0               	clrf	___aldiv@counter
  1515  0797  0AA0               	incf	___aldiv@counter,f
  1516  0798  2FA6               	goto	l896
  1517  0799                     l894:	
  1518  0799  3001               	movlw	1
  1519  079A  00F8               	movwf	??___aldiv
  1520  079B                     u225:	
  1521  079B  1003               	clrc
  1522  079C  0DF0               	rlf	___aldiv@divisor,f
  1523  079D  0DF1               	rlf	___aldiv@divisor+1,f
  1524  079E  0DF2               	rlf	___aldiv@divisor+2,f
  1525  079F  0DF3               	rlf	___aldiv@divisor+3,f
  1526  07A0  0BF8               	decfsz	??___aldiv,f
  1527  07A1  2F9B               	goto	u225
  1528  07A2  3001               	movlw	1
  1529  07A3  00F8               	movwf	??___aldiv
  1530  07A4  0878               	movf	??___aldiv,w
  1531  07A5  07A0               	addwf	___aldiv@counter,f
  1532  07A6                     l896:	
  1533  07A6  1FF3               	btfss	___aldiv@divisor+3,7
  1534  07A7  2FA9               	goto	u231
  1535  07A8  2FAA               	goto	u230
  1536  07A9                     u231:	
  1537  07A9  2F99               	goto	l894
  1538  07AA                     u230:	
  1539  07AA                     l898:	
  1540  07AA  3001               	movlw	1
  1541  07AB  00F8               	movwf	??___aldiv
  1542  07AC                     u245:	
  1543  07AC  1003               	clrc
  1544  07AD  0DA2               	rlf	___aldiv@quotient,f
  1545  07AE  0DA3               	rlf	___aldiv@quotient+1,f
  1546  07AF  0DA4               	rlf	___aldiv@quotient+2,f
  1547  07B0  0DA5               	rlf	___aldiv@quotient+3,f
  1548  07B1  0BF8               	decfsz	??___aldiv,f
  1549  07B2  2FAC               	goto	u245
  1550  07B3                     l900:	
  1551  07B3  0873               	movf	___aldiv@divisor+3,w
  1552  07B4  0277               	subwf	___aldiv@dividend+3,w
  1553  07B5  1D03               	skipz
  1554  07B6  2FC1               	goto	u255
  1555  07B7  0872               	movf	___aldiv@divisor+2,w
  1556  07B8  0276               	subwf	___aldiv@dividend+2,w
  1557  07B9  1D03               	skipz
  1558  07BA  2FC1               	goto	u255
  1559  07BB  0871               	movf	___aldiv@divisor+1,w
  1560  07BC  0275               	subwf	___aldiv@dividend+1,w
  1561  07BD  1D03               	skipz
  1562  07BE  2FC1               	goto	u255
  1563  07BF  0870               	movf	___aldiv@divisor,w
  1564  07C0  0274               	subwf	___aldiv@dividend,w
  1565  07C1                     u255:	
  1566  07C1  1C03               	skipc
  1567  07C2  2FC4               	goto	u251
  1568  07C3  2FC5               	goto	u250
  1569  07C4                     u251:	
  1570  07C4  2FD4               	goto	l906
  1571  07C5                     u250:	
  1572  07C5                     l902:	
  1573  07C5  0870               	movf	___aldiv@divisor,w
  1574  07C6  02F4               	subwf	___aldiv@dividend,f
  1575  07C7  0871               	movf	___aldiv@divisor+1,w
  1576  07C8  1C03               	skipc
  1577  07C9  0F71               	incfsz	___aldiv@divisor+1,w
  1578  07CA  02F5               	subwf	___aldiv@dividend+1,f
  1579  07CB  0872               	movf	___aldiv@divisor+2,w
  1580  07CC  1C03               	skipc
  1581  07CD  0F72               	incfsz	___aldiv@divisor+2,w
  1582  07CE  02F6               	subwf	___aldiv@dividend+2,f
  1583  07CF  0873               	movf	___aldiv@divisor+3,w
  1584  07D0  1C03               	skipc
  1585  07D1  0F73               	incfsz	___aldiv@divisor+3,w
  1586  07D2  02F7               	subwf	___aldiv@dividend+3,f
  1587  07D3                     l904:	
  1588  07D3  1422               	bsf	___aldiv@quotient,0
  1589  07D4                     l906:	
  1590  07D4  3001               	movlw	1
  1591  07D5                     u265:	
  1592  07D5  1003               	clrc
  1593  07D6  0CF3               	rrf	___aldiv@divisor+3,f
  1594  07D7  0CF2               	rrf	___aldiv@divisor+2,f
  1595  07D8  0CF1               	rrf	___aldiv@divisor+1,f
  1596  07D9  0CF0               	rrf	___aldiv@divisor,f
  1597  07DA  3EFF               	addlw	-1
  1598  07DB  1D03               	skipz
  1599  07DC  2FD5               	goto	u265
  1600  07DD                     l908:	
  1601  07DD  3001               	movlw	1
  1602  07DE  02A0               	subwf	___aldiv@counter,f
  1603  07DF  1D03               	btfss	3,2
  1604  07E0  2FE2               	goto	u271
  1605  07E1  2FE3               	goto	u270
  1606  07E2                     u271:	
  1607  07E2  2FAA               	goto	l898
  1608  07E3                     u270:	
  1609  07E3                     l910:	
  1610  07E3  0821               	movf	___aldiv@sign,w
  1611  07E4  1903               	btfsc	3,2
  1612  07E5  2FE7               	goto	u281
  1613  07E6  2FE8               	goto	u280
  1614  07E7                     u281:	
  1615  07E7  2FF3               	goto	l914
  1616  07E8                     u280:	
  1617  07E8                     l912:	
  1618  07E8  09A2               	comf	___aldiv@quotient,f
  1619  07E9  09A3               	comf	___aldiv@quotient+1,f
  1620  07EA  09A4               	comf	___aldiv@quotient+2,f
  1621  07EB  09A5               	comf	___aldiv@quotient+3,f
  1622  07EC  0AA2               	incf	___aldiv@quotient,f
  1623  07ED  1903               	skipnz
  1624  07EE  0AA3               	incf	___aldiv@quotient+1,f
  1625  07EF  1903               	skipnz
  1626  07F0  0AA4               	incf	___aldiv@quotient+2,f
  1627  07F1  1903               	skipnz
  1628  07F2  0AA5               	incf	___aldiv@quotient+3,f
  1629  07F3                     l914:	
  1630  07F3  0825               	movf	___aldiv@quotient+3,w
  1631  07F4  00F3               	movwf	?___aldiv+3
  1632  07F5  0824               	movf	___aldiv@quotient+2,w
  1633  07F6  00F2               	movwf	?___aldiv+2
  1634  07F7  0823               	movf	___aldiv@quotient+1,w
  1635  07F8  00F1               	movwf	?___aldiv+1
  1636  07F9  0822               	movf	___aldiv@quotient,w
  1637  07FA  00F0               	movwf	?___aldiv
  1638  07FB                     l283:	
  1639  07FB  0008               	return
  1640  07FC                     __end_of___aldiv:	
  1641  007E                     btemp	set	126	;btemp
  1642  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     22      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit
    _UART_INIT->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     962
                                              9 COMMON     2     2      0
                          _UART_INIT
                          _UART_READ
                            _initOsc
                              _setup
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_INIT
     ___aldiv
   _UART_READ
   _initOsc
   _setup
     _spiInit
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 11 18:56:19 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l15 075E  
                      l19 0636                        l70 0668                        l80 06B4  
                      l81 06BA                        l82 06C0                        l83 06C6  
                      l84 06CC                        l76 06A2                        l85 06D2  
                      l77 06FA                        l86 06FB                        l78 06A8  
                      l79 06AE                       l104 0648                       l105 064D  
                     l114 062E                       l273 0773                       l283 07FB  
                     l810 06D8                       l900 07B3                       l902 07C5  
                     l910 07E3                       l806 06A1                       l912 07E8  
                     l904 07D3                       l920 0755                       l816 062A  
                     l914 07F3                       l906 07D4                       l930 075C  
                     l922 0756                       l908 07DD                       l932 075D  
                     l924 0757                       l780 062F                       l940 0655  
                     l926 0758                       l918 06FC                       l782 0635  
                     l870 0640                       l950 065E                       l942 0656  
                     l934 064E                       l880 0762                       l928 0759  
                     l872 0642                       l952 065F                       l944 0659  
                     l936 0652                       l960 0683                       l890 078E  
                     l882 0766                       l874 0644                       l946 065A  
                     l938 0654                       l962 068B                       l954 0669  
                     l892 0796                       l884 0777                       l876 0647  
                     l868 0638                       l948 065D                       l964 0694  
                     l956 066E                       l894 0799                       l886 0782  
                     l878 075F                       l958 0674                       l896 07A6  
                     l888 0786                       l898 07AA                       l986 06E0  
                     u200 0777                       u201 0776                       u210 0796  
                     u211 0795                       u300 0725                       u230 07AA  
                     u150 0635                       u231 07A9                       u311 0737  
                     u151 0634                       u312 0738                       u225 079B  
                     u313 073D                       u305 0720                       u250 07C5  
                     u314 073E                       u251 07C4                       u315 0743  
                     u316 0744                       u180 0640                       u245 07AC  
                     u181 063F                       u270 07E3                       u190 0766  
                     u271 07E2                       u255 07C1                       u191 0765  
                     u327 068F                       u280 07E8                       u281 07E7  
                     u265 07D5                       u290 070C              __CFG_CPD$OFF 0000  
                     u295 0707              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 0669                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000           __end_of___aldiv 07FC                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _RCREG 001A  
                   _SPBRG 0099                     _PORTB 0006                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TXREG 0019        __size_of_UART_INIT 0063        __size_of_UART_READ 0008  
          __CFG_FCMEN$OFF 0000           __end_of_initOsc 06FC                     _setup 064E  
          __CFG_BOREN$OFF 0000           __end_of_spiInit 064E                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FC  
            __end_of_main 06A0                    ??_main 0079                    ?_setup 0070  
                  _ANSELH 0189               initOsc@frec 0072                    _TRISC3 043B  
                  _TRISC4 043C                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000         __end_of_UART_INIT 075F  
       __end_of_UART_READ 0637                 ??___aldiv 0078                 ??_initOsc 0070  
        __end_of_spiWrite 062F                 ??_spiInit 0073   __end_of__initialization 07FC  
          __pcstackCOMMON 0070             __end_of_setup 0669                   ??_setup 0074  
              __pmaintext 0669                   _SSPSTAT 0094                 ?_spiWrite 0070  
                 ___aldiv 075F                   __ptext1 0629                   __ptext2 064E  
                 __ptext3 0637                   __ptext4 06A0                   __ptext5 062F  
                 __ptext6 06FC                   __ptext7 075F                   _initOsc 06A0  
        ___aldiv@dividend 0074                   _spiInit 0637      end_of_initialization 07FC  
               _RCSTAbits 0018          ___aldiv@quotient 0022                ??_spiWrite 0070  
               _UART_INIT 06FC                 _UART_READ 062F                 _TRISDbits 0088  
             spiWrite@dat 0070                 _TXSTAbits 0098                ?_UART_INIT 0026  
              ?_UART_READ 0070       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
               ___latbits 0002             __pcstackBANK0 0020                  ?___aldiv 0070  
             ??_UART_INIT 002A               ??_UART_READ 0070         __size_of_spiWrite 0006  
                ?_initOsc 0070                  ?_spiInit 0070            __size_of_setup 001B  
         ___aldiv@divisor 0070      spiInit@sTransmitEdge 0072           ___aldiv@counter 0020  
                _PIE1bits 008C        spiInit@sDataSample 0070                  _PIR1bits 000C  
        __size_of___aldiv 009D          __size_of_initOsc 005C          __size_of_spiInit 0017  
       __CFG_BOR4V$BOR40V 0000         UART_INIT@baudrate 0026             __size_of_main 0037  
                _spiWrite 0629              spiInit@sType 0073         spiInit@sClockIdle 0071  
              _INTCONbits 000B                _OSCCONbits 008F              ___aldiv@sign 0021  
