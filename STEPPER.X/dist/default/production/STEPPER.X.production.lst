

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 13 14:59:30 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0019                     _TXREG	set	25
   289  001A                     _RCREG	set	26
   290  0018                     _RCSTAbits	set	24
   291  0005                     _PORTA	set	5
   292  0008                     _PORTD	set	8
   293  0007                     _PORTC	set	7
   294  0006                     _PORTB	set	6
   295  000B                     _INTCONbits	set	11
   296  0009                     _PORTE	set	9
   297  000C                     _PIR1bits	set	12
   298  0028                     _RA0	set	40
   299  0098                     _TXSTAbits	set	152
   300  0099                     _SPBRG	set	153
   301  0089                     _TRISE	set	137
   302  0088                     _TRISD	set	136
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  008C                     _PIE1bits	set	140
   307  008F                     _OSCCONbits	set	143
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           ; #config settings
   312  0000                     
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315  000F                     __initialization:	
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   321                           
   322                           ; Clear objects allocated to BANK0
   323  0012  1283               	bcf	3,5	;RP0=0, select bank0
   324  0013  1303               	bcf	3,6	;RP1=0, select bank0
   325  0014  01BE               	clrf	__pbssBANK0& (0+127)
   326  0015  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   327  0016                     end_of_initialization:	
   328                           ;End of C runtime variable initialization code
   329                           
   330  0016                     __end_of__initialization:	
   331  0016  0183               	clrf	3
   332  0017  120A  118A  29E9   	ljmp	_main	;jump to C main() function
   333                           
   334                           	psect	bssCOMMON
   335  0075                     __pbssCOMMON:	
   336  0075                     _P1:	
   337  0075                     	ds	1
   338  0076                     _i:	
   339  0076                     	ds	1
   340  0077                     _S0:	
   341  0077                     	ds	1
   342                           
   343                           	psect	bssBANK0
   344  003E                     __pbssBANK0:	
   345  003E                     _P2:	
   346  003E                     	ds	1
   347  003F                     _S1:	
   348  003F                     	ds	1
   349                           
   350                           	psect	cstackCOMMON
   351  0070                     __pcstackCOMMON:	
   352  0070                     ?_UART_READ:	
   353  0070                     ??_UART_READ:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ?_LOOP:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_Abrir:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_Cerrar:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_ISR:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ??_ISR:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ?_main:	
   372                           ; 1 bytes @ 0x0
   373                           
   374                           
   375                           ; 1 bytes @ 0x0
   376  0070                     	ds	3
   377  0073                     ??_Abrir:	
   378  0073                     ??_Cerrar:	
   379                           ; 1 bytes @ 0x3
   380                           
   381  0073                     ??___aldiv:	
   382                           ; 1 bytes @ 0x3
   383                           
   384                           
   385                           ; 1 bytes @ 0x3
   386  0073                     	ds	2
   387  0075                     ??_LOOP:	
   388  0075                     ??_main:	
   389                           ; 1 bytes @ 0x5
   390                           
   391                           
   392                           	psect	cstackBANK0
   393  0020                     __pcstackBANK0:	
   394                           ; 1 bytes @ 0x5
   395                           
   396  0020                     ?___aldiv:	
   397  0020                     ___aldiv@divisor:	
   398                           ; 4 bytes @ 0x0
   399                           
   400                           
   401                           ; 4 bytes @ 0x0
   402  0020                     	ds	4
   403  0024                     ___aldiv@dividend:	
   404                           
   405                           ; 4 bytes @ 0x4
   406  0024                     	ds	4
   407  0028                     ___aldiv@counter:	
   408                           
   409                           ; 1 bytes @ 0x8
   410  0028                     	ds	1
   411  0029                     ___aldiv@sign:	
   412                           
   413                           ; 1 bytes @ 0x9
   414  0029                     	ds	1
   415  002A                     ___aldiv@quotient:	
   416                           
   417                           ; 4 bytes @ 0xA
   418  002A                     	ds	4
   419  002E                     ?_UART_INIT:	
   420  002E                     UART_INIT@baudrate:	
   421                           ; 1 bytes @ 0xE
   422                           
   423                           
   424                           ; 4 bytes @ 0xE
   425  002E                     	ds	4
   426  0032                     ??_UART_INIT:	
   427                           
   428                           ; 1 bytes @ 0x12
   429  0032                     	ds	12
   430                           
   431                           	psect	maintext
   432  01E9                     __pmaintext:	
   433 ;;
   434 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   435 ;;
   436 ;; *************** function _main *****************
   437 ;; Defined at:
   438 ;;		line 53 in file "STEPPER.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, pclath, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : B00/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels required when called:    4
   458 ;; This function calls:
   459 ;;		_LOOP
   460 ;;		_UART_INIT
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _main
   468  01E9                     _main:	
   469  01E9                     l1080:	
   470                           ;incstack = 0
   471                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   472                           
   473                           
   474                           ;STEPPER.c: 54:   OSCCONbits.IRCF = 0b111;
   475  01E9  3070               	movlw	112
   476  01EA  1683               	bsf	3,5	;RP0=1, select bank1
   477  01EB  1303               	bcf	3,6	;RP1=0, select bank1
   478  01EC  048F               	iorwf	15,f	;volatile
   479  01ED                     l1082:	
   480                           
   481                           ;STEPPER.c: 55:     OSCCONbits.OSTS= 0;
   482  01ED  118F               	bcf	15,3	;volatile
   483  01EE                     l1084:	
   484                           
   485                           ;STEPPER.c: 56:     OSCCONbits.HTS = 0;
   486  01EE  110F               	bcf	15,2	;volatile
   487  01EF                     l1086:	
   488                           
   489                           ;STEPPER.c: 57:     OSCCONbits.LTS = 0;
   490  01EF  108F               	bcf	15,1	;volatile
   491  01F0                     l1088:	
   492                           
   493                           ;STEPPER.c: 58:     OSCCONbits.SCS = 1;
   494  01F0  140F               	bsf	15,0	;volatile
   495  01F1                     l1090:	
   496                           
   497                           ;STEPPER.c: 59:     UART_INIT(9600);
   498  01F1  3000               	movlw	0
   499  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   500  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   501  01F4  00B1               	movwf	UART_INIT@baudrate+3
   502  01F5  3000               	movlw	0
   503  01F6  00B0               	movwf	UART_INIT@baudrate+2
   504  01F7  3025               	movlw	37
   505  01F8  00AF               	movwf	UART_INIT@baudrate+1
   506  01F9  3080               	movlw	128
   507  01FA  00AE               	movwf	UART_INIT@baudrate
   508  01FB  120A  118A  212B  120A  118A  	fcall	_UART_INIT
   509  0200                     l1092:	
   510                           
   511                           ;STEPPER.c: 60:     PIE1bits.RCIE = 1;
   512  0200  1683               	bsf	3,5	;RP0=1, select bank1
   513  0201  1303               	bcf	3,6	;RP1=0, select bank1
   514  0202  168C               	bsf	12,5	;volatile
   515  0203                     l1094:	
   516                           
   517                           ;STEPPER.c: 61:     INTCONbits.PEIE = 1;
   518  0203  170B               	bsf	11,6	;volatile
   519  0204                     l1096:	
   520                           
   521                           ;STEPPER.c: 62:     INTCONbits.GIE = 1;
   522  0204  178B               	bsf	11,7	;volatile
   523  0205                     l1098:	
   524                           
   525                           ;STEPPER.c: 63:     TRISA = 0b00000001;
   526  0205  3001               	movlw	1
   527  0206  0085               	movwf	5	;volatile
   528  0207                     l1100:	
   529                           
   530                           ;STEPPER.c: 64:     TRISB = 0b00000000;
   531  0207  0186               	clrf	6	;volatile
   532  0208                     l1102:	
   533                           
   534                           ;STEPPER.c: 65:     TRISC = 0b00000000;
   535  0208  0187               	clrf	7	;volatile
   536  0209                     l1104:	
   537                           
   538                           ;STEPPER.c: 66:     TRISD = 0b00000000;
   539  0209  0188               	clrf	8	;volatile
   540  020A                     l1106:	
   541                           
   542                           ;STEPPER.c: 67:     TRISE = 0b0000;
   543  020A  0189               	clrf	9	;volatile
   544  020B                     l1108:	
   545                           
   546                           ;STEPPER.c: 68:     ANSEL = 0b00000000;
   547  020B  1683               	bsf	3,5	;RP0=1, select bank3
   548  020C  1703               	bsf	3,6	;RP1=1, select bank3
   549  020D  0188               	clrf	8	;volatile
   550  020E                     l1110:	
   551                           
   552                           ;STEPPER.c: 69:     ANSELH= 0b00000000;
   553  020E  0189               	clrf	9	;volatile
   554  020F                     l1112:	
   555                           
   556                           ;STEPPER.c: 70:     PORTB = 0;
   557  020F  1283               	bcf	3,5	;RP0=0, select bank0
   558  0210  1303               	bcf	3,6	;RP1=0, select bank0
   559  0211  0186               	clrf	6	;volatile
   560  0212                     l1114:	
   561                           
   562                           ;STEPPER.c: 71:     PORTC = 0;
   563  0212  0187               	clrf	7	;volatile
   564  0213                     l1116:	
   565                           
   566                           ;STEPPER.c: 72:     PORTD = 0;
   567  0213  0188               	clrf	8	;volatile
   568  0214                     l1118:	
   569                           
   570                           ;STEPPER.c: 73:     PORTE = 0;
   571  0214  0189               	clrf	9	;volatile
   572  0215                     l1120:	
   573                           
   574                           ;STEPPER.c: 74:     PORTA = 0;
   575  0215  0185               	clrf	5	;volatile
   576  0216                     l1122:	
   577                           
   578                           ;STEPPER.c: 76:     LOOP();
   579  0216  120A  118A  2238  120A  118A  	fcall	_LOOP
   580  021B                     l67:	
   581  021B  120A  118A  280C   	ljmp	start
   582  021E                     __end_of_main:	
   583                           
   584                           	psect	text1
   585  012B                     __ptext1:	
   586 ;; *************** function _UART_INIT *****************
   587 ;; Defined at:
   588 ;;		line 6 in file "UART.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;  baudrate        4   14[BANK0 ] const long 
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      unsigned char 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       4       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          0      12       0       0       0
   605 ;;      Totals:         0      16       0       0       0
   606 ;;Total ram usage:       16 bytes
   607 ;; Hardware stack levels used:    1
   608 ;; Hardware stack levels required when called:    3
   609 ;; This function calls:
   610 ;;		___aldiv
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _UART_INIT
   618  012B                     _UART_INIT:	
   619  012B                     l1064:	
   620                           ;incstack = 0
   621                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
   622                           
   623                           
   624                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
   625  012B  1283               	bcf	3,5	;RP0=0, select bank0
   626  012C  1303               	bcf	3,6	;RP1=0, select bank0
   627  012D  082E               	movf	UART_INIT@baudrate,w
   628  012E  00B2               	movwf	??_UART_INIT
   629  012F  082F               	movf	UART_INIT@baudrate+1,w
   630  0130  00B3               	movwf	??_UART_INIT+1
   631  0131  0830               	movf	UART_INIT@baudrate+2,w
   632  0132  00B4               	movwf	??_UART_INIT+2
   633  0133  0831               	movf	UART_INIT@baudrate+3,w
   634  0134  00B5               	movwf	??_UART_INIT+3
   635  0135  3004               	movlw	4
   636  0136                     u625:	
   637  0136  1003               	clrc
   638  0137  0DB2               	rlf	??_UART_INIT,f
   639  0138  0DB3               	rlf	??_UART_INIT+1,f
   640  0139  0DB4               	rlf	??_UART_INIT+2,f
   641  013A  0DB5               	rlf	??_UART_INIT+3,f
   642  013B                     u620:	
   643  013B  3EFF               	addlw	-1
   644  013C  1D03               	skipz
   645  013D  2936               	goto	u625
   646  013E  0835               	movf	??_UART_INIT+3,w
   647  013F  00A3               	movwf	___aldiv@divisor+3
   648  0140  0834               	movf	??_UART_INIT+2,w
   649  0141  00A2               	movwf	___aldiv@divisor+2
   650  0142  0833               	movf	??_UART_INIT+1,w
   651  0143  00A1               	movwf	___aldiv@divisor+1
   652  0144  0832               	movf	??_UART_INIT,w
   653  0145  00A0               	movwf	___aldiv@divisor
   654  0146  082E               	movf	UART_INIT@baudrate,w
   655  0147  00B6               	movwf	??_UART_INIT+4
   656  0148  082F               	movf	UART_INIT@baudrate+1,w
   657  0149  00B7               	movwf	??_UART_INIT+5
   658  014A  0830               	movf	UART_INIT@baudrate+2,w
   659  014B  00B8               	movwf	??_UART_INIT+6
   660  014C  0831               	movf	UART_INIT@baudrate+3,w
   661  014D  00B9               	movwf	??_UART_INIT+7
   662  014E  3004               	movlw	4
   663  014F                     u635:	
   664  014F  1003               	clrc
   665  0150  0DB6               	rlf	??_UART_INIT+4,f
   666  0151  0DB7               	rlf	??_UART_INIT+5,f
   667  0152  0DB8               	rlf	??_UART_INIT+6,f
   668  0153  0DB9               	rlf	??_UART_INIT+7,f
   669  0154                     u630:	
   670  0154  3EFF               	addlw	-1
   671  0155  1D03               	skipz
   672  0156  294F               	goto	u635
   673  0157  3000               	movlw	0
   674  0158  00BA               	movwf	??_UART_INIT+8
   675  0159  3012               	movlw	18
   676  015A  00BB               	movwf	??_UART_INIT+9
   677  015B  307A               	movlw	122
   678  015C  00BC               	movwf	??_UART_INIT+10
   679  015D  3000               	movlw	0
   680  015E  00BD               	movwf	??_UART_INIT+11
   681  015F  0836               	movf	??_UART_INIT+4,w
   682  0160  02BA               	subwf	??_UART_INIT+8,f
   683  0161  0837               	movf	??_UART_INIT+5,w
   684  0162  1C03               	skipc
   685  0163  0F37               	incfsz	??_UART_INIT+5,w
   686  0164  2966               	goto	u641
   687  0165  2967               	goto	u642
   688  0166                     u641:	
   689  0166  02BB               	subwf	??_UART_INIT+9,f
   690  0167                     u642:	
   691  0167  0838               	movf	??_UART_INIT+6,w
   692  0168  1C03               	skipc
   693  0169  0F38               	incfsz	??_UART_INIT+6,w
   694  016A  296C               	goto	u643
   695  016B  296D               	goto	u644
   696  016C                     u643:	
   697  016C  02BC               	subwf	??_UART_INIT+10,f
   698  016D                     u644:	
   699  016D  0839               	movf	??_UART_INIT+7,w
   700  016E  1C03               	skipc
   701  016F  0F39               	incfsz	??_UART_INIT+7,w
   702  0170  2972               	goto	u645
   703  0171  2973               	goto	u646
   704  0172                     u645:	
   705  0172  02BD               	subwf	??_UART_INIT+11,f
   706  0173                     u646:	
   707  0173  083D               	movf	??_UART_INIT+11,w
   708  0174  00A7               	movwf	___aldiv@dividend+3
   709  0175  083C               	movf	??_UART_INIT+10,w
   710  0176  00A6               	movwf	___aldiv@dividend+2
   711  0177  083B               	movf	??_UART_INIT+9,w
   712  0178  00A5               	movwf	___aldiv@dividend+1
   713  0179  083A               	movf	??_UART_INIT+8,w
   714  017A  00A4               	movwf	___aldiv@dividend
   715  017B  120A  118A  201A  120A  118A  	fcall	___aldiv
   716  0180  1283               	bcf	3,5	;RP0=0, select bank0
   717  0181  1303               	bcf	3,6	;RP1=0, select bank0
   718  0182  0820               	movf	?___aldiv,w
   719  0183  1683               	bsf	3,5	;RP0=1, select bank1
   720  0184  1303               	bcf	3,6	;RP1=0, select bank1
   721  0185  0099               	movwf	25	;volatile
   722  0186                     l1066:	
   723                           
   724                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
   725  0186  1518               	bsf	24,2	;volatile
   726  0187                     l1068:	
   727                           
   728                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
   729  0187  1698               	bsf	24,5	;volatile
   730  0188                     l1070:	
   731                           
   732                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
   733  0188  1218               	bcf	24,4	;volatile
   734  0189                     l1072:	
   735                           
   736                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
   737  0189  1318               	bcf	24,6	;volatile
   738  018A                     l1074:	
   739                           
   740                           ;UART.c: 13:     RCSTAbits.CREN = 1;
   741  018A  1283               	bcf	3,5	;RP0=0, select bank0
   742  018B  1303               	bcf	3,6	;RP1=0, select bank0
   743  018C  1618               	bsf	24,4	;volatile
   744  018D                     l1076:	
   745                           
   746                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
   747  018D  1798               	bsf	24,7	;volatile
   748  018E                     l1078:	
   749                           
   750                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
   751  018E  1318               	bcf	24,6	;volatile
   752  018F                     l104:	
   753  018F  0008               	return
   754  0190                     __end_of_UART_INIT:	
   755                           
   756                           	psect	text2
   757  001A                     __ptext2:	
   758 ;; *************** function ___aldiv *****************
   759 ;; Defined at:
   760 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  divisor         4    0[BANK0 ] long 
   763 ;;  dividend        4    4[BANK0 ] long 
   764 ;; Auto vars:     Size  Location     Type
   765 ;;  quotient        4   10[BANK0 ] long 
   766 ;;  sign            1    9[BANK0 ] unsigned char 
   767 ;;  counter         1    8[BANK0 ] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  4    0[BANK0 ] long 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       8       0       0       0
   778 ;;      Locals:         0       6       0       0       0
   779 ;;      Temps:          1       0       0       0       0
   780 ;;      Totals:         1      14       0       0       0
   781 ;;Total ram usage:       15 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    2
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_UART_INIT
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function ___aldiv
   793  001A                     ___aldiv:	
   794  001A                     l1024:	
   795                           ;incstack = 0
   796                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
   797                           
   798  001A  1283               	bcf	3,5	;RP0=0, select bank0
   799  001B  1303               	bcf	3,6	;RP1=0, select bank0
   800  001C  01A9               	clrf	___aldiv@sign
   801  001D                     l1026:	
   802  001D  1FA3               	btfss	___aldiv@divisor+3,7
   803  001E  2820               	goto	u521
   804  001F  2821               	goto	u520
   805  0020                     u521:	
   806  0020  282E               	goto	l267
   807  0021                     u520:	
   808  0021                     l1028:	
   809  0021  09A0               	comf	___aldiv@divisor,f
   810  0022  09A1               	comf	___aldiv@divisor+1,f
   811  0023  09A2               	comf	___aldiv@divisor+2,f
   812  0024  09A3               	comf	___aldiv@divisor+3,f
   813  0025  0AA0               	incf	___aldiv@divisor,f
   814  0026  1903               	skipnz
   815  0027  0AA1               	incf	___aldiv@divisor+1,f
   816  0028  1903               	skipnz
   817  0029  0AA2               	incf	___aldiv@divisor+2,f
   818  002A  1903               	skipnz
   819  002B  0AA3               	incf	___aldiv@divisor+3,f
   820  002C  01A9               	clrf	___aldiv@sign
   821  002D  0AA9               	incf	___aldiv@sign,f
   822  002E                     l267:	
   823  002E  1FA7               	btfss	___aldiv@dividend+3,7
   824  002F  2831               	goto	u531
   825  0030  2832               	goto	u530
   826  0031                     u531:	
   827  0031  2841               	goto	l1034
   828  0032                     u530:	
   829  0032                     l1030:	
   830  0032  09A4               	comf	___aldiv@dividend,f
   831  0033  09A5               	comf	___aldiv@dividend+1,f
   832  0034  09A6               	comf	___aldiv@dividend+2,f
   833  0035  09A7               	comf	___aldiv@dividend+3,f
   834  0036  0AA4               	incf	___aldiv@dividend,f
   835  0037  1903               	skipnz
   836  0038  0AA5               	incf	___aldiv@dividend+1,f
   837  0039  1903               	skipnz
   838  003A  0AA6               	incf	___aldiv@dividend+2,f
   839  003B  1903               	skipnz
   840  003C  0AA7               	incf	___aldiv@dividend+3,f
   841  003D                     l1032:	
   842  003D  3001               	movlw	1
   843  003E  00F3               	movwf	??___aldiv
   844  003F  0873               	movf	??___aldiv,w
   845  0040  06A9               	xorwf	___aldiv@sign,f
   846  0041                     l1034:	
   847  0041  3000               	movlw	0
   848  0042  00AD               	movwf	___aldiv@quotient+3
   849  0043  3000               	movlw	0
   850  0044  00AC               	movwf	___aldiv@quotient+2
   851  0045  3000               	movlw	0
   852  0046  00AB               	movwf	___aldiv@quotient+1
   853  0047  3000               	movlw	0
   854  0048  00AA               	movwf	___aldiv@quotient
   855  0049                     l1036:	
   856  0049  0823               	movf	___aldiv@divisor+3,w
   857  004A  0422               	iorwf	___aldiv@divisor+2,w
   858  004B  0421               	iorwf	___aldiv@divisor+1,w
   859  004C  0420               	iorwf	___aldiv@divisor,w
   860  004D  1903               	skipnz
   861  004E  2850               	goto	u541
   862  004F  2851               	goto	u540
   863  0050                     u541:	
   864  0050  289E               	goto	l1056
   865  0051                     u540:	
   866  0051                     l1038:	
   867  0051  01A8               	clrf	___aldiv@counter
   868  0052  0AA8               	incf	___aldiv@counter,f
   869  0053  2861               	goto	l1042
   870  0054                     l1040:	
   871  0054  3001               	movlw	1
   872  0055  00F3               	movwf	??___aldiv
   873  0056                     u555:	
   874  0056  1003               	clrc
   875  0057  0DA0               	rlf	___aldiv@divisor,f
   876  0058  0DA1               	rlf	___aldiv@divisor+1,f
   877  0059  0DA2               	rlf	___aldiv@divisor+2,f
   878  005A  0DA3               	rlf	___aldiv@divisor+3,f
   879  005B  0BF3               	decfsz	??___aldiv,f
   880  005C  2856               	goto	u555
   881  005D  3001               	movlw	1
   882  005E  00F3               	movwf	??___aldiv
   883  005F  0873               	movf	??___aldiv,w
   884  0060  07A8               	addwf	___aldiv@counter,f
   885  0061                     l1042:	
   886  0061  1FA3               	btfss	___aldiv@divisor+3,7
   887  0062  2864               	goto	u561
   888  0063  2865               	goto	u560
   889  0064                     u561:	
   890  0064  2854               	goto	l1040
   891  0065                     u560:	
   892  0065                     l1044:	
   893  0065  3001               	movlw	1
   894  0066  00F3               	movwf	??___aldiv
   895  0067                     u575:	
   896  0067  1003               	clrc
   897  0068  0DAA               	rlf	___aldiv@quotient,f
   898  0069  0DAB               	rlf	___aldiv@quotient+1,f
   899  006A  0DAC               	rlf	___aldiv@quotient+2,f
   900  006B  0DAD               	rlf	___aldiv@quotient+3,f
   901  006C  0BF3               	decfsz	??___aldiv,f
   902  006D  2867               	goto	u575
   903  006E                     l1046:	
   904  006E  0823               	movf	___aldiv@divisor+3,w
   905  006F  0227               	subwf	___aldiv@dividend+3,w
   906  0070  1D03               	skipz
   907  0071  287C               	goto	u585
   908  0072  0822               	movf	___aldiv@divisor+2,w
   909  0073  0226               	subwf	___aldiv@dividend+2,w
   910  0074  1D03               	skipz
   911  0075  287C               	goto	u585
   912  0076  0821               	movf	___aldiv@divisor+1,w
   913  0077  0225               	subwf	___aldiv@dividend+1,w
   914  0078  1D03               	skipz
   915  0079  287C               	goto	u585
   916  007A  0820               	movf	___aldiv@divisor,w
   917  007B  0224               	subwf	___aldiv@dividend,w
   918  007C                     u585:	
   919  007C  1C03               	skipc
   920  007D  287F               	goto	u581
   921  007E  2880               	goto	u580
   922  007F                     u581:	
   923  007F  288F               	goto	l1052
   924  0080                     u580:	
   925  0080                     l1048:	
   926  0080  0820               	movf	___aldiv@divisor,w
   927  0081  02A4               	subwf	___aldiv@dividend,f
   928  0082  0821               	movf	___aldiv@divisor+1,w
   929  0083  1C03               	skipc
   930  0084  0F21               	incfsz	___aldiv@divisor+1,w
   931  0085  02A5               	subwf	___aldiv@dividend+1,f
   932  0086  0822               	movf	___aldiv@divisor+2,w
   933  0087  1C03               	skipc
   934  0088  0F22               	incfsz	___aldiv@divisor+2,w
   935  0089  02A6               	subwf	___aldiv@dividend+2,f
   936  008A  0823               	movf	___aldiv@divisor+3,w
   937  008B  1C03               	skipc
   938  008C  0F23               	incfsz	___aldiv@divisor+3,w
   939  008D  02A7               	subwf	___aldiv@dividend+3,f
   940  008E                     l1050:	
   941  008E  142A               	bsf	___aldiv@quotient,0
   942  008F                     l1052:	
   943  008F  3001               	movlw	1
   944  0090                     u595:	
   945  0090  1003               	clrc
   946  0091  0CA3               	rrf	___aldiv@divisor+3,f
   947  0092  0CA2               	rrf	___aldiv@divisor+2,f
   948  0093  0CA1               	rrf	___aldiv@divisor+1,f
   949  0094  0CA0               	rrf	___aldiv@divisor,f
   950  0095  3EFF               	addlw	-1
   951  0096  1D03               	skipz
   952  0097  2890               	goto	u595
   953  0098                     l1054:	
   954  0098  3001               	movlw	1
   955  0099  02A8               	subwf	___aldiv@counter,f
   956  009A  1D03               	btfss	3,2
   957  009B  289D               	goto	u601
   958  009C  289E               	goto	u600
   959  009D                     u601:	
   960  009D  2865               	goto	l1044
   961  009E                     u600:	
   962  009E                     l1056:	
   963  009E  0829               	movf	___aldiv@sign,w
   964  009F  1903               	btfsc	3,2
   965  00A0  28A2               	goto	u611
   966  00A1  28A3               	goto	u610
   967  00A2                     u611:	
   968  00A2  28AE               	goto	l1060
   969  00A3                     u610:	
   970  00A3                     l1058:	
   971  00A3  09AA               	comf	___aldiv@quotient,f
   972  00A4  09AB               	comf	___aldiv@quotient+1,f
   973  00A5  09AC               	comf	___aldiv@quotient+2,f
   974  00A6  09AD               	comf	___aldiv@quotient+3,f
   975  00A7  0AAA               	incf	___aldiv@quotient,f
   976  00A8  1903               	skipnz
   977  00A9  0AAB               	incf	___aldiv@quotient+1,f
   978  00AA  1903               	skipnz
   979  00AB  0AAC               	incf	___aldiv@quotient+2,f
   980  00AC  1903               	skipnz
   981  00AD  0AAD               	incf	___aldiv@quotient+3,f
   982  00AE                     l1060:	
   983  00AE  082D               	movf	___aldiv@quotient+3,w
   984  00AF  00A3               	movwf	?___aldiv+3
   985  00B0  082C               	movf	___aldiv@quotient+2,w
   986  00B1  00A2               	movwf	?___aldiv+2
   987  00B2  082B               	movf	___aldiv@quotient+1,w
   988  00B3  00A1               	movwf	?___aldiv+1
   989  00B4  082A               	movf	___aldiv@quotient,w
   990  00B5  00A0               	movwf	?___aldiv
   991  00B6                     l277:	
   992  00B6  0008               	return
   993  00B7                     __end_of___aldiv:	
   994                           
   995                           	psect	text3
   996  0238                     __ptext3:	
   997 ;; *************** function _LOOP *****************
   998 ;; Defined at:
   999 ;;		line 83 in file "STEPPER.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    3
  1020 ;; This function calls:
  1021 ;;		_Abrir
  1022 ;;		_Cerrar
  1023 ;; This function is called by:
  1024 ;;		_main
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _LOOP
  1030  0238                     _LOOP:	
  1031  0238                     l70:	
  1032                           ;incstack = 0
  1033                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
  1034                           ;STEPPER.c: 84:     while(1){
  1035                           
  1036  0238                     l978:	
  1037                           
  1038                           ;STEPPER.c: 85:     Abrir();
  1039  0238  120A  118A  2190  120A  118A  	fcall	_Abrir
  1040                           
  1041                           ;STEPPER.c: 86:     Cerrar();
  1042  023D  120A  118A  20B7  120A  118A  	fcall	_Cerrar
  1043  0242  2A38               	goto	l70
  1044  0243  0008               	return
  1045  0244                     __end_of_LOOP:	
  1046                           
  1047                           	psect	text4
  1048  00B7                     __ptext4:	
  1049 ;; *************** function _Cerrar *****************
  1050 ;; Defined at:
  1051 ;;		line 124 in file "STEPPER.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1065 ;;      Params:         0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0
  1067 ;;      Temps:          2       0       0       0       0
  1068 ;;      Totals:         2       0       0       0       0
  1069 ;;Total ram usage:        2 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    2
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_LOOP
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _Cerrar
  1081  00B7                     _Cerrar:	
  1082  00B7                     l888:	
  1083                           ;incstack = 0
  1084                           ; Regs used in _Cerrar: [wreg+status,2+status,0]
  1085                           
  1086                           
  1087                           ;STEPPER.c: 125:     if (P1==0 && S0==1 && RA0==1){
  1088  00B7  0875               	movf	_P1,w
  1089  00B8  1D03               	btfss	3,2
  1090  00B9  28BB               	goto	u301
  1091  00BA  28BC               	goto	u300
  1092  00BB                     u301:	
  1093  00BB  28C9               	goto	l896
  1094  00BC                     u300:	
  1095  00BC                     l890:	
  1096  00BC  0377               	decf	_S0,w
  1097  00BD  1D03               	btfss	3,2
  1098  00BE  28C0               	goto	u311
  1099  00BF  28C1               	goto	u310
  1100  00C0                     u311:	
  1101  00C0  28C9               	goto	l896
  1102  00C1                     u310:	
  1103  00C1                     l892:	
  1104  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1105  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1106  00C3  1C05               	btfss	5,0	;volatile
  1107  00C4  28C6               	goto	u321
  1108  00C5  28C7               	goto	u320
  1109  00C6                     u321:	
  1110  00C6  28C9               	goto	l896
  1111  00C7                     u320:	
  1112  00C7                     l894:	
  1113                           
  1114                           ;STEPPER.c: 126:         S1=1;
  1115  00C7  01BF               	clrf	_S1
  1116  00C8  0ABF               	incf	_S1,f
  1117  00C9                     l896:	
  1118                           
  1119                           ;STEPPER.c: 128:     if (P1==0 && S0==1 && S1==1 && RA0==0){
  1120  00C9  0875               	movf	_P1,w
  1121  00CA  1D03               	btfss	3,2
  1122  00CB  28CD               	goto	u331
  1123  00CC  28CE               	goto	u330
  1124  00CD                     u331:	
  1125  00CD  292A               	goto	l89
  1126  00CE                     u330:	
  1127  00CE                     l898:	
  1128  00CE  0377               	decf	_S0,w
  1129  00CF  1D03               	btfss	3,2
  1130  00D0  28D2               	goto	u341
  1131  00D1  28D3               	goto	u340
  1132  00D2                     u341:	
  1133  00D2  292A               	goto	l89
  1134  00D3                     u340:	
  1135  00D3                     l900:	
  1136  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1137  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1138  00D5  033F               	decf	_S1,w
  1139  00D6  1D03               	btfss	3,2
  1140  00D7  28D9               	goto	u351
  1141  00D8  28DA               	goto	u350
  1142  00D9                     u351:	
  1143  00D9  292A               	goto	l89
  1144  00DA                     u350:	
  1145  00DA                     l902:	
  1146  00DA  1805               	btfsc	5,0	;volatile
  1147  00DB  28DD               	goto	u361
  1148  00DC  28DE               	goto	u360
  1149  00DD                     u361:	
  1150  00DD  292A               	goto	l89
  1151  00DE                     u360:	
  1152  00DE                     l904:	
  1153                           
  1154                           ;STEPPER.c: 129:         for (i=0; i<=128;i++){
  1155  00DE  01F6               	clrf	_i
  1156  00DF                     l906:	
  1157  00DF  3081               	movlw	129
  1158  00E0  0276               	subwf	_i,w
  1159  00E1  1C03               	skipc
  1160  00E2  28E4               	goto	u371
  1161  00E3  28E5               	goto	u370
  1162  00E4                     u371:	
  1163  00E4  28E6               	goto	l910
  1164  00E5                     u370:	
  1165  00E5  2925               	goto	l918
  1166  00E6                     l910:	
  1167                           
  1168                           ;STEPPER.c: 130:             if (i<=128){
  1169  00E6  3081               	movlw	129
  1170  00E7  0276               	subwf	_i,w
  1171  00E8  1803               	skipnc
  1172  00E9  28EB               	goto	u381
  1173  00EA  28EC               	goto	u380
  1174  00EB                     u381:	
  1175  00EB  2920               	goto	l914
  1176  00EC                     u380:	
  1177  00EC                     l912:	
  1178                           
  1179                           ;STEPPER.c: 131:                 PORTB = 0b00001000;
  1180  00EC  3008               	movlw	8
  1181  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1182  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1183  00EF  0086               	movwf	6	;volatile
  1184                           
  1185                           ;STEPPER.c: 132:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1186  00F0  3006               	movlw	6
  1187  00F1  00F4               	movwf	??_Cerrar+1
  1188  00F2  3030               	movlw	48
  1189  00F3  00F3               	movwf	??_Cerrar
  1190  00F4                     u657:	
  1191  00F4  0BF3               	decfsz	??_Cerrar,f
  1192  00F5  28F4               	goto	u657
  1193  00F6  0BF4               	decfsz	??_Cerrar+1,f
  1194  00F7  28F4               	goto	u657
  1195  00F8  0000               	nop
  1196                           
  1197                           ;STEPPER.c: 133:                 PORTB = 0b00000100;
  1198  00F9  3004               	movlw	4
  1199  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1200  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1201  00FC  0086               	movwf	6	;volatile
  1202                           
  1203                           ;STEPPER.c: 134:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1204  00FD  3006               	movlw	6
  1205  00FE  00F4               	movwf	??_Cerrar+1
  1206  00FF  3030               	movlw	48
  1207  0100  00F3               	movwf	??_Cerrar
  1208  0101                     u667:	
  1209  0101  0BF3               	decfsz	??_Cerrar,f
  1210  0102  2901               	goto	u667
  1211  0103  0BF4               	decfsz	??_Cerrar+1,f
  1212  0104  2901               	goto	u667
  1213  0105  0000               	nop
  1214                           
  1215                           ;STEPPER.c: 135:                 PORTB = 0b00000010;
  1216  0106  3002               	movlw	2
  1217  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0109  0086               	movwf	6	;volatile
  1220                           
  1221                           ;STEPPER.c: 136:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1222  010A  3006               	movlw	6
  1223  010B  00F4               	movwf	??_Cerrar+1
  1224  010C  3030               	movlw	48
  1225  010D  00F3               	movwf	??_Cerrar
  1226  010E                     u677:	
  1227  010E  0BF3               	decfsz	??_Cerrar,f
  1228  010F  290E               	goto	u677
  1229  0110  0BF4               	decfsz	??_Cerrar+1,f
  1230  0111  290E               	goto	u677
  1231  0112  0000               	nop
  1232                           
  1233                           ;STEPPER.c: 137:                 PORTB = 0b00000001;
  1234  0113  3001               	movlw	1
  1235  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0116  0086               	movwf	6	;volatile
  1238                           
  1239                           ;STEPPER.c: 138:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1240  0117  3006               	movlw	6
  1241  0118  00F4               	movwf	??_Cerrar+1
  1242  0119  3030               	movlw	48
  1243  011A  00F3               	movwf	??_Cerrar
  1244  011B                     u687:	
  1245  011B  0BF3               	decfsz	??_Cerrar,f
  1246  011C  291B               	goto	u687
  1247  011D  0BF4               	decfsz	??_Cerrar+1,f
  1248  011E  291B               	goto	u687
  1249  011F  0000               	nop
  1250  0120                     l914:	
  1251                           
  1252                           ;STEPPER.c: 140:         }
  1253  0120  3001               	movlw	1
  1254  0121  00F3               	movwf	??_Cerrar
  1255  0122  0873               	movf	??_Cerrar,w
  1256  0123  07F6               	addwf	_i,f
  1257  0124  28DF               	goto	l906
  1258  0125                     l918:	
  1259                           
  1260                           ;STEPPER.c: 141:         S1=0;
  1261  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0127  01BF               	clrf	_S1
  1264                           
  1265                           ;STEPPER.c: 142:         S0=0;
  1266  0128  01F7               	clrf	_S0
  1267                           
  1268                           ;STEPPER.c: 143:         i=0;
  1269  0129  01F6               	clrf	_i
  1270  012A                     l89:	
  1271  012A  0008               	return
  1272  012B                     __end_of_Cerrar:	
  1273                           
  1274                           	psect	text5
  1275  0190                     __ptext5:	
  1276 ;; *************** function _Abrir *****************
  1277 ;; Defined at:
  1278 ;;		line 101 in file "STEPPER.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;		None
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;		None
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         0       0       0       0       0
  1294 ;;      Temps:          2       0       0       0       0
  1295 ;;      Totals:         2       0       0       0       0
  1296 ;;Total ram usage:        2 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    2
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_LOOP
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           
  1307                           ;psect for function _Abrir
  1308  0190                     _Abrir:	
  1309  0190                     l708:	
  1310                           ;incstack = 0
  1311                           ; Regs used in _Abrir: [wreg+status,2+status,0]
  1312                           
  1313                           
  1314                           ;STEPPER.c: 102:     if (P1 == 1 && S0 == 0){
  1315  0190  0375               	decf	_P1,w
  1316  0191  1D03               	btfss	3,2
  1317  0192  2994               	goto	u11
  1318  0193  2995               	goto	u10
  1319  0194                     u11:	
  1320  0194  29E5               	goto	l728
  1321  0195                     u10:	
  1322  0195                     l710:	
  1323  0195  0877               	movf	_S0,w
  1324  0196  1D03               	btfss	3,2
  1325  0197  2999               	goto	u21
  1326  0198  299A               	goto	u20
  1327  0199                     u21:	
  1328  0199  29E5               	goto	l728
  1329  019A                     u20:	
  1330  019A                     l712:	
  1331                           
  1332                           ;STEPPER.c: 103:         for (i=0; i<=128;i++){
  1333  019A  01F6               	clrf	_i
  1334  019B                     l714:	
  1335  019B  3081               	movlw	129
  1336  019C  0276               	subwf	_i,w
  1337  019D  1C03               	skipc
  1338  019E  29A0               	goto	u31
  1339  019F  29A1               	goto	u30
  1340  01A0                     u31:	
  1341  01A0  29A2               	goto	l718
  1342  01A1                     u30:	
  1343  01A1  29E1               	goto	l78
  1344  01A2                     l718:	
  1345                           
  1346                           ;STEPPER.c: 104:             if (i<=128){
  1347  01A2  3081               	movlw	129
  1348  01A3  0276               	subwf	_i,w
  1349  01A4  1803               	skipnc
  1350  01A5  29A7               	goto	u41
  1351  01A6  29A8               	goto	u40
  1352  01A7                     u41:	
  1353  01A7  29DC               	goto	l722
  1354  01A8                     u40:	
  1355  01A8                     l720:	
  1356                           
  1357                           ;STEPPER.c: 105:                 PORTB = 0b00000001;
  1358  01A8  3001               	movlw	1
  1359  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1360  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1361  01AB  0086               	movwf	6	;volatile
  1362                           
  1363                           ;STEPPER.c: 106:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1364  01AC  3006               	movlw	6
  1365  01AD  00F4               	movwf	??_Abrir+1
  1366  01AE  3030               	movlw	48
  1367  01AF  00F3               	movwf	??_Abrir
  1368  01B0                     u697:	
  1369  01B0  0BF3               	decfsz	??_Abrir,f
  1370  01B1  29B0               	goto	u697
  1371  01B2  0BF4               	decfsz	??_Abrir+1,f
  1372  01B3  29B0               	goto	u697
  1373  01B4  0000               	nop
  1374                           
  1375                           ;STEPPER.c: 107:                 PORTB = 0b00000010;
  1376  01B5  3002               	movlw	2
  1377  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1378  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1379  01B8  0086               	movwf	6	;volatile
  1380                           
  1381                           ;STEPPER.c: 108:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1382  01B9  3006               	movlw	6
  1383  01BA  00F4               	movwf	??_Abrir+1
  1384  01BB  3030               	movlw	48
  1385  01BC  00F3               	movwf	??_Abrir
  1386  01BD                     u707:	
  1387  01BD  0BF3               	decfsz	??_Abrir,f
  1388  01BE  29BD               	goto	u707
  1389  01BF  0BF4               	decfsz	??_Abrir+1,f
  1390  01C0  29BD               	goto	u707
  1391  01C1  0000               	nop
  1392                           
  1393                           ;STEPPER.c: 109:                 PORTB = 0b00000100;
  1394  01C2  3004               	movlw	4
  1395  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1396  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1397  01C5  0086               	movwf	6	;volatile
  1398                           
  1399                           ;STEPPER.c: 110:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1400  01C6  3006               	movlw	6
  1401  01C7  00F4               	movwf	??_Abrir+1
  1402  01C8  3030               	movlw	48
  1403  01C9  00F3               	movwf	??_Abrir
  1404  01CA                     u717:	
  1405  01CA  0BF3               	decfsz	??_Abrir,f
  1406  01CB  29CA               	goto	u717
  1407  01CC  0BF4               	decfsz	??_Abrir+1,f
  1408  01CD  29CA               	goto	u717
  1409  01CE  0000               	nop
  1410                           
  1411                           ;STEPPER.c: 111:                 PORTB = 0b00001000;
  1412  01CF  3008               	movlw	8
  1413  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1414  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1415  01D2  0086               	movwf	6	;volatile
  1416                           
  1417                           ;STEPPER.c: 112:                 _delay((unsigned long)((2)*(8000000/4000.0)));
  1418  01D3  3006               	movlw	6
  1419  01D4  00F4               	movwf	??_Abrir+1
  1420  01D5  3030               	movlw	48
  1421  01D6  00F3               	movwf	??_Abrir
  1422  01D7                     u727:	
  1423  01D7  0BF3               	decfsz	??_Abrir,f
  1424  01D8  29D7               	goto	u727
  1425  01D9  0BF4               	decfsz	??_Abrir+1,f
  1426  01DA  29D7               	goto	u727
  1427  01DB  0000               	nop
  1428  01DC                     l722:	
  1429                           
  1430                           ;STEPPER.c: 114:         }
  1431  01DC  3001               	movlw	1
  1432  01DD  00F3               	movwf	??_Abrir
  1433  01DE  0873               	movf	??_Abrir,w
  1434  01DF  07F6               	addwf	_i,f
  1435  01E0  299B               	goto	l714
  1436  01E1                     l78:	
  1437                           
  1438                           ;STEPPER.c: 115:         S0=1;
  1439  01E1  01F7               	clrf	_S0
  1440  01E2  0AF7               	incf	_S0,f
  1441  01E3                     l726:	
  1442                           
  1443                           ;STEPPER.c: 116:         i=0;
  1444  01E3  01F6               	clrf	_i
  1445                           
  1446                           ;STEPPER.c: 117:     }
  1447  01E4  29E8               	goto	l81
  1448  01E5                     l728:	
  1449                           
  1450                           ;STEPPER.c: 119:         PORTB=0;
  1451  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1452  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1453  01E7  0186               	clrf	6	;volatile
  1454  01E8                     l81:	
  1455  01E8  0008               	return
  1456  01E9                     __end_of_Abrir:	
  1457                           
  1458                           	psect	text6
  1459  021E                     __ptext6:	
  1460 ;; *************** function _ISR *****************
  1461 ;; Defined at:
  1462 ;;		line 44 in file "STEPPER.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, pclath, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0
  1478 ;;      Temps:          3       0       0       0       0
  1479 ;;      Totals:         3       0       0       0       0
  1480 ;;Total ram usage:        3 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    1
  1483 ;; This function calls:
  1484 ;;		_UART_READ
  1485 ;; This function is called by:
  1486 ;;		Interrupt level 1
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _ISR
  1492  021E                     _ISR:	
  1493  021E                     i1l830:	
  1494                           
  1495                           ;STEPPER.c: 45:     if(PIR1bits.RCIF==1){
  1496  021E  1283               	bcf	3,5	;RP0=0, select bank0
  1497  021F  1303               	bcf	3,6	;RP1=0, select bank0
  1498  0220  1E8C               	btfss	12,5	;volatile
  1499  0221  2A23               	goto	u28_21
  1500  0222  2A24               	goto	u28_20
  1501  0223                     u28_21:	
  1502  0223  2A31               	goto	i1l62
  1503  0224                     u28_20:	
  1504  0224                     i1l832:	
  1505                           
  1506                           ;STEPPER.c: 46:         PORTE = UART_READ();
  1507  0224  120A  118A  2244  120A  118A  	fcall	_UART_READ
  1508  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1509  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1510  022B  0089               	movwf	9	;volatile
  1511  022C                     i1l834:	
  1512                           
  1513                           ;STEPPER.c: 47:         P1=PORTE;
  1514  022C  0809               	movf	9,w	;volatile
  1515  022D  00F0               	movwf	??_ISR
  1516  022E  0870               	movf	??_ISR,w
  1517  022F  00F5               	movwf	_P1
  1518  0230                     i1l836:	
  1519                           
  1520                           ;STEPPER.c: 48:         PIR1bits.RCIF=0;
  1521  0230  128C               	bcf	12,5	;volatile
  1522  0231                     i1l62:	
  1523  0231  0872               	movf	??_ISR+2,w
  1524  0232  008A               	movwf	10
  1525  0233  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  1526  0234  0083               	movwf	3
  1527  0235  0EFE               	swapf	btemp,f
  1528  0236  0E7E               	swapf	btemp,w
  1529  0237  0009               	retfie
  1530  0238                     __end_of_ISR:	
  1531                           
  1532                           	psect	intentry
  1533  0004                     __pintentry:	
  1534                           ;incstack = 0
  1535                           ; Regs used in _ISR: [wreg+pclath+cstack]
  1536                           
  1537  0004                     interrupt_function:	
  1538  007E                     saved_w	set	btemp
  1539  0004  00FE               	movwf	btemp
  1540  0005  0E03               	swapf	3,w
  1541  0006  00F1               	movwf	??_ISR+1
  1542  0007  080A               	movf	10,w
  1543  0008  00F2               	movwf	??_ISR+2
  1544  0009  120A  118A  2A1E   	ljmp	_ISR
  1545                           
  1546                           	psect	text7
  1547  0244                     __ptext7:	
  1548 ;; *************** function _UART_READ *****************
  1549 ;; Defined at:
  1550 ;;		line 23 in file "UART.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;		None
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      unsigned char 
  1557 ;; Registers used:
  1558 ;;		wreg
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         0       0       0       0       0
  1566 ;;      Temps:          0       0       0       0       0
  1567 ;;      Totals:         0       0       0       0       0
  1568 ;;Total ram usage:        0 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_ISR
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function _UART_READ
  1579  0244                     _UART_READ:	
  1580  0244                     i1l806:	
  1581                           ;incstack = 0
  1582                           ; Regs used in _UART_READ: [wreg]
  1583                           
  1584  0244                     i1l107:	
  1585                           ;UART.c: 24:     while(!PIR1bits.RCIF);
  1586                           
  1587  0244  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0245  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0246  1E8C               	btfss	12,5	;volatile
  1590  0247  2A49               	goto	u24_21
  1591  0248  2A4A               	goto	u24_20
  1592  0249                     u24_21:	
  1593  0249  2A44               	goto	i1l107
  1594  024A                     u24_20:	
  1595  024A                     i1l808:	
  1596                           
  1597                           ;UART.c: 25:         return RCREG;
  1598  024A  081A               	movf	26,w	;volatile
  1599  024B                     i1l110:	
  1600  024B  0008               	return
  1601  024C                     __end_of_UART_READ:	
  1602  007E                     btemp	set	126	;btemp
  1603  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       8
    BANK0            80     30      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_INIT->___aldiv
    _LOOP->_Abrir
    _LOOP->_Cerrar

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _UART_INIT->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     777
                               _LOOP
                          _UART_INIT
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     777
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                              _Abrir
                             _Cerrar
 ---------------------------------------------------------------------------------
 (2) _Cerrar                                               2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Abrir                                                2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                          _UART_READ
 ---------------------------------------------------------------------------------
 (4) _UART_READ                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LOOP
     _Abrir
     _Cerrar
   _UART_INIT
     ___aldiv

 _ISR (ROOT)
   _UART_READ

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1E      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 13 14:59:30 2020

                       _i 0076               __CFG_CP$OFF 0000                        _P1 0075  
                      l70 0238                        _P2 003E                        l81 01E8  
                      _S0 0077                        l67 021B                        _S1 003F  
                      l78 01E1                        l89 012A                        u10 0195  
                      u11 0194                        u20 019A                        u21 0199  
                      u30 01A1                        u31 01A0                        u40 01A8  
                      u41 01A7                       l104 018F                       l267 002E  
                     l277 00B6                       l710 0195                       l720 01A8  
                     l712 019A                       l722 01DC                       l714 019B  
                     l708 0190                       l900 00D3                       l726 01E3  
                     l718 01A2                       l910 00E6                       l902 00DA  
                     l728 01E5                       l912 00EC                       l904 00DE  
                     l914 0120                       l906 00DF                       l918 0125  
                     l890 00BC                       l892 00C1                       l894 00C7  
                     l896 00C9                       l888 00B7                       l898 00CE  
                     l978 0238                       _RA0 0028                       u300 00BC  
                     u301 00BB                       u310 00C1                       u311 00C0  
                     u320 00C7                       u321 00C6                       u330 00CE  
                     u331 00CD                       u340 00D3                       u341 00D2  
                     u350 00DA                       u351 00D9                       u360 00DE  
                     u600 009E                       u520 0021                       u361 00DD  
                     u601 009D                       u521 0020                       u370 00E5  
                     u610 00A3                       u530 0032              __CFG_CPD$OFF 0000  
                     u371 00E4                       u611 00A2                       u531 0031  
                     u380 00EC                       u540 0051                       u620 013B  
                     _ISR 021E                       u381 00EB                       u541 0050  
                     u630 0154                       u560 0065                       u561 0064  
                     u641 0166                       u625 0136                       u642 0167  
                     u707 01BD                       u555 0056                       u643 016C  
                     u635 014F                       u580 0080                       u644 016D  
                     u717 01CA                       u581 007F                       u645 0172  
                     u646 0173                       u727 01D7                       u575 0067  
                     u657 00F4                       u585 007C                       u667 0101  
                     u595 0090                       u677 010E                       u687 011B  
                     u697 01B0              __CFG_LVP$OFF 0000                      ?_ISR 0070  
                    l1100 0207                      l1030 0032                      l1110 020E  
                    l1102 0208                      l1040 0054                      l1032 003D  
                    l1024 001A                      l1120 0215                      l1112 020F  
                    l1104 0209                      l1050 008E                      l1042 0061  
                    l1034 0041                      l1026 001D                      l1122 0216  
                    l1114 0212                      l1106 020A                      l1060 00AE  
                    l1052 008F                      l1044 0065                      l1036 0049  
                    l1028 0021                      l1116 0213                      l1108 020B  
                    l1054 0098                      l1046 006E                      l1038 0051  
                    l1070 0188                      l1118 0214                      l1048 0080  
                    l1056 009E                      l1072 0189                      l1064 012B  
                    l1080 01E9                      l1058 00A3                      l1074 018A  
                    l1066 0186                      l1090 01F1                      l1082 01ED  
                    l1076 018D                      l1068 0187                      l1092 0200  
                    l1084 01EE                      l1078 018E                      l1094 0203  
                    l1086 01EF                      l1096 0204                      l1088 01F0  
                    l1098 0205                      i1l62 0231                      _LOOP 0238  
            __CFG_WRT$OFF 0000                      _main 01E9                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_LOOP 0070           __end_of___aldiv 00B7                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l110 024B  
                   i1l107 0244                     i1l806 0244                     i1l830 021E  
                   i1l808 024A                     i1l832 0224                     i1l834 022C  
                   i1l836 0230                     _RCREG 001A                     u24_20 024A  
                   u24_21 0249                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     u28_20 0224                     u28_21 0223  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
                   _Abrir 0190        __size_of_UART_INIT 0065        __size_of_UART_READ 0008  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E              __end_of_LOOP 0244  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 021E  
                  ??_LOOP 0075                    ??_main 0075                    ?_Abrir 0070  
                  _ANSELH 0189                    _Cerrar 00B7            __CFG_PWRTE$OFF 0000  
       __end_of_UART_INIT 0190         __end_of_UART_READ 024C                 ??___aldiv 0073  
                  saved_w 007E   __end_of__initialization 0016             __end_of_Abrir 01E9  
          __pcstackCOMMON 0070                   ??_Abrir 0073                __pbssBANK0 003E  
                 ?_Cerrar 0070                __pmaintext 01E9                __pintentry 0004  
         __size_of_Cerrar 0074                   ___aldiv 001A                   __ptext1 012B  
                 __ptext2 001A                   __ptext3 0238                   __ptext4 00B7  
                 __ptext5 0190                   __ptext6 021E                   __ptext7 0244  
            __size_of_ISR 001A          ___aldiv@dividend 0024      end_of_initialization 0016  
               _RCSTAbits 0018          ___aldiv@quotient 002A                 _UART_INIT 012B  
               _UART_READ 0244                 _TXSTAbits 0098            __end_of_Cerrar 012B  
              ?_UART_INIT 002E                ?_UART_READ 0070       start_initialization 000F  
             __end_of_ISR 0238                  ??_Cerrar 0073  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             __pbssCOMMON 0075                 ___latbits 0002             __pcstackBANK0 0020  
                ?___aldiv 0020               ??_UART_INIT 0032               ??_UART_READ 0070  
          __size_of_Abrir 0059           ___aldiv@divisor 0020         interrupt_function 0004  
         ___aldiv@counter 0028                  _PIE1bits 008C                  _PIR1bits 000C  
        __size_of___aldiv 009D         __CFG_BOR4V$BOR40V 0000             __size_of_LOOP 000C  
       UART_INIT@baudrate 002E             __size_of_main 0035                _INTCONbits 000B  
                intlevel1 0000                _OSCCONbits 008F              ___aldiv@sign 0029  
