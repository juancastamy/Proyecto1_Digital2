

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 09 22:46:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.10
    19                           ; Generated 31/07/2019 GMT
    20                           ; 
    21                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0014                     _SSPCON	set	20
   287  001E                     _ADRESH	set	30
   288  001F                     _ADCON0bits	set	31
   289  0012                     _T2CONbits	set	18
   290  0015                     _CCPR1L	set	21
   291  0017                     _CCP1CON	set	23
   292  0005                     _PORTA	set	5
   293  0009                     _PORTE	set	9
   294  0007                     _PORTC	set	7
   295  0006                     _PORTB	set	6
   296  0008                     _PORTD	set	8
   297  0013                     _SSPBUF	set	19
   298  0014                     _SSPCONbits	set	20
   299  000C                     _PIR1bits	set	12
   300  0063                     _SSPIF	set	99
   301  005E                     _PEIE	set	94
   302  005F                     _GIE	set	95
   303  0061                     _TMR2IF	set	97
   304  0091                     _SSPCON2bits	set	145
   305  0094                     _SSPSTAT	set	148
   306  0093                     _SSPADD	set	147
   307  0091                     _SSPCON2	set	145
   308  009F                     _ADCON1bits	set	159
   309  0092                     _PR2	set	146
   310  0087                     _TRISCbits	set	135
   311  0089                     _TRISE	set	137
   312  0088                     _TRISD	set	136
   313  0087                     _TRISC	set	135
   314  0086                     _TRISB	set	134
   315  0085                     _TRISA	set	133
   316  008F                     _OSCCONbits	set	143
   317  0094                     _SSPSTATbits	set	148
   318  0463                     _SSPIE	set	1123
   319  043C                     _TRISC4	set	1084
   320  043B                     _TRISC3	set	1083
   321  043A                     _TRISC2	set	1082
   322  04A0                     _BF	set	1184
   323  0189                     _ANSELH	set	393
   324  0188                     _ANSEL	set	392
   325                           
   326                           ; #config settings
   327  0000                     
   328                           	psect	cinit
   329  000F                     start_initialization:	
   330  000F                     __initialization:	
   331                           
   332                           ; Clear objects allocated to COMMON
   333  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   334  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   335  0011                     end_of_initialization:	
   336                           ;End of C runtime variable initialization code
   337                           
   338  0011                     __end_of__initialization:	
   339  0011  0183               	clrf	3
   340  0012  120A  118A  2878   	ljmp	_main	;jump to C main() function
   341                           
   342                           	psect	bssCOMMON
   343  0075                     __pbssCOMMON:	
   344  0075                     _ADC:	
   345  0075                     	ds	1
   346  0076                     _z:	
   347  0076                     	ds	1
   348                           
   349                           	psect	cstackCOMMON
   350  0070                     __pcstackCOMMON:	
   351  0070                     ?_setup:	
   352  0070                     ?_PWM:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_adc:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_I2C_Slave_Init:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_LOOP:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ?_ANALOGICO:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_isr:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_isr:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_main:	
   374                           ; 1 bytes @ 0x0
   375                           
   376                           
   377                           ; 1 bytes @ 0x0
   378  0070                     	ds	3
   379  0073                     ??_setup:	
   380  0073                     ??_PWM:	
   381                           ; 1 bytes @ 0x3
   382                           
   383  0073                     ??_adc:	
   384                           ; 1 bytes @ 0x3
   385                           
   386  0073                     ??_I2C_Slave_Init:	
   387                           ; 1 bytes @ 0x3
   388                           
   389  0073                     ??_ANALOGICO:	
   390                           ; 1 bytes @ 0x3
   391                           
   392  0073                     I2C_Slave_Init@address:	
   393                           ; 1 bytes @ 0x3
   394                           
   395                           
   396                           ; 1 bytes @ 0x3
   397  0073                     	ds	2
   398  0075                     ??_LOOP:	
   399  0075                     ??_main:	
   400                           ; 1 bytes @ 0x5
   401                           
   402                           
   403                           	psect	maintext
   404  0078                     __pmaintext:	
   405                           ; 1 bytes @ 0x5
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 83 in file "TEMP_SLAVE.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg, status,2, status,0, pclath, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : B00/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   425 ;;      Params:         0       0       0       0       0
   426 ;;      Locals:         0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0
   428 ;;      Totals:         0       0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    3
   431 ;; This function calls:
   432 ;;		_I2C_Slave_Init
   433 ;;		_LOOP
   434 ;;		_PWM
   435 ;;		_adc
   436 ;;		_setup
   437 ;; This function is called by:
   438 ;;		Startup code after reset
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _main
   444  0078                     _main:	
   445  0078                     l888:	
   446                           ;incstack = 0
   447                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   448                           
   449                           
   450                           ;TEMP_SLAVE.c: 84:     setup();
   451  0078  120A  118A  2095  120A  118A  	fcall	_setup
   452                           
   453                           ;TEMP_SLAVE.c: 85:     PWM();
   454  007D  120A  118A  20B1  120A  118A  	fcall	_PWM
   455                           
   456                           ;TEMP_SLAVE.c: 86:     adc();
   457  0082  120A  118A  20FF  120A  118A  	fcall	_adc
   458                           
   459                           ;TEMP_SLAVE.c: 87:     I2C_Slave_Init(0x30);
   460  0087  3030               	movlw	48
   461  0088  120A  118A  20E5  120A  118A  	fcall	_I2C_Slave_Init
   462                           
   463                           ;TEMP_SLAVE.c: 88:     LOOP();
   464  008D  120A  118A  210C  120A  118A  	fcall	_LOOP
   465  0092                     l97:	
   466  0092  120A  118A  280C   	ljmp	start
   467  0095                     __end_of_main:	
   468                           
   469                           	psect	text1
   470  0095                     __ptext1:	
   471 ;; *************** function _setup *****************
   472 ;; Defined at:
   473 ;;		line 92 in file "TEMP_SLAVE.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		Nothing
   496 ;; This function is called by:
   497 ;;		_main
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _setup
   503  0095                     _setup:	
   504  0095                     l780:	
   505                           ;incstack = 0
   506                           ; Regs used in _setup: [wreg+status,2+status,0]
   507                           
   508                           
   509                           ;TEMP_SLAVE.c: 93:     OSCCONbits.IRCF = 0b111;
   510  0095  3070               	movlw	112
   511  0096  1683               	bsf	3,5	;RP0=1, select bank1
   512  0097  1303               	bcf	3,6	;RP1=0, select bank1
   513  0098  048F               	iorwf	15,f	;volatile
   514  0099                     l782:	
   515                           
   516                           ;TEMP_SLAVE.c: 94:     OSCCONbits.OSTS= 0;
   517  0099  118F               	bcf	15,3	;volatile
   518  009A                     l784:	
   519                           
   520                           ;TEMP_SLAVE.c: 95:     OSCCONbits.HTS = 0;
   521  009A  110F               	bcf	15,2	;volatile
   522  009B                     l786:	
   523                           
   524                           ;TEMP_SLAVE.c: 96:     OSCCONbits.LTS = 0;
   525  009B  108F               	bcf	15,1	;volatile
   526  009C                     l788:	
   527                           
   528                           ;TEMP_SLAVE.c: 97:     OSCCONbits.SCS = 1;
   529  009C  140F               	bsf	15,0	;volatile
   530  009D                     l790:	
   531                           
   532                           ;TEMP_SLAVE.c: 99:     TRISA = 0b00000001;
   533  009D  3001               	movlw	1
   534  009E  0085               	movwf	5	;volatile
   535  009F                     l792:	
   536                           
   537                           ;TEMP_SLAVE.c: 100:     TRISB = 0;
   538  009F  0186               	clrf	6	;volatile
   539  00A0                     l794:	
   540                           
   541                           ;TEMP_SLAVE.c: 101:     TRISC = 0b00011000;
   542  00A0  3018               	movlw	24
   543  00A1  0087               	movwf	7	;volatile
   544  00A2                     l796:	
   545                           
   546                           ;TEMP_SLAVE.c: 102:     TRISD = 0;
   547  00A2  0188               	clrf	8	;volatile
   548  00A3                     l798:	
   549                           
   550                           ;TEMP_SLAVE.c: 103:     TRISE = 0;
   551  00A3  0189               	clrf	9	;volatile
   552  00A4                     l800:	
   553                           
   554                           ;TEMP_SLAVE.c: 104:     ANSEL = 0b00000001;
   555  00A4  3001               	movlw	1
   556  00A5  1683               	bsf	3,5	;RP0=1, select bank3
   557  00A6  1703               	bsf	3,6	;RP1=1, select bank3
   558  00A7  0088               	movwf	8	;volatile
   559  00A8                     l802:	
   560                           
   561                           ;TEMP_SLAVE.c: 105:     ANSELH = 0;
   562  00A8  0189               	clrf	9	;volatile
   563  00A9                     l804:	
   564                           
   565                           ;TEMP_SLAVE.c: 106:     PORTB = 0;
   566  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   567  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   568  00AB  0186               	clrf	6	;volatile
   569  00AC                     l806:	
   570                           
   571                           ;TEMP_SLAVE.c: 107:     PORTC = 0;
   572  00AC  0187               	clrf	7	;volatile
   573  00AD                     l808:	
   574                           
   575                           ;TEMP_SLAVE.c: 108:     PORTD = 0;
   576  00AD  0188               	clrf	8	;volatile
   577  00AE                     l810:	
   578                           
   579                           ;TEMP_SLAVE.c: 109:     PORTE = 0;
   580  00AE  0189               	clrf	9	;volatile
   581  00AF                     l812:	
   582                           
   583                           ;TEMP_SLAVE.c: 110:     PORTA = 0;
   584  00AF  0185               	clrf	5	;volatile
   585  00B0                     l100:	
   586  00B0  0008               	return
   587  00B1                     __end_of_setup:	
   588                           
   589                           	psect	text2
   590  00FF                     __ptext2:	
   591 ;; *************** function _adc *****************
   592 ;; Defined at:
   593 ;;		line 127 in file "TEMP_SLAVE.c"
   594 ;; Parameters:    Size  Location     Type
   595 ;;		None
   596 ;; Auto vars:     Size  Location     Type
   597 ;;		None
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, status,2, status,0
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         0       0       0       0       0
   609 ;;      Temps:          0       0       0       0       0
   610 ;;      Totals:         0       0       0       0       0
   611 ;;Total ram usage:        0 bytes
   612 ;; Hardware stack levels used:    1
   613 ;; Hardware stack levels required when called:    1
   614 ;; This function calls:
   615 ;;		Nothing
   616 ;; This function is called by:
   617 ;;		_main
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           
   621                           
   622                           ;psect for function _adc
   623  00FF                     _adc:	
   624  00FF                     l824:	
   625                           ;incstack = 0
   626                           ; Regs used in _adc: [wreg+status,2+status,0]
   627                           
   628                           
   629                           ;TEMP_SLAVE.c: 129:     ADCON0bits.ADCS = 01;
   630  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   631  0100  1303               	bcf	3,6	;RP1=0, select bank0
   632  0101  081F               	movf	31,w	;volatile
   633  0102  393F               	andlw	-193
   634  0103  3840               	iorlw	64
   635  0104  009F               	movwf	31	;volatile
   636  0105                     l826:	
   637                           
   638                           ;TEMP_SLAVE.c: 130:     ADCON0bits.ADON = 1;
   639  0105  141F               	bsf	31,0	;volatile
   640  0106                     l828:	
   641                           
   642                           ;TEMP_SLAVE.c: 131:     ADCON1bits.ADFM = 0;
   643  0106  1683               	bsf	3,5	;RP0=1, select bank1
   644  0107  1303               	bcf	3,6	;RP1=0, select bank1
   645  0108  139F               	bcf	31,7	;volatile
   646  0109                     l830:	
   647                           
   648                           ;TEMP_SLAVE.c: 132:     ADCON1bits.VCFG0 = 0;
   649  0109  121F               	bcf	31,4	;volatile
   650  010A                     l832:	
   651                           
   652                           ;TEMP_SLAVE.c: 133:     ADCON1bits.VCFG1 = 0;
   653  010A  129F               	bcf	31,5	;volatile
   654  010B                     l109:	
   655  010B  0008               	return
   656  010C                     __end_of_adc:	
   657                           
   658                           	psect	text3
   659  00B1                     __ptext3:	
   660 ;; *************** function _PWM *****************
   661 ;; Defined at:
   662 ;;		line 113 in file "TEMP_SLAVE.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used:    1
   682 ;; Hardware stack levels required when called:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function _PWM
   692  00B1                     _PWM:	
   693  00B1                     l814:	
   694                           ;incstack = 0
   695                           ; Regs used in _PWM: [wreg+status,2+status,0]
   696                           
   697                           
   698                           ;TEMP_SLAVE.c: 115:     CCP1CON = 0b00111100;
   699  00B1  303C               	movlw	60
   700  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   701  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   702  00B4  0097               	movwf	23	;volatile
   703  00B5                     l816:	
   704                           
   705                           ;TEMP_SLAVE.c: 116:     TRISCbits.TRISC2 = 1;
   706  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   707  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   708  00B7  1507               	bsf	7,2	;volatile
   709                           
   710                           ;TEMP_SLAVE.c: 117:     PR2 = 155;
   711  00B8  309B               	movlw	155
   712  00B9  0092               	movwf	18	;volatile
   713                           
   714                           ;TEMP_SLAVE.c: 118:     CCPR1L=27;
   715  00BA  301B               	movlw	27
   716  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   717  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   718  00BD  0095               	movwf	21	;volatile
   719  00BE                     l818:	
   720                           
   721                           ;TEMP_SLAVE.c: 119:     PIR1bits.TMR2IF = 0;
   722  00BE  108C               	bcf	12,1	;volatile
   723  00BF                     l820:	
   724                           
   725                           ;TEMP_SLAVE.c: 120:     T2CONbits.T2CKPS = 0b11;
   726  00BF  3003               	movlw	3
   727  00C0  0492               	iorwf	18,f	;volatile
   728  00C1                     l822:	
   729                           
   730                           ;TEMP_SLAVE.c: 121:     T2CONbits.TMR2ON = 1;
   731  00C1  1512               	bsf	18,2	;volatile
   732  00C2                     l103:	
   733                           ;TEMP_SLAVE.c: 122:     while(!TMR2IF);
   734                           
   735  00C2  1C8C               	btfss	12,1	;volatile
   736  00C3  28C5               	goto	u21
   737  00C4  28C6               	goto	u20
   738  00C5                     u21:	
   739  00C5  28C2               	goto	l103
   740  00C6                     u20:	
   741  00C6                     l105:	
   742                           
   743                           ;TEMP_SLAVE.c: 123:     TMR2IF = 0;
   744  00C6  108C               	bcf	12,1	;volatile
   745                           
   746                           ;TEMP_SLAVE.c: 124:     TRISC2=0;
   747  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   748  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   749  00C9  1107               	bcf	7,2	;volatile
   750  00CA                     l106:	
   751  00CA  0008               	return
   752  00CB                     __end_of_PWM:	
   753                           
   754                           	psect	text4
   755  010C                     __ptext4:	
   756 ;; *************** function _LOOP *****************
   757 ;; Defined at:
   758 ;;		line 136 in file "TEMP_SLAVE.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;		None
   763 ;; Return value:  Size  Location     Type
   764 ;;                  1    wreg      void 
   765 ;; Registers used:
   766 ;;		wreg, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         0       0       0       0       0
   774 ;;      Temps:          0       0       0       0       0
   775 ;;      Totals:         0       0       0       0       0
   776 ;;Total ram usage:        0 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    2
   779 ;; This function calls:
   780 ;;		_ANALOGICO
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _LOOP
   788  010C                     _LOOP:	
   789  010C                     l112:	
   790                           ;incstack = 0
   791                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   792                           ;TEMP_SLAVE.c: 137:     while(1){
   793                           
   794  010C                     l848:	
   795                           
   796                           ;TEMP_SLAVE.c: 138:         ANALOGICO();
   797  010C  120A  118A  20CB  120A  118A  	fcall	_ANALOGICO
   798  0111  290C               	goto	l112
   799  0112  0008               	return
   800  0113                     __end_of_LOOP:	
   801                           
   802                           	psect	text5
   803  00CB                     __ptext5:	
   804 ;; *************** function _ANALOGICO *****************
   805 ;; Defined at:
   806 ;;		line 143 in file "TEMP_SLAVE.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         0       0       0       0       0
   822 ;;      Temps:          2       0       0       0       0
   823 ;;      Totals:         2       0       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    1
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_LOOP
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _ANALOGICO
   836  00CB                     _ANALOGICO:	
   837  00CB                     l768:	
   838                           ;incstack = 0
   839                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   840                           
   841                           
   842                           ;TEMP_SLAVE.c: 144:     _delay((unsigned long)((1)*(8000000/4000.0)));
   843  00CB  3003               	movlw	3
   844  00CC  00F4               	movwf	??_ANALOGICO+1
   845  00CD  3097               	movlw	151
   846  00CE  00F3               	movwf	??_ANALOGICO
   847  00CF                     u167:	
   848  00CF  0BF3               	decfsz	??_ANALOGICO,f
   849  00D0  28CF               	goto	u167
   850  00D1  0BF4               	decfsz	??_ANALOGICO+1,f
   851  00D2  28CF               	goto	u167
   852  00D3  28D4               	nop2
   853  00D4                     l770:	
   854                           
   855                           ;TEMP_SLAVE.c: 145:         ADCON0bits.CHS = 0000;
   856  00D4  30C3               	movlw	-61
   857  00D5  1283               	bcf	3,5	;RP0=0, select bank0
   858  00D6  1303               	bcf	3,6	;RP1=0, select bank0
   859  00D7  059F               	andwf	31,f	;volatile
   860  00D8                     l772:	
   861                           
   862                           ;TEMP_SLAVE.c: 146:         ADCON0bits.ADON = 1;
   863  00D8  141F               	bsf	31,0	;volatile
   864  00D9                     l774:	
   865                           
   866                           ;TEMP_SLAVE.c: 147:         ADCON0bits.GO = 1;
   867  00D9  149F               	bsf	31,1	;volatile
   868  00DA                     l118:	
   869                           ;TEMP_SLAVE.c: 148:         while(ADCON0bits.GO);
   870                           
   871  00DA  189F               	btfsc	31,1	;volatile
   872  00DB  28DD               	goto	u11
   873  00DC  28DE               	goto	u10
   874  00DD                     u11:	
   875  00DD  28DA               	goto	l118
   876  00DE                     u10:	
   877  00DE                     l776:	
   878                           
   879                           ;TEMP_SLAVE.c: 149:        ADC = ADRESH;
   880  00DE  081E               	movf	30,w	;volatile
   881  00DF  00F3               	movwf	??_ANALOGICO
   882  00E0  0873               	movf	??_ANALOGICO,w
   883  00E1  00F5               	movwf	_ADC
   884                           
   885                           ;TEMP_SLAVE.c: 150:        PORTB = ADC;
   886  00E2  0875               	movf	_ADC,w
   887  00E3  0086               	movwf	6	;volatile
   888  00E4                     l121:	
   889  00E4  0008               	return
   890  00E5                     __end_of_ANALOGICO:	
   891                           
   892                           	psect	text6
   893  00E5                     __ptext6:	
   894 ;; *************** function _I2C_Slave_Init *****************
   895 ;; Defined at:
   896 ;;		line 85 in file "TEMP_SENSE.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  address         1    wreg     unsigned char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  address         1    3[COMMON] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   910 ;;      Params:         0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0
   913 ;;      Totals:         1       0       0       0       0
   914 ;;Total ram usage:        1 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           
   925                           ;psect for function _I2C_Slave_Init
   926  00E5                     _I2C_Slave_Init:	
   927                           
   928                           ;incstack = 0
   929                           ; Regs used in _I2C_Slave_Init: [wreg]
   930                           ;I2C_Slave_Init@address stored from wreg
   931  00E5  00F3               	movwf	I2C_Slave_Init@address
   932  00E6                     l834:	
   933                           
   934                           ;TEMP_SENSE.c: 86:     SSPADD = address;
   935  00E6  0873               	movf	I2C_Slave_Init@address,w
   936  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   937  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   938  00E9  0093               	movwf	19	;volatile
   939                           
   940                           ;TEMP_SENSE.c: 87:     SSPCON = 0x36;
   941  00EA  3036               	movlw	54
   942  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   943  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   944  00ED  0094               	movwf	20	;volatile
   945                           
   946                           ;TEMP_SENSE.c: 88:     SSPSTAT = 0x80;
   947  00EE  3080               	movlw	128
   948  00EF  1683               	bsf	3,5	;RP0=1, select bank1
   949  00F0  1303               	bcf	3,6	;RP1=0, select bank1
   950  00F1  0094               	movwf	20	;volatile
   951                           
   952                           ;TEMP_SENSE.c: 89:     SSPCON2 = 0x01;
   953  00F2  3001               	movlw	1
   954  00F3  0091               	movwf	17	;volatile
   955  00F4                     l836:	
   956                           
   957                           ;TEMP_SENSE.c: 90:     TRISC3 = 1;
   958  00F4  1587               	bsf	7,3	;volatile
   959  00F5                     l838:	
   960                           
   961                           ;TEMP_SENSE.c: 91:     TRISC4 = 1;
   962  00F5  1607               	bsf	7,4	;volatile
   963  00F6                     l840:	
   964                           
   965                           ;TEMP_SENSE.c: 92:     GIE = 1;
   966  00F6  178B               	bsf	11,7	;volatile
   967  00F7                     l842:	
   968                           
   969                           ;TEMP_SENSE.c: 93:     PEIE = 1;
   970  00F7  170B               	bsf	11,6	;volatile
   971  00F8                     l844:	
   972                           
   973                           ;TEMP_SENSE.c: 94:     SSPIF = 0;
   974  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   975  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   976  00FA  118C               	bcf	12,3	;volatile
   977  00FB                     l846:	
   978                           
   979                           ;TEMP_SENSE.c: 95:     SSPIE = 1;
   980  00FB  1683               	bsf	3,5	;RP0=1, select bank1
   981  00FC  1303               	bcf	3,6	;RP1=0, select bank1
   982  00FD  158C               	bsf	12,3	;volatile
   983  00FE                     l176:	
   984  00FE  0008               	return
   985  00FF                     __end_of_I2C_Slave_Init:	
   986                           
   987                           	psect	text7
   988  0015                     __ptext7:	
   989 ;; *************** function _isr *****************
   990 ;; Defined at:
   991 ;;		line 48 in file "TEMP_SLAVE.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;		None
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       0       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          3       0       0       0       0
  1008 ;;      Totals:         3       0       0       0       0
  1009 ;;Total ram usage:        3 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		Interrupt level 1
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           
  1019                           ;psect for function _isr
  1020  0015                     _isr:	
  1021  0015                     i1l854:	
  1022                           
  1023                           ;TEMP_SLAVE.c: 49:    if(PIR1bits.SSPIF == 1){
  1024  0015  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0016  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0017  1D8C               	btfss	12,3	;volatile
  1027  0018  281A               	goto	u5_21
  1028  0019  281B               	goto	u5_20
  1029  001A                     u5_21:	
  1030  001A  2871               	goto	i1l92
  1031  001B                     u5_20:	
  1032  001B                     i1l856:	
  1033                           
  1034                           ;TEMP_SLAVE.c: 51:         SSPCONbits.CKP = 0;
  1035  001B  1214               	bcf	20,4	;volatile
  1036                           
  1037                           ;TEMP_SLAVE.c: 53:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  1038  001C  1B14               	btfsc	20,6	;volatile
  1039  001D  281F               	goto	u6_21
  1040  001E  2820               	goto	u6_20
  1041  001F                     u6_21:	
  1042  001F  2824               	goto	i1l860
  1043  0020                     u6_20:	
  1044  0020                     i1l858:	
  1045  0020  1F94               	btfss	20,7	;volatile
  1046  0021  2823               	goto	u7_21
  1047  0022  2824               	goto	u7_20
  1048  0023                     u7_21:	
  1049  0023  282B               	goto	i1l868
  1050  0024                     u7_20:	
  1051  0024                     i1l860:	
  1052                           
  1053                           ;TEMP_SLAVE.c: 54:             z = SSPBUF;
  1054  0024  0813               	movf	19,w	;volatile
  1055  0025  00F0               	movwf	??_isr
  1056  0026  0870               	movf	??_isr,w
  1057  0027  00F6               	movwf	_z
  1058  0028                     i1l862:	
  1059                           
  1060                           ;TEMP_SLAVE.c: 55:             SSPCONbits.SSPOV = 0;
  1061  0028  1314               	bcf	20,6	;volatile
  1062  0029                     i1l864:	
  1063                           
  1064                           ;TEMP_SLAVE.c: 56:             SSPCONbits.WCOL = 0;
  1065  0029  1394               	bcf	20,7	;volatile
  1066  002A                     i1l866:	
  1067                           
  1068                           ;TEMP_SLAVE.c: 57:             SSPCONbits.CKP = 1;
  1069  002A  1614               	bsf	20,4	;volatile
  1070  002B                     i1l868:	
  1071                           
  1072                           ;TEMP_SLAVE.c: 60:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  1073  002B  1683               	bsf	3,5	;RP0=1, select bank1
  1074  002C  1303               	bcf	3,6	;RP1=0, select bank1
  1075  002D  1A94               	btfsc	20,5	;volatile
  1076  002E  2830               	goto	u8_21
  1077  002F  2831               	goto	u8_20
  1078  0030                     u8_21:	
  1079  0030  284D               	goto	i1l83
  1080  0031                     u8_20:	
  1081  0031                     i1l870:	
  1082  0031  1914               	btfsc	20,2	;volatile
  1083  0032  2834               	goto	u9_21
  1084  0033  2835               	goto	u9_20
  1085  0034                     u9_21:	
  1086  0034  284D               	goto	i1l83
  1087  0035                     u9_20:	
  1088  0035                     i1l872:	
  1089                           
  1090                           ;TEMP_SLAVE.c: 62:             z = SSPBUF;
  1091  0035  1283               	bcf	3,5	;RP0=0, select bank0
  1092  0036  1303               	bcf	3,6	;RP1=0, select bank0
  1093  0037  0813               	movf	19,w	;volatile
  1094  0038  00F0               	movwf	??_isr
  1095  0039  0870               	movf	??_isr,w
  1096  003A  00F6               	movwf	_z
  1097  003B                     i1l874:	
  1098                           
  1099                           ;TEMP_SLAVE.c: 64:             PIR1bits.SSPIF = 0;
  1100  003B  118C               	bcf	12,3	;volatile
  1101  003C                     i1l876:	
  1102                           
  1103                           ;TEMP_SLAVE.c: 65:             SSPCONbits.CKP = 1;
  1104  003C  1614               	bsf	20,4	;volatile
  1105  003D                     i1l84:	
  1106                           ;TEMP_SLAVE.c: 66:             while(!SSPSTATbits.BF);
  1107                           
  1108  003D  1683               	bsf	3,5	;RP0=1, select bank1
  1109  003E  1303               	bcf	3,6	;RP1=0, select bank1
  1110  003F  1C14               	btfss	20,0	;volatile
  1111  0040  2842               	goto	u10_21
  1112  0041  2843               	goto	u10_20
  1113  0042                     u10_21:	
  1114  0042  283D               	goto	i1l84
  1115  0043                     u10_20:	
  1116  0043                     i1l878:	
  1117                           
  1118                           ;TEMP_SLAVE.c: 67:             PORTD = SSPBUF;
  1119  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0045  0813               	movf	19,w	;volatile
  1122  0046  0088               	movwf	8	;volatile
  1123                           
  1124                           ;TEMP_SLAVE.c: 68:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1125  0047  30A6               	movlw	166
  1126  0048  00F0               	movwf	??_isr
  1127  0049                     u17_27:	
  1128  0049  0BF0               	decfsz	??_isr,f
  1129  004A  2849               	goto	u17_27
  1130  004B  0000               	nop
  1131                           
  1132                           ;TEMP_SLAVE.c: 70:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1133  004C  286E               	goto	i1l87
  1134  004D                     i1l83:	
  1135  004D  1A94               	btfsc	20,5	;volatile
  1136  004E  2850               	goto	u11_21
  1137  004F  2851               	goto	u11_20
  1138  0050                     u11_21:	
  1139  0050  286E               	goto	i1l87
  1140  0051                     u11_20:	
  1141  0051                     i1l880:	
  1142  0051  1D14               	btfss	20,2	;volatile
  1143  0052  2854               	goto	u12_21
  1144  0053  2855               	goto	u12_20
  1145  0054                     u12_21:	
  1146  0054  286E               	goto	i1l87
  1147  0055                     u12_20:	
  1148  0055                     i1l882:	
  1149                           
  1150                           ;TEMP_SLAVE.c: 71:             z = SSPBUF;
  1151  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0057  0813               	movf	19,w	;volatile
  1154  0058  00F0               	movwf	??_isr
  1155  0059  0870               	movf	??_isr,w
  1156  005A  00F6               	movwf	_z
  1157  005B                     i1l884:	
  1158                           
  1159                           ;TEMP_SLAVE.c: 72:             BF = 0;
  1160  005B  1683               	bsf	3,5	;RP0=1, select bank1
  1161  005C  1303               	bcf	3,6	;RP1=0, select bank1
  1162  005D  1014               	bcf	20,0	;volatile
  1163                           
  1164                           ;TEMP_SLAVE.c: 73:             SSPBUF = ADC;
  1165  005E  0875               	movf	_ADC,w
  1166  005F  1283               	bcf	3,5	;RP0=0, select bank0
  1167  0060  1303               	bcf	3,6	;RP1=0, select bank0
  1168  0061  0093               	movwf	19	;volatile
  1169  0062                     i1l886:	
  1170                           
  1171                           ;TEMP_SLAVE.c: 74:             SSPCONbits.CKP = 1;
  1172  0062  1614               	bsf	20,4	;volatile
  1173                           
  1174                           ;TEMP_SLAVE.c: 75:             _delay((unsigned long)((250)*(8000000/4000000.0)));
  1175  0063  30A6               	movlw	166
  1176  0064  00F0               	movwf	??_isr
  1177  0065                     u18_27:	
  1178  0065  0BF0               	decfsz	??_isr,f
  1179  0066  2865               	goto	u18_27
  1180  0067  0000               	nop
  1181  0068                     i1l89:	
  1182                           ;TEMP_SLAVE.c: 76:             while(SSPSTATbits.BF);
  1183                           
  1184  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1185  0069  1303               	bcf	3,6	;RP1=0, select bank1
  1186  006A  1814               	btfsc	20,0	;volatile
  1187  006B  286D               	goto	u13_21
  1188  006C  286E               	goto	u13_20
  1189  006D                     u13_21:	
  1190  006D  2868               	goto	i1l89
  1191  006E                     u13_20:	
  1192  006E                     i1l87:	
  1193                           
  1194                           ;TEMP_SLAVE.c: 79:         PIR1bits.SSPIF = 0;
  1195  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1196  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0070  118C               	bcf	12,3	;volatile
  1198  0071                     i1l92:	
  1199  0071  0872               	movf	??_isr+2,w
  1200  0072  008A               	movwf	10
  1201  0073  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1202  0074  0083               	movwf	3
  1203  0075  0EFE               	swapf	btemp,f
  1204  0076  0E7E               	swapf	btemp,w
  1205  0077  0009               	retfie
  1206  0078                     __end_of_isr:	
  1207  007E                     btemp	set	126	;btemp
  1208  007E                     wtemp0	set	126
  1209                           
  1210                           	psect	intentry
  1211  0004                     __pintentry:	
  1212                           ;incstack = 0
  1213                           ; Regs used in _isr: [wreg]
  1214                           
  1215  0004                     interrupt_function:	
  1216  007E                     saved_w	set	btemp
  1217  0004  00FE               	movwf	btemp
  1218  0005  0E03               	swapf	3,w
  1219  0006  00F1               	movwf	??_isr+1
  1220  0007  080A               	movf	10,w
  1221  0008  00F2               	movwf	??_isr+2
  1222  0009  120A  118A  2815   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
                               _LOOP
                                _PWM
                                _adc
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _LOOP
     _ANALOGICO
   _PWM
   _adc
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 09 22:46:48 2020

                       _z 0076               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l97 0092                        u10 00DE  
                      u11 00DD                        u20 00C6                        u21 00C5  
      __size_of_ANALOGICO 001A                       l100 00B0                       l103 00C2  
                     l112 010C                       l121 00E4                       l105 00C6  
                     l106 00CA                       l109 010B                       l118 00DA  
                     _ADC 0075                       l176 00FE                       l800 00A4  
                     l810 00AE                       l802 00A8                       l820 00BF  
                     l812 00AF                       l804 00A9                       l822 00C1  
                     l814 00B1                       l830 0109                       l806 00AC  
                     l840 00F6                       l816 00B5                       l832 010A  
                     l824 00FF                       l808 00AD                       l842 00F7  
                     l834 00E6                       l770 00D4                       l818 00BE  
                     l826 0105                       l844 00F8                       l836 00F4  
                     l772 00D8                       l828 0106                       l780 0095  
                     l846 00FB                       l838 00F5                       l774 00D9  
                     l790 009D                       l782 0099                       l776 00DE  
                     l768 00CB                       l848 010C                       l792 009F  
                     l784 009A                       l794 00A0                       l786 009B  
                     l796 00A2                       l788 009C                       l798 00A3  
                     l888 0078                       _GIE 005F                       _PR2 0092  
                     u167 00CF              __CFG_CPD$OFF 0000                       _PWM 00B1  
                     _adc 00FF                       _isr 0015              __CFG_LVP$OFF 0000  
                    ?_PWM 0070                      ?_adc 0070                      ?_isr 0070  
                    _PEIE 005E                      i1l83 004D                      i1l84 003D  
                    i1l92 0071                      i1l87 006E                      i1l89 0068  
                    _LOOP 010C                      u5_20 001B                      u5_21 001A  
                    u6_20 0020                      u6_21 001F                      u7_20 0024  
                    u7_21 0023                      u8_20 0031                      u8_21 0030  
                    u9_20 0035                      u9_21 0034              __CFG_WRT$OFF 0000  
                    _main 0078                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_PWM 0073                     ??_adc 0073  
                   ??_isr 0070                     ?_LOOP 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l860 0024  
                   i1l870 0031                     i1l862 0028                     i1l854 0015  
                   i1l880 0051                     i1l872 0035                     i1l864 0029  
                   i1l856 001B                     i1l882 0055                     i1l874 003B  
                   i1l866 002A                     i1l858 0020                     i1l884 005B  
                   i1l876 003C                     i1l868 002B                     i1l886 0062  
                   i1l878 0043                     u10_20 0043                     u10_21 0042  
                   u11_20 0051                     u11_21 0050                     u12_20 0055  
                   u12_21 0054                     u13_20 006E                     u13_21 006D  
                   u17_27 0049                     u18_27 0065                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
                   _setup 0095            __CFG_BOREN$OFF 0000                     pclath 000A  
       __end_of_ANALOGICO 00E5                     status 0003                     wtemp0 007E  
            __end_of_LOOP 0113            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0095                    ??_LOOP 0075                    ??_main 0075  
                  _ADRESH 001E                    _CCPR1L 0015                    ?_setup 0070  
                  _ANSELH 0189                    _TMR2IF 0061                    _SSPADD 0093  
                  _TRISC2 043A                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPBUF 0013                    _SSPCON 0014            __CFG_PWRTE$OFF 0000  
                  saved_w 007E   __end_of__initialization 0011            __pcstackCOMMON 0070  
 __size_of_I2C_Slave_Init 001A             __end_of_setup 00B1                   ??_setup 0073  
   I2C_Slave_Init@address 0073                __pmaintext 0078                __pintentry 0004  
                 _CCP1CON 0017                   _SSPCON2 0091                   _SSPSTAT 0094  
               _ANALOGICO 00CB                   __ptext1 0095                   __ptext2 00FF  
                 __ptext3 00B1                   __ptext4 010C                   __ptext5 00CB  
                 __ptext6 00E5                   __ptext7 0015              __size_of_PWM 001A  
            __size_of_adc 000D                 _T2CONbits 0012              __size_of_isr 0063  
    end_of_initialization 0011                ?_ANALOGICO 0070            _I2C_Slave_Init 00E5  
               _TRISCbits 0087    __end_of_I2C_Slave_Init 00FF       start_initialization 000F  
             __end_of_PWM 00CB               __end_of_adc 010C               __end_of_isr 0078  
__CFG_FOSC$INTRC_NOCLKOUT 0000               ??_ANALOGICO 0073           ?_I2C_Slave_Init 0070  
             __pbssCOMMON 0075                 ___latbits 0002            __size_of_setup 001C  
       interrupt_function 0004                  _PIR1bits 000C                _ADCON0bits 001F  
              _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000             __size_of_LOOP 0007  
        ??_I2C_Slave_Init 0073             __size_of_main 001D                  intlevel1 0000  
              _OSCCONbits 008F               _SSPCON2bits 0091                _SSPCONbits 0014  
