

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 27 11:57:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0014                     _SSPCON	set	20
   284  001E                     _ADRESH	set	30
   285  001F                     _ADCON0bits	set	31
   286  0005                     _PORTA	set	5
   287  0009                     _PORTE	set	9
   288  0007                     _PORTC	set	7
   289  0006                     _PORTB	set	6
   290  0008                     _PORTD	set	8
   291  0013                     _SSPBUF	set	19
   292  0014                     _SSPCONbits	set	20
   293  000C                     _PIR1bits	set	12
   294  0063                     _SSPIF	set	99
   295  005E                     _PEIE	set	94
   296  005F                     _GIE	set	95
   297  0091                     _SSPCON2bits	set	145
   298  0087                     _TRISCbits	set	135
   299  0094                     _SSPSTAT	set	148
   300  0093                     _SSPADD	set	147
   301  0091                     _SSPCON2	set	145
   302  009F                     _ADCON1bits	set	159
   303  0089                     _TRISE	set	137
   304  0088                     _TRISD	set	136
   305  0087                     _TRISC	set	135
   306  0086                     _TRISB	set	134
   307  0085                     _TRISA	set	133
   308  008F                     _OSCCONbits	set	143
   309  0094                     _SSPSTATbits	set	148
   310  0463                     _SSPIE	set	1123
   311  043C                     _TRISC4	set	1084
   312  043B                     _TRISC3	set	1083
   313  04A0                     _BF	set	1184
   314  0189                     _ANSELH	set	393
   315  0188                     _ANSEL	set	392
   316                           
   317                           ; #config settings
   318  0000                     
   319                           	psect	cinit
   320  000F                     start_initialization:	
   321  000F                     __initialization:	
   322                           
   323                           ; Clear objects allocated to COMMON
   324  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   325  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   326  0011                     end_of_initialization:	
   327                           ;End of C runtime variable initialization code
   328                           
   329  0011                     __end_of__initialization:	
   330  0011  0183               	clrf	3
   331  0012  120A  118A  2878   	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  0075                     __pbssCOMMON:	
   335  0075                     _ADC:	
   336  0075                     	ds	1
   337  0076                     _z:	
   338  0076                     	ds	1
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:	
   342  0070                     ?_I2C_Slave_Init:	
   343  0070                     ?_LOOP:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_ANALOGICO:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_isr:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_isr:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360  0070                     	ds	3
   361  0073                     ??_I2C_Slave_Init:	
   362  0073                     ??_ANALOGICO:	
   363                           ; 1 bytes @ 0x3
   364                           
   365  0073                     I2C_Slave_Init@address:	
   366                           ; 1 bytes @ 0x3
   367                           
   368                           
   369                           ; 1 bytes @ 0x3
   370  0073                     	ds	2
   371  0075                     ??_LOOP:	
   372  0075                     ??_main:	
   373                           ; 1 bytes @ 0x5
   374                           
   375                           
   376                           	psect	maintext
   377  0078                     __pmaintext:	
   378                           ; 1 bytes @ 0x5
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 79 in file "TEMP_SLAVE.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : B00/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called:    3
   404 ;; This function calls:
   405 ;;		_I2C_Slave_Init
   406 ;;		_LOOP
   407 ;; This function is called by:
   408 ;;		Startup code after reset
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           
   413                           ;psect for function _main
   414  0078                     _main:	
   415  0078                     l802:	
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   418                           
   419                           
   420                           ;TEMP_SLAVE.c: 80:     OSCCONbits.IRCF = 0b111;
   421  0078  3070               	movlw	112
   422  0079  1683               	bsf	3,5	;RP0=1, select bank1
   423  007A  1303               	bcf	3,6	;RP1=0, select bank1
   424  007B  048F               	iorwf	15,f	;volatile
   425  007C                     l804:	
   426                           
   427                           ;TEMP_SLAVE.c: 81:     OSCCONbits.OSTS= 0;
   428  007C  118F               	bcf	15,3	;volatile
   429  007D                     l806:	
   430                           
   431                           ;TEMP_SLAVE.c: 82:     OSCCONbits.HTS = 0;
   432  007D  110F               	bcf	15,2	;volatile
   433  007E                     l808:	
   434                           
   435                           ;TEMP_SLAVE.c: 83:     OSCCONbits.LTS = 0;
   436  007E  108F               	bcf	15,1	;volatile
   437  007F                     l810:	
   438                           
   439                           ;TEMP_SLAVE.c: 84:     OSCCONbits.SCS = 1;
   440  007F  140F               	bsf	15,0	;volatile
   441  0080                     l812:	
   442                           
   443                           ;TEMP_SLAVE.c: 86:     TRISA = 0b00000001;
   444  0080  3001               	movlw	1
   445  0081  0085               	movwf	5	;volatile
   446  0082                     l814:	
   447                           
   448                           ;TEMP_SLAVE.c: 87:     TRISB = 0;
   449  0082  0186               	clrf	6	;volatile
   450  0083                     l816:	
   451                           
   452                           ;TEMP_SLAVE.c: 88:     TRISC = 0b00011000;
   453  0083  3018               	movlw	24
   454  0084  0087               	movwf	7	;volatile
   455  0085                     l818:	
   456                           
   457                           ;TEMP_SLAVE.c: 89:     TRISD = 0;
   458  0085  0188               	clrf	8	;volatile
   459  0086                     l820:	
   460                           
   461                           ;TEMP_SLAVE.c: 90:     TRISE = 0;
   462  0086  0189               	clrf	9	;volatile
   463  0087                     l822:	
   464                           
   465                           ;TEMP_SLAVE.c: 91:     ANSEL = 0b00000001;
   466  0087  3001               	movlw	1
   467  0088  1683               	bsf	3,5	;RP0=1, select bank3
   468  0089  1703               	bsf	3,6	;RP1=1, select bank3
   469  008A  0088               	movwf	8	;volatile
   470  008B                     l824:	
   471                           
   472                           ;TEMP_SLAVE.c: 92:     ANSELH = 0;
   473  008B  0189               	clrf	9	;volatile
   474  008C                     l826:	
   475                           
   476                           ;TEMP_SLAVE.c: 93:     PORTB = 0;
   477  008C  1283               	bcf	3,5	;RP0=0, select bank0
   478  008D  1303               	bcf	3,6	;RP1=0, select bank0
   479  008E  0186               	clrf	6	;volatile
   480  008F                     l828:	
   481                           
   482                           ;TEMP_SLAVE.c: 94:     PORTC = 0;
   483  008F  0187               	clrf	7	;volatile
   484  0090                     l830:	
   485                           
   486                           ;TEMP_SLAVE.c: 95:     PORTD = 0;
   487  0090  0188               	clrf	8	;volatile
   488  0091                     l832:	
   489                           
   490                           ;TEMP_SLAVE.c: 96:     PORTE = 0;
   491  0091  0189               	clrf	9	;volatile
   492  0092                     l834:	
   493                           
   494                           ;TEMP_SLAVE.c: 97:     PORTA = 0;
   495  0092  0185               	clrf	5	;volatile
   496  0093                     l836:	
   497                           
   498                           ;TEMP_SLAVE.c: 100:     ADCON0bits.ADCS = 01;
   499  0093  081F               	movf	31,w	;volatile
   500  0094  393F               	andlw	-193
   501  0095  3840               	iorlw	64
   502  0096  009F               	movwf	31	;volatile
   503  0097                     l838:	
   504                           
   505                           ;TEMP_SLAVE.c: 101:     ADCON0bits.ADON = 1;
   506  0097  141F               	bsf	31,0	;volatile
   507  0098                     l840:	
   508                           
   509                           ;TEMP_SLAVE.c: 102:     ADCON1bits.ADFM = 0;
   510  0098  1683               	bsf	3,5	;RP0=1, select bank1
   511  0099  1303               	bcf	3,6	;RP1=0, select bank1
   512  009A  139F               	bcf	31,7	;volatile
   513  009B                     l842:	
   514                           
   515                           ;TEMP_SLAVE.c: 103:     ADCON1bits.VCFG0 = 0;
   516  009B  121F               	bcf	31,4	;volatile
   517  009C                     l844:	
   518                           
   519                           ;TEMP_SLAVE.c: 104:     ADCON1bits.VCFG1 = 0;
   520  009C  129F               	bcf	31,5	;volatile
   521  009D                     l846:	
   522                           
   523                           ;TEMP_SLAVE.c: 105:     I2C_Slave_Init(0x30);
   524  009D  3030               	movlw	48
   525  009E  120A  118A  20C5  120A  118A  	fcall	_I2C_Slave_Init
   526  00A3                     l848:	
   527                           
   528                           ;TEMP_SLAVE.c: 107:       LOOP();
   529  00A3  120A  118A  20DF  120A  118A  	fcall	_LOOP
   530  00A8                     l77:	
   531  00A8  120A  118A  280C   	ljmp	start
   532  00AB                     __end_of_main:	
   533                           
   534                           	psect	text1
   535  00DF                     __ptext1:	
   536 ;; *************** function _LOOP *****************
   537 ;; Defined at:
   538 ;;		line 111 in file "TEMP_SLAVE.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0, pclath, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used:    1
   558 ;; Hardware stack levels required when called:    2
   559 ;; This function calls:
   560 ;;		_ANALOGICO
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           
   567                           ;psect for function _LOOP
   568  00DF                     _LOOP:	
   569  00DF                     l80:	
   570                           ;incstack = 0
   571                           ; Regs used in _LOOP: [wreg+status,2+status,0+pclath+cstack]
   572                           ;TEMP_SLAVE.c: 112:     while(1){
   573                           
   574  00DF                     l762:	
   575                           
   576                           ;TEMP_SLAVE.c: 113:         ANALOGICO();
   577  00DF  120A  118A  20AB  120A  118A  	fcall	_ANALOGICO
   578  00E4  28DF               	goto	l80
   579  00E5  0008               	return
   580  00E6                     __end_of_LOOP:	
   581                           
   582                           	psect	text2
   583  00AB                     __ptext2:	
   584 ;; *************** function _ANALOGICO *****************
   585 ;; Defined at:
   586 ;;		line 118 in file "TEMP_SLAVE.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, status,2, status,0
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       0       0       0       0
   602 ;;      Temps:          2       0       0       0       0
   603 ;;      Totals:         2       0       0       0       0
   604 ;;Total ram usage:        2 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    1
   607 ;; This function calls:
   608 ;;		Nothing
   609 ;; This function is called by:
   610 ;;		_LOOP
   611 ;; This function uses a non-reentrant model
   612 ;;
   613                           
   614                           
   615                           ;psect for function _ANALOGICO
   616  00AB                     _ANALOGICO:	
   617  00AB                     l736:	
   618                           ;incstack = 0
   619                           ; Regs used in _ANALOGICO: [wreg+status,2+status,0]
   620                           
   621                           
   622                           ;TEMP_SLAVE.c: 119:     _delay((unsigned long)((1)*(8000000/4000.0)));
   623  00AB  3003               	movlw	3
   624  00AC  00F4               	movwf	??_ANALOGICO+1
   625  00AD  3097               	movlw	151
   626  00AE  00F3               	movwf	??_ANALOGICO
   627  00AF                     u157:	
   628  00AF  0BF3               	decfsz	??_ANALOGICO,f
   629  00B0  28AF               	goto	u157
   630  00B1  0BF4               	decfsz	??_ANALOGICO+1,f
   631  00B2  28AF               	goto	u157
   632  00B3  28B4               	nop2
   633  00B4                     l738:	
   634                           
   635                           ;TEMP_SLAVE.c: 120:         ADCON0bits.CHS = 0000;
   636  00B4  30C3               	movlw	-61
   637  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   638  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   639  00B7  059F               	andwf	31,f	;volatile
   640  00B8                     l740:	
   641                           
   642                           ;TEMP_SLAVE.c: 121:         ADCON0bits.ADON = 1;
   643  00B8  141F               	bsf	31,0	;volatile
   644  00B9                     l742:	
   645                           
   646                           ;TEMP_SLAVE.c: 122:         ADCON0bits.GO = 1;
   647  00B9  149F               	bsf	31,1	;volatile
   648  00BA                     l86:	
   649                           ;TEMP_SLAVE.c: 123:         while(ADCON0bits.GO);
   650                           
   651  00BA  189F               	btfsc	31,1	;volatile
   652  00BB  28BD               	goto	u11
   653  00BC  28BE               	goto	u10
   654  00BD                     u11:	
   655  00BD  28BA               	goto	l86
   656  00BE                     u10:	
   657  00BE                     l744:	
   658                           
   659                           ;TEMP_SLAVE.c: 124:        ADC = ADRESH;
   660  00BE  081E               	movf	30,w	;volatile
   661  00BF  00F3               	movwf	??_ANALOGICO
   662  00C0  0873               	movf	??_ANALOGICO,w
   663  00C1  00F5               	movwf	_ADC
   664                           
   665                           ;TEMP_SLAVE.c: 125:        PORTB = ADC;
   666  00C2  0875               	movf	_ADC,w
   667  00C3  0086               	movwf	6	;volatile
   668  00C4                     l89:	
   669  00C4  0008               	return
   670  00C5                     __end_of_ANALOGICO:	
   671                           
   672                           	psect	text3
   673  00C5                     __ptext3:	
   674 ;; *************** function _I2C_Slave_Init *****************
   675 ;; Defined at:
   676 ;;		line 85 in file "TEMP_SENSE.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  address         1    wreg     unsigned char 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  address         1    3[COMMON] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   690 ;;      Params:         0       0       0       0       0
   691 ;;      Locals:         1       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0
   693 ;;      Totals:         1       0       0       0       0
   694 ;;Total ram usage:        1 bytes
   695 ;; Hardware stack levels used:    1
   696 ;; Hardware stack levels required when called:    1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_main
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           
   705                           ;psect for function _I2C_Slave_Init
   706  00C5                     _I2C_Slave_Init:	
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _I2C_Slave_Init: [wreg]
   710                           ;I2C_Slave_Init@address stored from wreg
   711  00C5  00F3               	movwf	I2C_Slave_Init@address
   712  00C6                     l748:	
   713                           
   714                           ;TEMP_SENSE.c: 86:     SSPADD = address;
   715  00C6  0873               	movf	I2C_Slave_Init@address,w
   716  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   717  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   718  00C9  0093               	movwf	19	;volatile
   719                           
   720                           ;TEMP_SENSE.c: 87:     SSPCON = 0x36;
   721  00CA  3036               	movlw	54
   722  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   723  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   724  00CD  0094               	movwf	20	;volatile
   725                           
   726                           ;TEMP_SENSE.c: 88:     SSPSTAT = 0x80;
   727  00CE  3080               	movlw	128
   728  00CF  1683               	bsf	3,5	;RP0=1, select bank1
   729  00D0  1303               	bcf	3,6	;RP1=0, select bank1
   730  00D1  0094               	movwf	20	;volatile
   731                           
   732                           ;TEMP_SENSE.c: 89:     SSPCON2 = 0x01;
   733  00D2  3001               	movlw	1
   734  00D3  0091               	movwf	17	;volatile
   735  00D4                     l750:	
   736                           
   737                           ;TEMP_SENSE.c: 90:     TRISC3 = 1;
   738  00D4  1587               	bsf	7,3	;volatile
   739  00D5                     l752:	
   740                           
   741                           ;TEMP_SENSE.c: 91:     TRISC4 = 1;
   742  00D5  1607               	bsf	7,4	;volatile
   743  00D6                     l754:	
   744                           
   745                           ;TEMP_SENSE.c: 92:     GIE = 1;
   746  00D6  178B               	bsf	11,7	;volatile
   747  00D7                     l756:	
   748                           
   749                           ;TEMP_SENSE.c: 93:     PEIE = 1;
   750  00D7  170B               	bsf	11,6	;volatile
   751  00D8                     l758:	
   752                           
   753                           ;TEMP_SENSE.c: 94:     SSPIF = 0;
   754  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   755  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   756  00DA  118C               	bcf	12,3	;volatile
   757  00DB                     l760:	
   758                           
   759                           ;TEMP_SENSE.c: 95:     SSPIE = 1;
   760  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   761  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   762  00DD  158C               	bsf	12,3	;volatile
   763  00DE                     l144:	
   764  00DE  0008               	return
   765  00DF                     __end_of_I2C_Slave_Init:	
   766                           
   767                           	psect	text4
   768  0015                     __ptext4:	
   769 ;; *************** function _isr *****************
   770 ;; Defined at:
   771 ;;		line 44 in file "TEMP_SLAVE.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   785 ;;      Params:         0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0
   787 ;;      Temps:          3       0       0       0       0
   788 ;;      Totals:         3       0       0       0       0
   789 ;;Total ram usage:        3 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; This function calls:
   792 ;;		Nothing
   793 ;; This function is called by:
   794 ;;		Interrupt level 1
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _isr
   800  0015                     _isr:	
   801  0015                     i1l768:	
   802                           
   803                           ;TEMP_SLAVE.c: 45:    if(PIR1bits.SSPIF == 1){
   804  0015  1283               	bcf	3,5	;RP0=0, select bank0
   805  0016  1303               	bcf	3,6	;RP1=0, select bank0
   806  0017  1D8C               	btfss	12,3	;volatile
   807  0018  281A               	goto	u4_21
   808  0019  281B               	goto	u4_20
   809  001A                     u4_21:	
   810  001A  2871               	goto	i1l72
   811  001B                     u4_20:	
   812  001B                     i1l770:	
   813                           
   814                           ;TEMP_SLAVE.c: 47:         SSPCONbits.CKP = 0;
   815  001B  1214               	bcf	20,4	;volatile
   816                           
   817                           ;TEMP_SLAVE.c: 49:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   818  001C  1B14               	btfsc	20,6	;volatile
   819  001D  281F               	goto	u5_21
   820  001E  2820               	goto	u5_20
   821  001F                     u5_21:	
   822  001F  2824               	goto	i1l774
   823  0020                     u5_20:	
   824  0020                     i1l772:	
   825  0020  1F94               	btfss	20,7	;volatile
   826  0021  2823               	goto	u6_21
   827  0022  2824               	goto	u6_20
   828  0023                     u6_21:	
   829  0023  282B               	goto	i1l782
   830  0024                     u6_20:	
   831  0024                     i1l774:	
   832                           
   833                           ;TEMP_SLAVE.c: 50:             z = SSPBUF;
   834  0024  0813               	movf	19,w	;volatile
   835  0025  00F0               	movwf	??_isr
   836  0026  0870               	movf	??_isr,w
   837  0027  00F6               	movwf	_z
   838  0028                     i1l776:	
   839                           
   840                           ;TEMP_SLAVE.c: 51:             SSPCONbits.SSPOV = 0;
   841  0028  1314               	bcf	20,6	;volatile
   842  0029                     i1l778:	
   843                           
   844                           ;TEMP_SLAVE.c: 52:             SSPCONbits.WCOL = 0;
   845  0029  1394               	bcf	20,7	;volatile
   846  002A                     i1l780:	
   847                           
   848                           ;TEMP_SLAVE.c: 53:             SSPCONbits.CKP = 1;
   849  002A  1614               	bsf	20,4	;volatile
   850  002B                     i1l782:	
   851                           
   852                           ;TEMP_SLAVE.c: 56:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   853  002B  1683               	bsf	3,5	;RP0=1, select bank1
   854  002C  1303               	bcf	3,6	;RP1=0, select bank1
   855  002D  1A94               	btfsc	20,5	;volatile
   856  002E  2830               	goto	u7_21
   857  002F  2831               	goto	u7_20
   858  0030                     u7_21:	
   859  0030  284D               	goto	i1l63
   860  0031                     u7_20:	
   861  0031                     i1l784:	
   862  0031  1914               	btfsc	20,2	;volatile
   863  0032  2834               	goto	u8_21
   864  0033  2835               	goto	u8_20
   865  0034                     u8_21:	
   866  0034  284D               	goto	i1l63
   867  0035                     u8_20:	
   868  0035                     i1l786:	
   869                           
   870                           ;TEMP_SLAVE.c: 58:             z = SSPBUF;
   871  0035  1283               	bcf	3,5	;RP0=0, select bank0
   872  0036  1303               	bcf	3,6	;RP1=0, select bank0
   873  0037  0813               	movf	19,w	;volatile
   874  0038  00F0               	movwf	??_isr
   875  0039  0870               	movf	??_isr,w
   876  003A  00F6               	movwf	_z
   877  003B                     i1l788:	
   878                           
   879                           ;TEMP_SLAVE.c: 60:             PIR1bits.SSPIF = 0;
   880  003B  118C               	bcf	12,3	;volatile
   881  003C                     i1l790:	
   882                           
   883                           ;TEMP_SLAVE.c: 61:             SSPCONbits.CKP = 1;
   884  003C  1614               	bsf	20,4	;volatile
   885  003D                     i1l64:	
   886                           ;TEMP_SLAVE.c: 62:             while(!SSPSTATbits.BF);
   887                           
   888  003D  1683               	bsf	3,5	;RP0=1, select bank1
   889  003E  1303               	bcf	3,6	;RP1=0, select bank1
   890  003F  1C14               	btfss	20,0	;volatile
   891  0040  2842               	goto	u9_21
   892  0041  2843               	goto	u9_20
   893  0042                     u9_21:	
   894  0042  283D               	goto	i1l64
   895  0043                     u9_20:	
   896  0043                     i1l792:	
   897                           
   898                           ;TEMP_SLAVE.c: 63:             PORTD = SSPBUF;
   899  0043  1283               	bcf	3,5	;RP0=0, select bank0
   900  0044  1303               	bcf	3,6	;RP1=0, select bank0
   901  0045  0813               	movf	19,w	;volatile
   902  0046  0088               	movwf	8	;volatile
   903                           
   904                           ;TEMP_SLAVE.c: 64:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   905  0047  30A6               	movlw	166
   906  0048  00F0               	movwf	??_isr
   907  0049                     u16_27:	
   908  0049  0BF0               	decfsz	??_isr,f
   909  004A  2849               	goto	u16_27
   910  004B  0000               	nop
   911                           
   912                           ;TEMP_SLAVE.c: 66:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
   913  004C  286E               	goto	i1l67
   914  004D                     i1l63:	
   915  004D  1A94               	btfsc	20,5	;volatile
   916  004E  2850               	goto	u10_21
   917  004F  2851               	goto	u10_20
   918  0050                     u10_21:	
   919  0050  286E               	goto	i1l67
   920  0051                     u10_20:	
   921  0051                     i1l794:	
   922  0051  1D14               	btfss	20,2	;volatile
   923  0052  2854               	goto	u11_21
   924  0053  2855               	goto	u11_20
   925  0054                     u11_21:	
   926  0054  286E               	goto	i1l67
   927  0055                     u11_20:	
   928  0055                     i1l796:	
   929                           
   930                           ;TEMP_SLAVE.c: 67:             z = SSPBUF;
   931  0055  1283               	bcf	3,5	;RP0=0, select bank0
   932  0056  1303               	bcf	3,6	;RP1=0, select bank0
   933  0057  0813               	movf	19,w	;volatile
   934  0058  00F0               	movwf	??_isr
   935  0059  0870               	movf	??_isr,w
   936  005A  00F6               	movwf	_z
   937  005B                     i1l798:	
   938                           
   939                           ;TEMP_SLAVE.c: 68:             BF = 0;
   940  005B  1683               	bsf	3,5	;RP0=1, select bank1
   941  005C  1303               	bcf	3,6	;RP1=0, select bank1
   942  005D  1014               	bcf	20,0	;volatile
   943                           
   944                           ;TEMP_SLAVE.c: 69:             SSPBUF = ADC;
   945  005E  0875               	movf	_ADC,w
   946  005F  1283               	bcf	3,5	;RP0=0, select bank0
   947  0060  1303               	bcf	3,6	;RP1=0, select bank0
   948  0061  0093               	movwf	19	;volatile
   949  0062                     i1l800:	
   950                           
   951                           ;TEMP_SLAVE.c: 70:             SSPCONbits.CKP = 1;
   952  0062  1614               	bsf	20,4	;volatile
   953                           
   954                           ;TEMP_SLAVE.c: 71:             _delay((unsigned long)((250)*(8000000/4000000.0)));
   955  0063  30A6               	movlw	166
   956  0064  00F0               	movwf	??_isr
   957  0065                     u17_27:	
   958  0065  0BF0               	decfsz	??_isr,f
   959  0066  2865               	goto	u17_27
   960  0067  0000               	nop
   961  0068                     i1l69:	
   962                           ;TEMP_SLAVE.c: 72:             while(SSPSTATbits.BF);
   963                           
   964  0068  1683               	bsf	3,5	;RP0=1, select bank1
   965  0069  1303               	bcf	3,6	;RP1=0, select bank1
   966  006A  1814               	btfsc	20,0	;volatile
   967  006B  286D               	goto	u12_21
   968  006C  286E               	goto	u12_20
   969  006D                     u12_21:	
   970  006D  2868               	goto	i1l69
   971  006E                     u12_20:	
   972  006E                     i1l67:	
   973                           
   974                           ;TEMP_SLAVE.c: 75:         PIR1bits.SSPIF = 0;
   975  006E  1283               	bcf	3,5	;RP0=0, select bank0
   976  006F  1303               	bcf	3,6	;RP1=0, select bank0
   977  0070  118C               	bcf	12,3	;volatile
   978  0071                     i1l72:	
   979  0071  0872               	movf	??_isr+2,w
   980  0072  008A               	movwf	10
   981  0073  0E71               	swapf	(??_isr+1)^(0+4294967168),w
   982  0074  0083               	movwf	3
   983  0075  0EFE               	swapf	btemp,f
   984  0076  0E7E               	swapf	btemp,w
   985  0077  0009               	retfie
   986  0078                     __end_of_isr:	
   987  007E                     btemp	set	126	;btemp
   988  007E                     wtemp0	set	126
   989                           
   990                           	psect	intentry
   991  0004                     __pintentry:	
   992                           ;incstack = 0
   993                           ; Regs used in _isr: [wreg]
   994                           
   995  0004                     interrupt_function:	
   996  007E                     saved_w	set	btemp
   997  0004  00FE               	movwf	btemp
   998  0005  0E03               	swapf	3,w
   999  0006  00F1               	movwf	??_isr+1
  1000  0007  080A               	movf	10,w
  1001  0008  00F2               	movwf	??_isr+2
  1002  0009  120A  118A  2815   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _LOOP->_ANALOGICO

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      15
                     _I2C_Slave_Init
                               _LOOP
 ---------------------------------------------------------------------------------
 (1) _LOOP                                                 0     0      0       0
                          _ANALOGICO
 ---------------------------------------------------------------------------------
 (2) _ANALOGICO                                            2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _LOOP
     _ANALOGICO

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 27 11:57:02 2020

                       _z 0076               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l80 00DF                        l77 00A8  
                      l86 00BA                        l89 00C4                        u10 00BE  
                      u11 00BD        __size_of_ANALOGICO 001A                       l144 00DE  
                     _ADC 0075                       l810 007F                       l802 0078  
                     l740 00B8                       l820 0086                       l812 0080  
                     l804 007C                       l750 00D4                       l742 00B9  
                     l830 0090                       l822 0087                       l814 0082  
                     l806 007D                       l760 00DB                       l752 00D5  
                     l744 00BE                       l736 00AB                       l840 0098  
                     l832 0091                       l824 008B                       l816 0083  
                     l808 007E                       l754 00D6                       l738 00B4  
                     l762 00DF                       l842 009B                       l834 0092  
                     l826 008C                       l818 0085                       l756 00D7  
                     l748 00C6                       l844 009C                       l836 0093  
                     l828 008F                       l758 00D8                       l846 009D  
                     l838 0097                       l848 00A3                       _GIE 005F  
                     u157 00AF              __CFG_CPD$OFF 0000                       _isr 0015  
            __CFG_LVP$OFF 0000                      ?_isr 0070                      _PEIE 005E  
                    i1l63 004D                      i1l64 003D                      i1l72 0071  
                    i1l67 006E                      i1l69 0068                      _LOOP 00DF  
                    u4_20 001B                      u4_21 001A                      u5_20 0020  
                    u5_21 001F                      u6_20 0024                      u6_21 0023  
                    u7_20 0031                      u7_21 0030                      u8_20 0035  
                    u8_21 0034                      u9_20 0043                      u9_21 0042  
            __CFG_WRT$OFF 0000                      _main 0078                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0070  
                   ?_LOOP 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l800 0062                     i1l770 001B  
                   i1l780 002A                     i1l772 0020                     i1l790 003C  
                   i1l782 002B                     i1l774 0024                     i1l792 0043  
                   i1l784 0031                     i1l776 0028                     i1l768 0015  
                   i1l794 0051                     i1l786 0035                     i1l778 0029  
                   i1l796 0055                     i1l788 003B                     i1l798 005B  
                   u10_20 0051                     u10_21 0050                     u11_20 0055  
                   u11_21 0054                     u12_20 006E                     u12_21 006D  
                   u16_27 0049                     u17_27 0065                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _PORTE 0009                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _SSPIE 0463  
                   _TRISE 0089                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A         __end_of_ANALOGICO 00C5  
                   status 0003                     wtemp0 007E              __end_of_LOOP 00E6  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 00AB  
                  ??_LOOP 0075                    ??_main 0075                    _ADRESH 001E  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0011  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A     I2C_Slave_Init@address 0073  
              __pmaintext 0078                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094                 _ANALOGICO 00AB                   __ptext1 00DF  
                 __ptext2 00AB                   __ptext3 00C5                   __ptext4 0015  
            __size_of_isr 0063      end_of_initialization 0011                ?_ANALOGICO 0070  
          _I2C_Slave_Init 00C5                 _TRISCbits 0087    __end_of_I2C_Slave_Init 00DF  
     start_initialization 000F               __end_of_isr 0078  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             ??_ANALOGICO 0073           ?_I2C_Slave_Init 0070               __pbssCOMMON 0075  
               ___latbits 0002         interrupt_function 0004                  _PIR1bits 000C  
              _ADCON0bits 001F                _ADCON1bits 009F         __CFG_BOR4V$BOR40V 0000  
           __size_of_LOOP 0007          ??_I2C_Slave_Init 0073             __size_of_main 0033  
                intlevel1 0000                _OSCCONbits 008F               _SSPCON2bits 0091  
              _SSPCONbits 0014  
