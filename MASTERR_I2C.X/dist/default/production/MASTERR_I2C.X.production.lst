

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 18 23:11:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0019                     _TXREG	set	25
   464  001A                     _RCREG	set	26
   465  000C                     _PIR1bits	set	12
   466  0018                     _RCSTAbits	set	24
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCON	set	20
   469  0009                     _PORTE	set	9
   470  0008                     _PORTD	set	8
   471  0007                     _PORTC	set	7
   472  0006                     _PORTB	set	6
   473  0005                     _PORTA	set	5
   474  0063                     _SSPIF	set	99
   475  005E                     _PEIE	set	94
   476  005F                     _GIE	set	95
   477  0047                     _RD7	set	71
   478  0046                     _RD6	set	70
   479  0045                     _RD5	set	69
   480  0028                     _RA0	set	40
   481  0098                     _TXSTAbits	set	152
   482  0099                     _SPBRG	set	153
   483  0091                     _SSPCON2bits	set	145
   484  0087                     _TRISCbits	set	135
   485  0094                     _SSPSTAT	set	148
   486  0093                     _SSPADD	set	147
   487  0091                     _SSPCON2	set	145
   488  0089                     _TRISE	set	137
   489  0088                     _TRISD	set	136
   490  0087                     _TRISC	set	135
   491  0086                     _TRISB	set	134
   492  0085                     _TRISA	set	133
   493  0463                     _SSPIE	set	1123
   494  043C                     _TRISC4	set	1084
   495  043B                     _TRISC3	set	1083
   496  048B                     _RCEN	set	1163
   497  0189                     _ANSELH	set	393
   498  0188                     _ANSEL	set	392
   499                           
   500                           	psect	strings
   501  0003                     __pstrings:	
   502  0003                     stringtab:	
   503  0003                     __stringtab:	
   504                           
   505                           ;	String table - string pointers are 1 byte each
   506  0003  1BFF               	btfsc	btemp+1,7
   507  0004  280D               	ljmp	stringcode
   508  0005  1383               	bcf	3,7
   509  0006  187F               	btfsc	btemp+1,0
   510  0007  1783               	bsf	3,7
   511  0008  0800               	movf	0,w
   512  0009  0A84               	incf	4,f
   513  000A  1903               	skipnz
   514  000B  0AFF               	incf	btemp+1,f
   515  000C  0008               	return
   516  000D                     stringcode:	
   517  000D                     stringdir:	
   518  000D  3000               	movlw	high stringdir
   519  000E  008A               	movwf	10
   520  000F  0804               	movf	4,w
   521  0010  0A84               	incf	4,f
   522  0011  0782               	addwf	2,f
   523  0012                     __stringbase:	
   524  0012  3400               	retlw	0
   525  0013                     __end_of__stringtab:	
   526  0013                     STR_6:	
   527  0013  3420               	retlw	32	;' '
   528  0014  3446               	retlw	70	;'F'
   529  0015  3455               	retlw	85	;'U'
   530  0016  3445               	retlw	69	;'E'
   531  0017  3452               	retlw	82	;'R'
   532  0018  345A               	retlw	90	;'Z'
   533  0019  3441               	retlw	65	;'A'
   534  001A  3420               	retlw	32	;' '
   535  001B  3455               	retlw	85	;'U'
   536  001C  344C               	retlw	76	;'L'
   537  001D  3454               	retlw	84	;'T'
   538  001E  3452               	retlw	82	;'R'
   539  001F  3441               	retlw	65	;'A'
   540  0020  3420               	retlw	32	;' '
   541  0021  3420               	retlw	32	;' '
   542  0022  3420               	retlw	32	;' '
   543  0023  3400               	retlw	0
   544  0024                     STR_1:	
   545  0024  3454               	retlw	84	;'T'
   546  0025  3445               	retlw	69	;'E'
   547  0026  344D               	retlw	77	;'M'
   548  0027  3450               	retlw	80	;'P'
   549  0028  3420               	retlw	32	;' '
   550  0029  3443               	retlw	67	;'C'
   551  002A  3441               	retlw	65	;'A'
   552  002B  3452               	retlw	82	;'R'
   553  002C  3452               	retlw	82	;'R'
   554  002D  344F               	retlw	79	;'O'
   555  002E  3453               	retlw	83	;'S'
   556  002F  3420               	retlw	32	;' '
   557  0030  344C               	retlw	76	;'L'
   558  0031  3455               	retlw	85	;'U'
   559  0032  345A               	retlw	90	;'Z'
   560  0033  3420               	retlw	32	;' '
   561  0034  3400               	retlw	0
   562  0035                     STR_9:	
   563  0035  3420               	retlw	32	;' '
   564  0036  3420               	retlw	32	;' '
   565  0037  3420               	retlw	32	;' '
   566  0038  3420               	retlw	32	;' '
   567  0039  3420               	retlw	32	;' '
   568  003A  3420               	retlw	32	;' '
   569  003B  3400               	retlw	0
   570  003A                     
   571                           ; #config settings
   572  0000                     
   573                           	psect	cinit
   574  07E4                     start_initialization:	
   575  07E4                     __initialization:	
   576                           
   577                           ; Clear objects allocated to BANK0
   578  07E4  1383               	bcf	3,7	;select IRP bank0
   579  07E5  3020               	movlw	low __pbssBANK0
   580  07E6  0084               	movwf	4
   581  07E7  3054               	movlw	low (__pbssBANK0+52)
   582  07E8  120A  158A  2722  120A  118A  	fcall	clear_ram0
   583                           
   584                           ; Clear objects allocated to BANK1
   585  07ED  30A0               	movlw	low __pbssBANK1
   586  07EE  0084               	movwf	4
   587  07EF  30EE               	movlw	low (__pbssBANK1+78)
   588  07F0  120A  158A  2722  120A  118A  	fcall	clear_ram0
   589                           
   590                           ; Clear objects allocated to BANK3
   591  07F5  1683               	bsf	3,5	;RP0=1, select bank3
   592  07F6  1703               	bsf	3,6	;RP1=1, select bank3
   593  07F7  0190               	clrf	__pbssBANK3& (0+127)
   594  07F8  0191               	clrf	(__pbssBANK3+1)& (0+127)
   595  07F9  0192               	clrf	(__pbssBANK3+2)& (0+127)
   596  07FA  0193               	clrf	(__pbssBANK3+3)& (0+127)
   597  07FB  0194               	clrf	(__pbssBANK3+4)& (0+127)
   598  07FC                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  07FC                     __end_of__initialization:	
   602  07FC  0183               	clrf	3
   603  07FD  120A  118A  2C1C   	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssBANK0
   606  0020                     __pbssBANK0:	
   607  0020                     _decT_int:	
   608  0020                     	ds	2
   609  0022                     _uniT_int:	
   610  0022                     	ds	2
   611  0024                     _ADC_A:	
   612  0024                     	ds	2
   613  0026                     _ADC_1_B:	
   614  0026                     	ds	2
   615  0028                     _ADC_1_A:	
   616  0028                     	ds	2
   617  002A                     _DC1:	
   618  002A                     	ds	2
   619  002C                     _SONICOU:	
   620  002C                     	ds	2
   621  002E                     _CONTU:	
   622  002E                     	ds	2
   623  0030                     _SONICOD:	
   624  0030                     	ds	2
   625  0032                     _CONTD:	
   626  0032                     	ds	2
   627  0034                     _LUZ_A:	
   628  0034                     	ds	2
   629  0036                     _LUZ_1_B:	
   630  0036                     	ds	2
   631  0038                     _LUZ_1_A:	
   632  0038                     	ds	2
   633  003A                     _DC2:	
   634  003A                     	ds	2
   635  003C                     _decHR:	
   636  003C                     	ds	2
   637  003E                     _uniHR:	
   638  003E                     	ds	2
   639  0040                     _decT:	
   640  0040                     	ds	2
   641  0042                     _uniT:	
   642  0042                     	ds	2
   643  0044                     _CONTLUZB:	
   644  0044                     	ds	2
   645  0046                     _CONTLUZA:	
   646  0046                     	ds	2
   647  0048                     _S1:	
   648  0048                     	ds	1
   649  0049                     _S0:	
   650  0049                     	ds	1
   651  004A                     _T_byte1:	
   652  004A                     	ds	1
   653  004B                     _SONICO:	
   654  004B                     	ds	1
   655  004C                     _analogic_digital_b:	
   656  004C                     	ds	1
   657  004D                     _CONTADOR:	
   658  004D                     	ds	1
   659  004E                     _analogic_digital_a:	
   660  004E                     	ds	1
   661  004F                     _CONTLUZA_CHAR:	
   662  004F                     	ds	5
   663                           
   664                           	psect	bssBANK1
   665  00A0                     __pbssBANK1:	
   666  00A0                     _ADCC_CHARC:	
   667  00A0                     	ds	5
   668  00A5                     _POINTERB:	
   669  00A5                     	ds	5
   670  00AA                     _LUZC_CHARC:	
   671  00AA                     	ds	5
   672  00AF                     _LUZB_CHARB:	
   673  00AF                     	ds	5
   674  00B4                     _LUZA_CHARA:	
   675  00B4                     	ds	5
   676  00B9                     _luz:	
   677  00B9                     	ds	4
   678  00BD                     _voltage:	
   679  00BD                     	ds	4
   680  00C1                     _decT_char:	
   681  00C1                     	ds	5
   682  00C6                     _uniT_char:	
   683  00C6                     	ds	5
   684  00CB                     _ADCB_CHARB:	
   685  00CB                     	ds	5
   686  00D0                     _ADCA_CHARA:	
   687  00D0                     	ds	5
   688  00D5                     _CONTU_CHAR:	
   689  00D5                     	ds	5
   690  00DA                     _CONTD_CHAR:	
   691  00DA                     	ds	5
   692  00DF                     _SONICOU_CHAR:	
   693  00DF                     	ds	5
   694  00E4                     _SONICOD_CHAR:	
   695  00E4                     	ds	5
   696  00E9                     _CONTLUZB_CHAR:	
   697  00E9                     	ds	5
   698                           
   699                           	psect	bssBANK3
   700  0190                     __pbssBANK3:	
   701  0190                     _POINTERA:	
   702  0190                     	ds	5
   703                           
   704                           	psect	clrtext
   705  0F22                     clear_ram0:	
   706                           ;	Called with FSR containing the base address, and
   707                           ;	W with the last address+1
   708                           
   709  0F22  0064               	clrwdt	;clear the watchdog before getting into this loop
   710  0F23                     clrloop0:	
   711  0F23  0180               	clrf	0	;clear RAM location pointed to by FSR
   712  0F24  0A84               	incf	4,f	;increment pointer
   713  0F25  0604               	xorwf	4,w	;XOR with final address
   714  0F26  1903               	btfsc	3,2	;have we reached the end yet?
   715  0F27  3400               	retlw	0	;all done for this memory range, return
   716  0F28  0604               	xorwf	4,w	;XOR again to restore value
   717  0F29  2F23               	goto	clrloop0	;do the next byte
   718                           
   719                           	psect	cstackCOMMON
   720  0070                     __pcstackCOMMON:	
   721  0070                     ?_SETUP:	
   722  0070                     ??_SETUP:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_inicializacion:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_I2C_Master_Start:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ??_I2C_Master_Start:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_I2C_Master_Write:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_I2C_Master_Stop:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_I2C_Master_Stop:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_strcat:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_UART_WRITE:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ??_UART_WRITE:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ?_lcd_cmd:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_lcd_ready:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ??_lcd_ready:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_lcd_lat:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_lcd_lat:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_main:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_lcd_dwr:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_I2C_Master_Wait:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_I2C_Master_Wait:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_I2C_Master_Read:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?___awdiv:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ?___awmod:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     ?___lwdiv:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     ?___lwmod:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ?___lldiv:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0070                     ?___aldiv:	
   798                           ; 4 bytes @ 0x0
   799                           
   800  0070                     UART_WRITE@data:	
   801                           ; 4 bytes @ 0x0
   802                           
   803  0070                     strcat@from:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     I2C_Master_Write@d:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     I2C_Master_Read@a:	
   810                           ; 2 bytes @ 0x0
   811                           
   812  0070                     ___awdiv@divisor:	
   813                           ; 2 bytes @ 0x0
   814                           
   815  0070                     ___awmod@divisor:	
   816                           ; 2 bytes @ 0x0
   817                           
   818  0070                     ___lwdiv@divisor:	
   819                           ; 2 bytes @ 0x0
   820                           
   821  0070                     ___lwmod@divisor:	
   822                           ; 2 bytes @ 0x0
   823                           
   824  0070                     ___lldiv@divisor:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0070                     ___aldiv@divisor:	
   828                           ; 4 bytes @ 0x0
   829                           
   830                           
   831                           ; 4 bytes @ 0x0
   832  0070                     	ds	1
   833  0071                     ??_strcat:	
   834                           
   835                           ; 1 bytes @ 0x1
   836  0071                     	ds	1
   837  0072                     ??_I2C_Master_Write:	
   838  0072                     ??_I2C_Master_Read:	
   839                           ; 1 bytes @ 0x2
   840                           
   841  0072                     ??_lcd_cmd:	
   842                           ; 1 bytes @ 0x2
   843                           
   844  0072                     ??_lcd_dwr:	
   845                           ; 1 bytes @ 0x2
   846                           
   847  0072                     lcd_cmd@x:	
   848                           ; 1 bytes @ 0x2
   849                           
   850  0072                     lcd_dwr@x:	
   851                           ; 1 bytes @ 0x2
   852                           
   853  0072                     strcat@to:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0072                     ___awdiv@dividend:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0072                     ___awmod@dividend:	
   860                           ; 2 bytes @ 0x2
   861                           
   862  0072                     ___lwdiv@dividend:	
   863                           ; 2 bytes @ 0x2
   864                           
   865  0072                     ___lwmod@dividend:	
   866                           ; 2 bytes @ 0x2
   867                           
   868                           
   869                           ; 2 bytes @ 0x2
   870  0072                     	ds	1
   871  0073                     ??_inicializacion:	
   872  0073                     ?_lcd_msg:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0073                     strcat@cp:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0073                     lcd_msg@c:	
   879                           ; 1 bytes @ 0x3
   880                           
   881                           
   882                           ; 2 bytes @ 0x3
   883  0073                     	ds	1
   884  0074                     ??___awdiv:	
   885  0074                     ??___awmod:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     ??___lwdiv:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     ??___lwmod:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     I2C_Master_Read@temp:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ___lldiv@dividend:	
   898                           ; 2 bytes @ 0x4
   899                           
   900  0074                     ___aldiv@dividend:	
   901                           ; 4 bytes @ 0x4
   902                           
   903                           
   904                           ; 4 bytes @ 0x4
   905  0074                     	ds	1
   906  0075                     ??_lcd_msg:	
   907  0075                     ___awdiv@counter:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     ___awmod@counter:	
   911                           ; 1 bytes @ 0x5
   912                           
   913  0075                     ___lwmod@counter:	
   914                           ; 1 bytes @ 0x5
   915                           
   916  0075                     ___lwdiv@quotient:	
   917                           ; 1 bytes @ 0x5
   918                           
   919                           
   920                           ; 2 bytes @ 0x5
   921  0075                     	ds	1
   922  0076                     ___awdiv@sign:	
   923  0076                     ___awmod@sign:	
   924                           ; 1 bytes @ 0x6
   925                           
   926                           
   927                           ; 1 bytes @ 0x6
   928  0076                     	ds	1
   929  0077                     ___lwdiv@counter:	
   930  0077                     ___awdiv@quotient:	
   931                           ; 1 bytes @ 0x7
   932                           
   933                           
   934                           ; 2 bytes @ 0x7
   935  0077                     	ds	1
   936  0078                     ?_utoa:	
   937  0078                     ??___lldiv:	
   938                           ; 1 bytes @ 0x8
   939                           
   940  0078                     ??___aldiv:	
   941                           ; 1 bytes @ 0x8
   942                           
   943  0078                     utoa@val:	
   944                           ; 1 bytes @ 0x8
   945                           
   946                           
   947                           ; 2 bytes @ 0x8
   948  0078                     	ds	1
   949  0079                     ___lldiv@quotient:	
   950                           
   951                           ; 4 bytes @ 0x9
   952  0079                     	ds	1
   953  007A                     utoa@base:	
   954                           
   955                           ; 2 bytes @ 0xA
   956  007A                     	ds	2
   957  007C                     ??_utoa:	
   958                           
   959                           ; 1 bytes @ 0xC
   960  007C                     	ds	1
   961  007D                     ??_itoa:	
   962  007D                     ___lldiv@counter:	
   963                           ; 1 bytes @ 0xD
   964                           
   965                           
   966                           ; 1 bytes @ 0xD
   967  007D                     	ds	1
   968                           
   969                           	psect	cstackBANK0
   970  0054                     __pcstackBANK0:	
   971  0054                     ?_I2C_INIT:	
   972  0054                     ___aldiv@counter:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0054                     utoa@v:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0054                     I2C_INIT@c:	
   979                           ; 2 bytes @ 0x0
   980                           
   981                           
   982                           ; 4 bytes @ 0x0
   983  0054                     	ds	1
   984  0055                     ___aldiv@sign:	
   985                           
   986                           ; 1 bytes @ 0x1
   987  0055                     	ds	1
   988  0056                     utoa@c:	
   989  0056                     ___aldiv@quotient:	
   990                           ; 1 bytes @ 0x2
   991                           
   992                           
   993                           ; 4 bytes @ 0x2
   994  0056                     	ds	1
   995  0057                     utoa@buf:	
   996                           
   997                           ; 1 bytes @ 0x3
   998  0057                     	ds	1
   999  0058                     ??_I2C_INIT:	
  1000  0058                     ?_itoa:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0058                     itoa@val:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x4
  1008  0058                     	ds	2
  1009  005A                     ?_UART_INIT:	
  1010  005A                     itoa@base:	
  1011                           ; 1 bytes @ 0x6
  1012                           
  1013  005A                     UART_INIT@baudrate:	
  1014                           ; 2 bytes @ 0x6
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x6
  1018  005A                     	ds	3
  1019  005D                     itoa@buf:	
  1020                           
  1021                           ; 1 bytes @ 0x9
  1022  005D                     	ds	1
  1023  005E                     ??_UART_INIT:	
  1024                           
  1025                           ; 1 bytes @ 0xA
  1026  005E                     	ds	12
  1027  006A                     ??_main:	
  1028                           
  1029                           ; 1 bytes @ 0x16
  1030  006A                     	ds	3
  1031                           
  1032                           	psect	maintext
  1033  041C                     __pmaintext:	
  1034 ;;
  1035 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1036 ;;
  1037 ;; *************** function _main *****************
  1038 ;; Defined at:
  1039 ;;		line 95 in file "MASTERR_I2C.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : B00/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          0       3       0       0       0
  1056 ;;      Totals:         0       3       0       0       0
  1057 ;;Total ram usage:        3 bytes
  1058 ;; Hardware stack levels required when called:    3
  1059 ;; This function calls:
  1060 ;;		_I2C_INIT
  1061 ;;		_I2C_Master_Read
  1062 ;;		_I2C_Master_Start
  1063 ;;		_I2C_Master_Stop
  1064 ;;		_I2C_Master_Write
  1065 ;;		_SETUP
  1066 ;;		_UART_INIT
  1067 ;;		_UART_WRITE
  1068 ;;		___awdiv
  1069 ;;		___awmod
  1070 ;;		_inicializacion
  1071 ;;		_itoa
  1072 ;;		_lcd_cmd
  1073 ;;		_lcd_msg
  1074 ;;		_strcat
  1075 ;; This function is called by:
  1076 ;;		Startup code after reset
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _main
  1082  041C                     _main:	
  1083  041C                     l1823:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1086                           
  1087                           
  1088                           ;MASTERR_I2C.c: 96:     SETUP();
  1089  041C  120A  158A  2780  120A  118A  	fcall	_SETUP
  1090                           
  1091                           ;MASTERR_I2C.c: 97:     I2C_INIT(100000);
  1092  0421  3000               	movlw	0
  1093  0422  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0423  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0424  00D7               	movwf	I2C_INIT@c+3
  1096  0425  3001               	movlw	1
  1097  0426  00D6               	movwf	I2C_INIT@c+2
  1098  0427  3086               	movlw	134
  1099  0428  00D5               	movwf	I2C_INIT@c+1
  1100  0429  30A0               	movlw	160
  1101  042A  00D4               	movwf	I2C_INIT@c
  1102  042B  120A  118A  20CE  120A  118A  	fcall	_I2C_INIT
  1103                           
  1104                           ;MASTERR_I2C.c: 98:     inicializacion();
  1105  0430  120A  158A  2795  120A  118A  	fcall	_inicializacion
  1106                           
  1107                           ;MASTERR_I2C.c: 99:     UART_INIT(9600);
  1108  0435  3000               	movlw	0
  1109  0436  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0437  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0438  00DD               	movwf	UART_INIT@baudrate+3
  1112  0439  3000               	movlw	0
  1113  043A  00DC               	movwf	UART_INIT@baudrate+2
  1114  043B  3025               	movlw	37
  1115  043C  00DB               	movwf	UART_INIT@baudrate+1
  1116  043D  3080               	movlw	128
  1117  043E  00DA               	movwf	UART_INIT@baudrate
  1118  043F  120A  118A  21DD  120A  118A  	fcall	_UART_INIT
  1119  0444                     l151:	
  1120                           ;MASTERR_I2C.c: 101:     while(1){
  1121                           
  1122                           
  1123                           ;MASTERR_I2C.c: 103:         I2C_Master_Start();
  1124  0444  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Start
  1125                           
  1126                           ;MASTERR_I2C.c: 104:         I2C_Master_Write(0x31);
  1127  0449  3031               	movlw	49
  1128  044A  00F0               	movwf	I2C_Master_Write@d
  1129  044B  3000               	movlw	0
  1130  044C  00F1               	movwf	I2C_Master_Write@d+1
  1131  044D  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Write
  1132                           
  1133                           ;MASTERR_I2C.c: 105:         analogic_digital_b = I2C_Master_Read(0);
  1134  0452  3000               	movlw	0
  1135  0453  00F0               	movwf	I2C_Master_Read@a
  1136  0454  00F1               	movwf	I2C_Master_Read@a+1
  1137  0455  120A  118A  20A0  120A  118A  	fcall	_I2C_Master_Read
  1138  045A  0870               	movf	?_I2C_Master_Read,w
  1139  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1140  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1141  045D  00EA               	movwf	??_main
  1142  045E  086A               	movf	??_main,w
  1143  045F  00CC               	movwf	_analogic_digital_b
  1144                           
  1145                           ;MASTERR_I2C.c: 106:         I2C_Master_Stop();
  1146  0460  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1147  0465                     l1825:	
  1148                           
  1149                           ;MASTERR_I2C.c: 107:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1150  0465  3003               	movlw	3
  1151  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0468  00EC               	movwf	??_main+2
  1154  0469  3008               	movlw	8
  1155  046A  00EB               	movwf	??_main+1
  1156  046B  3076               	movlw	118
  1157  046C  00EA               	movwf	??_main
  1158  046D                     u1407:	
  1159  046D  0BEA               	decfsz	??_main,f
  1160  046E  2C6D               	goto	u1407
  1161  046F  0BEB               	decfsz	??_main+1,f
  1162  0470  2C6D               	goto	u1407
  1163  0471  0BEC               	decfsz	??_main+2,f
  1164  0472  2C6D               	goto	u1407
  1165  0473  0000               	nop
  1166  0474                     l1827:	
  1167                           
  1168                           ;MASTERR_I2C.c: 110:         CONTLUZA = analogic_digital_b/10;
  1169  0474  300A               	movlw	10
  1170  0475  00F0               	movwf	___awdiv@divisor
  1171  0476  3000               	movlw	0
  1172  0477  00F1               	movwf	___awdiv@divisor+1
  1173  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1174  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1175  047A  084C               	movf	_analogic_digital_b,w
  1176  047B  00EA               	movwf	??_main
  1177  047C  01EB               	clrf	??_main+1
  1178  047D  086A               	movf	??_main,w
  1179  047E  00F2               	movwf	___awdiv@dividend
  1180  047F  086B               	movf	??_main+1,w
  1181  0480  00F3               	movwf	___awdiv@dividend+1
  1182  0481  120A  118A  22A6  120A  118A  	fcall	___awdiv
  1183  0486  0871               	movf	?___awdiv+1,w
  1184  0487  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0488  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0489  00C7               	movwf	_CONTLUZA+1
  1187  048A  0870               	movf	?___awdiv,w
  1188  048B  00C6               	movwf	_CONTLUZA
  1189  048C                     l1829:	
  1190                           
  1191                           ;MASTERR_I2C.c: 111:         itoa(CONTLUZA_CHAR,CONTLUZA,10);
  1192  048C  0847               	movf	_CONTLUZA+1,w
  1193  048D  00D9               	movwf	itoa@val+1
  1194  048E  0846               	movf	_CONTLUZA,w
  1195  048F  00D8               	movwf	itoa@val
  1196  0490  300A               	movlw	10
  1197  0491  00DA               	movwf	itoa@base
  1198  0492  3000               	movlw	0
  1199  0493  00DB               	movwf	itoa@base+1
  1200  0494  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1201  0495  120A  158A  27B4  120A  118A  	fcall	_itoa
  1202  049A                     l1831:	
  1203                           
  1204                           ;MASTERR_I2C.c: 112:         CONTLUZB = analogic_digital_b%10;
  1205  049A  300A               	movlw	10
  1206  049B  00F0               	movwf	___awmod@divisor
  1207  049C  3000               	movlw	0
  1208  049D  00F1               	movwf	___awmod@divisor+1
  1209  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1210  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1211  04A0  084C               	movf	_analogic_digital_b,w
  1212  04A1  00EA               	movwf	??_main
  1213  04A2  01EB               	clrf	??_main+1
  1214  04A3  086A               	movf	??_main,w
  1215  04A4  00F2               	movwf	___awmod@dividend
  1216  04A5  086B               	movf	??_main+1,w
  1217  04A6  00F3               	movwf	___awmod@dividend+1
  1218  04A7  120A  118A  2184  120A  118A  	fcall	___awmod
  1219  04AC  0871               	movf	?___awmod+1,w
  1220  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1221  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1222  04AF  00C5               	movwf	_CONTLUZB+1
  1223  04B0  0870               	movf	?___awmod,w
  1224  04B1  00C4               	movwf	_CONTLUZB
  1225  04B2                     l1833:	
  1226                           
  1227                           ;MASTERR_I2C.c: 113:         itoa(CONTLUZB_CHAR,CONTLUZB,10);
  1228  04B2  0845               	movf	_CONTLUZB+1,w
  1229  04B3  00D9               	movwf	itoa@val+1
  1230  04B4  0844               	movf	_CONTLUZB,w
  1231  04B5  00D8               	movwf	itoa@val
  1232  04B6  300A               	movlw	10
  1233  04B7  00DA               	movwf	itoa@base
  1234  04B8  3000               	movlw	0
  1235  04B9  00DB               	movwf	itoa@base+1
  1236  04BA  30E9               	movlw	(low (_CONTLUZB_CHAR| 0))& (0+255)
  1237  04BB  120A  158A  27B4  120A  118A  	fcall	_itoa
  1238  04C0                     l1835:	
  1239                           
  1240                           ;MASTERR_I2C.c: 114:         strcat(CONTLUZA_CHAR,CONTLUZB_CHAR);
  1241  04C0  30E9               	movlw	(low (_CONTLUZB_CHAR| 0))& (0+255)
  1242  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  1243  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  1244  04C3  00EA               	movwf	??_main
  1245  04C4  086A               	movf	??_main,w
  1246  04C5  00F0               	movwf	strcat@from
  1247  04C6  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1248  04C7  120A  118A  2077  120A  118A  	fcall	_strcat
  1249  04CC                     l1837:	
  1250                           
  1251                           ;MASTERR_I2C.c: 117:         I2C_Master_Start();
  1252  04CC  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Start
  1253  04D1                     l1839:	
  1254                           
  1255                           ;MASTERR_I2C.c: 118:         I2C_Master_Write(0x31);
  1256  04D1  3031               	movlw	49
  1257  04D2  00F0               	movwf	I2C_Master_Write@d
  1258  04D3  3000               	movlw	0
  1259  04D4  00F1               	movwf	I2C_Master_Write@d+1
  1260  04D5  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Write
  1261  04DA                     l1841:	
  1262                           
  1263                           ;MASTERR_I2C.c: 119:         T_byte1 = I2C_Master_Read(0);
  1264  04DA  3000               	movlw	0
  1265  04DB  00F0               	movwf	I2C_Master_Read@a
  1266  04DC  00F1               	movwf	I2C_Master_Read@a+1
  1267  04DD  120A  118A  20A0  120A  118A  	fcall	_I2C_Master_Read
  1268  04E2  0870               	movf	?_I2C_Master_Read,w
  1269  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  1270  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  1271  04E5  00EA               	movwf	??_main
  1272  04E6  086A               	movf	??_main,w
  1273  04E7  00CA               	movwf	_T_byte1
  1274  04E8                     l1843:	
  1275                           
  1276                           ;MASTERR_I2C.c: 120:         I2C_Master_Stop();
  1277  04E8  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1278  04ED                     l1845:	
  1279                           
  1280                           ;MASTERR_I2C.c: 121:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1281  04ED  3003               	movlw	3
  1282  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  1283  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  1284  04F0  00EC               	movwf	??_main+2
  1285  04F1  3008               	movlw	8
  1286  04F2  00EB               	movwf	??_main+1
  1287  04F3  3076               	movlw	118
  1288  04F4  00EA               	movwf	??_main
  1289  04F5                     u1417:	
  1290  04F5  0BEA               	decfsz	??_main,f
  1291  04F6  2CF5               	goto	u1417
  1292  04F7  0BEB               	decfsz	??_main+1,f
  1293  04F8  2CF5               	goto	u1417
  1294  04F9  0BEC               	decfsz	??_main+2,f
  1295  04FA  2CF5               	goto	u1417
  1296  04FB  0000               	nop
  1297  04FC                     l1847:	
  1298                           
  1299                           ;MASTERR_I2C.c: 122:         UART_WRITE(T_byte1);
  1300  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1301  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1302  04FE  084A               	movf	_T_byte1,w
  1303  04FF  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1304  0504                     l1849:	
  1305                           
  1306                           ;MASTERR_I2C.c: 125:         decT = T_byte1/10;
  1307  0504  300A               	movlw	10
  1308  0505  00F0               	movwf	___awdiv@divisor
  1309  0506  3000               	movlw	0
  1310  0507  00F1               	movwf	___awdiv@divisor+1
  1311  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1313  050A  084A               	movf	_T_byte1,w
  1314  050B  00EA               	movwf	??_main
  1315  050C  01EB               	clrf	??_main+1
  1316  050D  086A               	movf	??_main,w
  1317  050E  00F2               	movwf	___awdiv@dividend
  1318  050F  086B               	movf	??_main+1,w
  1319  0510  00F3               	movwf	___awdiv@dividend+1
  1320  0511  120A  118A  22A6  120A  118A  	fcall	___awdiv
  1321  0516  0871               	movf	?___awdiv+1,w
  1322  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0519  00C1               	movwf	_decT+1
  1325  051A  0870               	movf	?___awdiv,w
  1326  051B  00C0               	movwf	_decT
  1327  051C                     l1851:	
  1328                           
  1329                           ;MASTERR_I2C.c: 126:         itoa(decT_char,decT,10);
  1330  051C  0841               	movf	_decT+1,w
  1331  051D  00D9               	movwf	itoa@val+1
  1332  051E  0840               	movf	_decT,w
  1333  051F  00D8               	movwf	itoa@val
  1334  0520  300A               	movlw	10
  1335  0521  00DA               	movwf	itoa@base
  1336  0522  3000               	movlw	0
  1337  0523  00DB               	movwf	itoa@base+1
  1338  0524  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1339  0525  120A  158A  27B4  120A  118A  	fcall	_itoa
  1340                           
  1341                           ;MASTERR_I2C.c: 127:         uniT = T_byte1%10;
  1342  052A  300A               	movlw	10
  1343  052B  00F0               	movwf	___awmod@divisor
  1344  052C  3000               	movlw	0
  1345  052D  00F1               	movwf	___awmod@divisor+1
  1346  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1347  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0530  084A               	movf	_T_byte1,w
  1349  0531  00EA               	movwf	??_main
  1350  0532  01EB               	clrf	??_main+1
  1351  0533  086A               	movf	??_main,w
  1352  0534  00F2               	movwf	___awmod@dividend
  1353  0535  086B               	movf	??_main+1,w
  1354  0536  00F3               	movwf	___awmod@dividend+1
  1355  0537  120A  118A  2184  120A  118A  	fcall	___awmod
  1356  053C  0871               	movf	?___awmod+1,w
  1357  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1358  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1359  053F  00C3               	movwf	_uniT+1
  1360  0540  0870               	movf	?___awmod,w
  1361  0541  00C2               	movwf	_uniT
  1362  0542                     l1853:	
  1363                           
  1364                           ;MASTERR_I2C.c: 128:         itoa(uniT_char,uniT ,10);
  1365  0542  0843               	movf	_uniT+1,w
  1366  0543  00D9               	movwf	itoa@val+1
  1367  0544  0842               	movf	_uniT,w
  1368  0545  00D8               	movwf	itoa@val
  1369  0546  300A               	movlw	10
  1370  0547  00DA               	movwf	itoa@base
  1371  0548  3000               	movlw	0
  1372  0549  00DB               	movwf	itoa@base+1
  1373  054A  30C6               	movlw	(low (_uniT_char| 0))& (0+255)
  1374  054B  120A  158A  27B4  120A  118A  	fcall	_itoa
  1375  0550                     l1855:	
  1376                           
  1377                           ;MASTERR_I2C.c: 129:         strcat(decT_char,uniT_char);
  1378  0550  30C6               	movlw	(low (_uniT_char| 0))& (0+255)
  1379  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1380  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1381  0553  00EA               	movwf	??_main
  1382  0554  086A               	movf	??_main,w
  1383  0555  00F0               	movwf	strcat@from
  1384  0556  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1385  0557  120A  118A  2077  120A  118A  	fcall	_strcat
  1386                           
  1387                           ;MASTERR_I2C.c: 132:         I2C_Master_Start();
  1388  055C  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Start
  1389                           
  1390                           ;MASTERR_I2C.c: 133:         I2C_Master_Write(0x11);
  1391  0561  3011               	movlw	17
  1392  0562  00F0               	movwf	I2C_Master_Write@d
  1393  0563  3000               	movlw	0
  1394  0564  00F1               	movwf	I2C_Master_Write@d+1
  1395  0565  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Write
  1396                           
  1397                           ;MASTERR_I2C.c: 134:         CONTADOR = I2C_Master_Read(0);
  1398  056A  3000               	movlw	0
  1399  056B  00F0               	movwf	I2C_Master_Read@a
  1400  056C  00F1               	movwf	I2C_Master_Read@a+1
  1401  056D  120A  118A  20A0  120A  118A  	fcall	_I2C_Master_Read
  1402  0572  0870               	movf	?_I2C_Master_Read,w
  1403  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1404  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1405  0575  00EA               	movwf	??_main
  1406  0576  086A               	movf	??_main,w
  1407  0577  00CD               	movwf	_CONTADOR
  1408                           
  1409                           ;MASTERR_I2C.c: 135:         I2C_Master_Stop();
  1410  0578  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1411  057D                     l1857:	
  1412                           
  1413                           ;MASTERR_I2C.c: 136:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1414  057D  3003               	movlw	3
  1415  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1416  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0580  00EC               	movwf	??_main+2
  1418  0581  3008               	movlw	8
  1419  0582  00EB               	movwf	??_main+1
  1420  0583  3076               	movlw	118
  1421  0584  00EA               	movwf	??_main
  1422  0585                     u1427:	
  1423  0585  0BEA               	decfsz	??_main,f
  1424  0586  2D85               	goto	u1427
  1425  0587  0BEB               	decfsz	??_main+1,f
  1426  0588  2D85               	goto	u1427
  1427  0589  0BEC               	decfsz	??_main+2,f
  1428  058A  2D85               	goto	u1427
  1429  058B  0000               	nop
  1430  058C                     l1859:	
  1431                           
  1432                           ;MASTERR_I2C.c: 137:         UART_WRITE(CONTADOR);
  1433  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1434  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1435  058E  084D               	movf	_CONTADOR,w
  1436  058F  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1437  0594                     l1861:	
  1438                           
  1439                           ;MASTERR_I2C.c: 140:         CONTD = CONTADOR/10;
  1440  0594  300A               	movlw	10
  1441  0595  00F0               	movwf	___awdiv@divisor
  1442  0596  3000               	movlw	0
  1443  0597  00F1               	movwf	___awdiv@divisor+1
  1444  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1446  059A  084D               	movf	_CONTADOR,w
  1447  059B  00EA               	movwf	??_main
  1448  059C  01EB               	clrf	??_main+1
  1449  059D  086A               	movf	??_main,w
  1450  059E  00F2               	movwf	___awdiv@dividend
  1451  059F  086B               	movf	??_main+1,w
  1452  05A0  00F3               	movwf	___awdiv@dividend+1
  1453  05A1  120A  118A  22A6  120A  118A  	fcall	___awdiv
  1454  05A6  0871               	movf	?___awdiv+1,w
  1455  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1456  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1457  05A9  00B3               	movwf	_CONTD+1
  1458  05AA  0870               	movf	?___awdiv,w
  1459  05AB  00B2               	movwf	_CONTD
  1460  05AC                     l1863:	
  1461                           
  1462                           ;MASTERR_I2C.c: 141:         itoa(CONTD_CHAR,CONTD,10);
  1463  05AC  0833               	movf	_CONTD+1,w
  1464  05AD  00D9               	movwf	itoa@val+1
  1465  05AE  0832               	movf	_CONTD,w
  1466  05AF  00D8               	movwf	itoa@val
  1467  05B0  300A               	movlw	10
  1468  05B1  00DA               	movwf	itoa@base
  1469  05B2  3000               	movlw	0
  1470  05B3  00DB               	movwf	itoa@base+1
  1471  05B4  30DA               	movlw	(low (_CONTD_CHAR| 0))& (0+255)
  1472  05B5  120A  158A  27B4  120A  118A  	fcall	_itoa
  1473  05BA                     l1865:	
  1474                           
  1475                           ;MASTERR_I2C.c: 142:         CONTU = CONTADOR%10;
  1476  05BA  300A               	movlw	10
  1477  05BB  00F0               	movwf	___awmod@divisor
  1478  05BC  3000               	movlw	0
  1479  05BD  00F1               	movwf	___awmod@divisor+1
  1480  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1481  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1482  05C0  084D               	movf	_CONTADOR,w
  1483  05C1  00EA               	movwf	??_main
  1484  05C2  01EB               	clrf	??_main+1
  1485  05C3  086A               	movf	??_main,w
  1486  05C4  00F2               	movwf	___awmod@dividend
  1487  05C5  086B               	movf	??_main+1,w
  1488  05C6  00F3               	movwf	___awmod@dividend+1
  1489  05C7  120A  118A  2184  120A  118A  	fcall	___awmod
  1490  05CC  0871               	movf	?___awmod+1,w
  1491  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1492  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1493  05CF  00AF               	movwf	_CONTU+1
  1494  05D0  0870               	movf	?___awmod,w
  1495  05D1  00AE               	movwf	_CONTU
  1496  05D2                     l1867:	
  1497                           
  1498                           ;MASTERR_I2C.c: 143:         itoa(CONTU_CHAR,CONTU,10);
  1499  05D2  082F               	movf	_CONTU+1,w
  1500  05D3  00D9               	movwf	itoa@val+1
  1501  05D4  082E               	movf	_CONTU,w
  1502  05D5  00D8               	movwf	itoa@val
  1503  05D6  300A               	movlw	10
  1504  05D7  00DA               	movwf	itoa@base
  1505  05D8  3000               	movlw	0
  1506  05D9  00DB               	movwf	itoa@base+1
  1507  05DA  30D5               	movlw	(low (_CONTU_CHAR| 0))& (0+255)
  1508  05DB  120A  158A  27B4  120A  118A  	fcall	_itoa
  1509  05E0                     l1869:	
  1510                           
  1511                           ;MASTERR_I2C.c: 146:         I2C_Master_Start();
  1512  05E0  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Start
  1513  05E5                     l1871:	
  1514                           
  1515                           ;MASTERR_I2C.c: 147:         I2C_Master_Write(0x21);
  1516  05E5  3021               	movlw	33
  1517  05E6  00F0               	movwf	I2C_Master_Write@d
  1518  05E7  3000               	movlw	0
  1519  05E8  00F1               	movwf	I2C_Master_Write@d+1
  1520  05E9  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Write
  1521  05EE                     l1873:	
  1522                           
  1523                           ;MASTERR_I2C.c: 148:         analogic_digital_a = I2C_Master_Read(0);
  1524  05EE  3000               	movlw	0
  1525  05EF  00F0               	movwf	I2C_Master_Read@a
  1526  05F0  00F1               	movwf	I2C_Master_Read@a+1
  1527  05F1  120A  118A  20A0  120A  118A  	fcall	_I2C_Master_Read
  1528  05F6  0870               	movf	?_I2C_Master_Read,w
  1529  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1530  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1531  05F9  00EA               	movwf	??_main
  1532  05FA  086A               	movf	??_main,w
  1533  05FB  00CE               	movwf	_analogic_digital_a
  1534  05FC                     l1875:	
  1535                           
  1536                           ;MASTERR_I2C.c: 149:         I2C_Master_Stop();
  1537  05FC  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1538                           
  1539                           ;MASTERR_I2C.c: 150:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1540  0601  3003               	movlw	3
  1541  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0604  00EC               	movwf	??_main+2
  1544  0605  3008               	movlw	8
  1545  0606  00EB               	movwf	??_main+1
  1546  0607  3076               	movlw	118
  1547  0608  00EA               	movwf	??_main
  1548  0609                     u1437:	
  1549  0609  0BEA               	decfsz	??_main,f
  1550  060A  2E09               	goto	u1437
  1551  060B  0BEB               	decfsz	??_main+1,f
  1552  060C  2E09               	goto	u1437
  1553  060D  0BEC               	decfsz	??_main+2,f
  1554  060E  2E09               	goto	u1437
  1555  060F  0000               	nop
  1556  0610                     l1877:	
  1557                           
  1558                           ;MASTERR_I2C.c: 151:         UART_WRITE(analogic_digital_a);
  1559  0610  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0611  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0612  084E               	movf	_analogic_digital_a,w
  1562  0613  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1563  0618                     l1879:	
  1564                           
  1565                           ;MASTERR_I2C.c: 154:          DC1 = analogic_digital_a/10;
  1566  0618  300A               	movlw	10
  1567  0619  00F0               	movwf	___awdiv@divisor
  1568  061A  3000               	movlw	0
  1569  061B  00F1               	movwf	___awdiv@divisor+1
  1570  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1571  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1572  061E  084E               	movf	_analogic_digital_a,w
  1573  061F  00EA               	movwf	??_main
  1574  0620  01EB               	clrf	??_main+1
  1575  0621  086A               	movf	??_main,w
  1576  0622  00F2               	movwf	___awdiv@dividend
  1577  0623  086B               	movf	??_main+1,w
  1578  0624  00F3               	movwf	___awdiv@dividend+1
  1579  0625  120A  118A  22A6  120A  118A  	fcall	___awdiv
  1580  062A  0871               	movf	?___awdiv+1,w
  1581  062B  1283               	bcf	3,5	;RP0=0, select bank0
  1582  062C  1303               	bcf	3,6	;RP1=0, select bank0
  1583  062D  00AB               	movwf	_DC1+1
  1584  062E  0870               	movf	?___awdiv,w
  1585  062F  00AA               	movwf	_DC1
  1586  0630                     l1881:	
  1587                           
  1588                           ;MASTERR_I2C.c: 155:         itoa(ADCA_CHARA,DC1,10);
  1589  0630  082B               	movf	_DC1+1,w
  1590  0631  00D9               	movwf	itoa@val+1
  1591  0632  082A               	movf	_DC1,w
  1592  0633  00D8               	movwf	itoa@val
  1593  0634  300A               	movlw	10
  1594  0635  00DA               	movwf	itoa@base
  1595  0636  3000               	movlw	0
  1596  0637  00DB               	movwf	itoa@base+1
  1597  0638  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1598  0639  120A  158A  27B4  120A  118A  	fcall	_itoa
  1599  063E                     l1883:	
  1600                           
  1601                           ;MASTERR_I2C.c: 156:         DC2 = analogic_digital_a%10;
  1602  063E  300A               	movlw	10
  1603  063F  00F0               	movwf	___awmod@divisor
  1604  0640  3000               	movlw	0
  1605  0641  00F1               	movwf	___awmod@divisor+1
  1606  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0644  084E               	movf	_analogic_digital_a,w
  1609  0645  00EA               	movwf	??_main
  1610  0646  01EB               	clrf	??_main+1
  1611  0647  086A               	movf	??_main,w
  1612  0648  00F2               	movwf	___awmod@dividend
  1613  0649  086B               	movf	??_main+1,w
  1614  064A  00F3               	movwf	___awmod@dividend+1
  1615  064B  120A  118A  2184  120A  118A  	fcall	___awmod
  1616  0650  0871               	movf	?___awmod+1,w
  1617  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1618  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1619  0653  00BB               	movwf	_DC2+1
  1620  0654  0870               	movf	?___awmod,w
  1621  0655  00BA               	movwf	_DC2
  1622  0656                     l1885:	
  1623                           
  1624                           ;MASTERR_I2C.c: 157:         itoa(ADCB_CHARB,DC2,10);
  1625  0656  083B               	movf	_DC2+1,w
  1626  0657  00D9               	movwf	itoa@val+1
  1627  0658  083A               	movf	_DC2,w
  1628  0659  00D8               	movwf	itoa@val
  1629  065A  300A               	movlw	10
  1630  065B  00DA               	movwf	itoa@base
  1631  065C  3000               	movlw	0
  1632  065D  00DB               	movwf	itoa@base+1
  1633  065E  30CB               	movlw	(low (_ADCB_CHARB| 0))& (0+255)
  1634  065F  120A  158A  27B4  120A  118A  	fcall	_itoa
  1635  0664                     l1887:	
  1636                           
  1637                           ;MASTERR_I2C.c: 158:         strcat(ADCA_CHARA,ADCB_CHARB);
  1638  0664  30CB               	movlw	(low (_ADCB_CHARB| 0))& (0+255)
  1639  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1640  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1641  0667  00EA               	movwf	??_main
  1642  0668  086A               	movf	??_main,w
  1643  0669  00F0               	movwf	strcat@from
  1644  066A  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1645  066B  120A  118A  2077  120A  118A  	fcall	_strcat
  1646  0670                     l1889:	
  1647                           
  1648                           ;MASTERR_I2C.c: 161:         I2C_Master_Start();
  1649  0670  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Start
  1650  0675                     l1891:	
  1651                           
  1652                           ;MASTERR_I2C.c: 162:         I2C_Master_Write(0x21);
  1653  0675  3021               	movlw	33
  1654  0676  00F0               	movwf	I2C_Master_Write@d
  1655  0677  3000               	movlw	0
  1656  0678  00F1               	movwf	I2C_Master_Write@d+1
  1657  0679  120A  158A  273C  120A  118A  	fcall	_I2C_Master_Write
  1658  067E                     l1893:	
  1659                           
  1660                           ;MASTERR_I2C.c: 163:         SONICO = I2C_Master_Read(0);
  1661  067E  3000               	movlw	0
  1662  067F  00F0               	movwf	I2C_Master_Read@a
  1663  0680  00F1               	movwf	I2C_Master_Read@a+1
  1664  0681  120A  118A  20A0  120A  118A  	fcall	_I2C_Master_Read
  1665  0686  0870               	movf	?_I2C_Master_Read,w
  1666  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0689  00EA               	movwf	??_main
  1669  068A  086A               	movf	??_main,w
  1670  068B  00CB               	movwf	_SONICO
  1671  068C                     l1895:	
  1672                           
  1673                           ;MASTERR_I2C.c: 164:         I2C_Master_Stop();
  1674  068C  120A  158A  2733  120A  118A  	fcall	_I2C_Master_Stop
  1675  0691                     l1897:	
  1676                           
  1677                           ;MASTERR_I2C.c: 165:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1678  0691  3003               	movlw	3
  1679  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1680  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1681  0694  00EC               	movwf	??_main+2
  1682  0695  3008               	movlw	8
  1683  0696  00EB               	movwf	??_main+1
  1684  0697  3076               	movlw	118
  1685  0698  00EA               	movwf	??_main
  1686  0699                     u1447:	
  1687  0699  0BEA               	decfsz	??_main,f
  1688  069A  2E99               	goto	u1447
  1689  069B  0BEB               	decfsz	??_main+1,f
  1690  069C  2E99               	goto	u1447
  1691  069D  0BEC               	decfsz	??_main+2,f
  1692  069E  2E99               	goto	u1447
  1693  069F  0000               	nop
  1694  06A0                     l1899:	
  1695                           
  1696                           ;MASTERR_I2C.c: 166:         UART_WRITE(SONICO);
  1697  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1698  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1699  06A2  084B               	movf	_SONICO,w
  1700  06A3  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1701  06A8                     l1901:	
  1702                           
  1703                           ;MASTERR_I2C.c: 169:         SONICOD = SONICO/10;
  1704  06A8  300A               	movlw	10
  1705  06A9  00F0               	movwf	___awdiv@divisor
  1706  06AA  3000               	movlw	0
  1707  06AB  00F1               	movwf	___awdiv@divisor+1
  1708  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1709  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1710  06AE  084B               	movf	_SONICO,w
  1711  06AF  00EA               	movwf	??_main
  1712  06B0  01EB               	clrf	??_main+1
  1713  06B1  086A               	movf	??_main,w
  1714  06B2  00F2               	movwf	___awdiv@dividend
  1715  06B3  086B               	movf	??_main+1,w
  1716  06B4  00F3               	movwf	___awdiv@dividend+1
  1717  06B5  120A  118A  22A6  120A  118A  	fcall	___awdiv
  1718  06BA  0871               	movf	?___awdiv+1,w
  1719  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  1720  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  1721  06BD  00B1               	movwf	_SONICOD+1
  1722  06BE  0870               	movf	?___awdiv,w
  1723  06BF  00B0               	movwf	_SONICOD
  1724  06C0                     l1903:	
  1725                           
  1726                           ;MASTERR_I2C.c: 170:         itoa(SONICOD_CHAR,SONICOD,10);
  1727  06C0  0831               	movf	_SONICOD+1,w
  1728  06C1  00D9               	movwf	itoa@val+1
  1729  06C2  0830               	movf	_SONICOD,w
  1730  06C3  00D8               	movwf	itoa@val
  1731  06C4  300A               	movlw	10
  1732  06C5  00DA               	movwf	itoa@base
  1733  06C6  3000               	movlw	0
  1734  06C7  00DB               	movwf	itoa@base+1
  1735  06C8  30E4               	movlw	(low (_SONICOD_CHAR| 0))& (0+255)
  1736  06C9  120A  158A  27B4  120A  118A  	fcall	_itoa
  1737                           
  1738                           ;MASTERR_I2C.c: 171:         SONICOU = SONICO%10;
  1739  06CE  300A               	movlw	10
  1740  06CF  00F0               	movwf	___awmod@divisor
  1741  06D0  3000               	movlw	0
  1742  06D1  00F1               	movwf	___awmod@divisor+1
  1743  06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1744  06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1745  06D4  084B               	movf	_SONICO,w
  1746  06D5  00EA               	movwf	??_main
  1747  06D6  01EB               	clrf	??_main+1
  1748  06D7  086A               	movf	??_main,w
  1749  06D8  00F2               	movwf	___awmod@dividend
  1750  06D9  086B               	movf	??_main+1,w
  1751  06DA  00F3               	movwf	___awmod@dividend+1
  1752  06DB  120A  118A  2184  120A  118A  	fcall	___awmod
  1753  06E0  0871               	movf	?___awmod+1,w
  1754  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1755  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1756  06E3  00AD               	movwf	_SONICOU+1
  1757  06E4  0870               	movf	?___awmod,w
  1758  06E5  00AC               	movwf	_SONICOU
  1759  06E6                     l1905:	
  1760                           
  1761                           ;MASTERR_I2C.c: 172:         itoa(SONICOU_CHAR,SONICOU,10);
  1762  06E6  082D               	movf	_SONICOU+1,w
  1763  06E7  00D9               	movwf	itoa@val+1
  1764  06E8  082C               	movf	_SONICOU,w
  1765  06E9  00D8               	movwf	itoa@val
  1766  06EA  300A               	movlw	10
  1767  06EB  00DA               	movwf	itoa@base
  1768  06EC  3000               	movlw	0
  1769  06ED  00DB               	movwf	itoa@base+1
  1770  06EE  30DF               	movlw	(low (_SONICOU_CHAR| 0))& (0+255)
  1771  06EF  120A  158A  27B4  120A  118A  	fcall	_itoa
  1772  06F4                     l1907:	
  1773                           
  1774                           ;MASTERR_I2C.c: 176:         if(RA0==0){
  1775  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1776  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1777  06F6  1805               	btfsc	5,0	;volatile
  1778  06F7  2EF9               	goto	u1361
  1779  06F8  2EFA               	goto	u1360
  1780  06F9                     u1361:	
  1781  06F9  2F5C               	goto	l1935
  1782  06FA                     u1360:	
  1783  06FA                     l1909:	
  1784                           
  1785                           ;MASTERR_I2C.c: 177:             if(S0==1){
  1786  06FA  0349               	decf	_S0,w
  1787  06FB  1D03               	btfss	3,2
  1788  06FC  2EFE               	goto	u1371
  1789  06FD  2EFF               	goto	u1370
  1790  06FE                     u1371:	
  1791  06FE  2F08               	goto	l1915
  1792  06FF                     u1370:	
  1793  06FF                     l1911:	
  1794                           
  1795                           ;MASTERR_I2C.c: 178:             lcd_cmd(0x01);
  1796  06FF  3001               	movlw	1
  1797  0700  120A  158A  276E  120A  118A  	fcall	_lcd_cmd
  1798  0705                     l1913:	
  1799                           
  1800                           ;MASTERR_I2C.c: 179:             S0=0;
  1801  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0707  01C9               	clrf	_S0
  1804  0708                     l1915:	
  1805                           
  1806                           ;MASTERR_I2C.c: 181:         lcd_cmd(0x80);
  1807  0708  3080               	movlw	128
  1808  0709  120A  158A  276E  120A  118A  	fcall	_lcd_cmd
  1809  070E                     l1917:	
  1810                           
  1811                           ;MASTERR_I2C.c: 182:         lcd_msg("TEMP CARROS LUZ ");
  1812  070E  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1813  070F  00F3               	movwf	lcd_msg@c
  1814  0710  3080               	movlw	128
  1815  0711  00F4               	movwf	lcd_msg@c+1
  1816  0712  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1817  0717                     l1919:	
  1818                           
  1819                           ;MASTERR_I2C.c: 183:         lcd_cmd(0xC0);
  1820  0717  30C0               	movlw	192
  1821  0718  120A  158A  276E  120A  118A  	fcall	_lcd_cmd
  1822  071D                     l1921:	
  1823                           
  1824                           ;MASTERR_I2C.c: 184:         lcd_msg(" ");
  1825  071D  3028               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1826  071E  00F3               	movwf	lcd_msg@c
  1827  071F  3080               	movlw	128
  1828  0720  00F4               	movwf	lcd_msg@c+1
  1829  0721  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1830  0726                     l1923:	
  1831                           
  1832                           ;MASTERR_I2C.c: 185:         lcd_msg(decT_char);
  1833  0726  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1834  0727  00F3               	movwf	lcd_msg@c
  1835  0728  3000               	movlw	0
  1836  0729  00F4               	movwf	lcd_msg@c+1
  1837  072A  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1838  072F                     l1925:	
  1839                           
  1840                           ;MASTERR_I2C.c: 186:         lcd_msg("    ");
  1841  072F  3025               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1842  0730  00F3               	movwf	lcd_msg@c
  1843  0731  3080               	movlw	128
  1844  0732  00F4               	movwf	lcd_msg@c+1
  1845  0733  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1846  0738                     l1927:	
  1847                           
  1848                           ;MASTERR_I2C.c: 187:         lcd_msg(CONTU_CHAR);
  1849  0738  30D5               	movlw	(low (_CONTU_CHAR| 0))& (0+255)
  1850  0739  00F3               	movwf	lcd_msg@c
  1851  073A  3000               	movlw	0
  1852  073B  00F4               	movwf	lcd_msg@c+1
  1853  073C  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1854  0741                     l1929:	
  1855                           
  1856                           ;MASTERR_I2C.c: 188:         lcd_msg("    ");
  1857  0741  3025               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1858  0742  00F3               	movwf	lcd_msg@c
  1859  0743  3080               	movlw	128
  1860  0744  00F4               	movwf	lcd_msg@c+1
  1861  0745  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1862  074A                     l1931:	
  1863                           
  1864                           ;MASTERR_I2C.c: 189:         lcd_msg(CONTLUZA_CHAR);
  1865  074A  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1866  074B  00F3               	movwf	lcd_msg@c
  1867  074C  3000               	movlw	0
  1868  074D  00F4               	movwf	lcd_msg@c+1
  1869  074E  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1870  0753                     l1933:	
  1871                           
  1872                           ;MASTERR_I2C.c: 190:         lcd_msg(" ");
  1873  0753  3028               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1874  0754  00F3               	movwf	lcd_msg@c
  1875  0755  3080               	movlw	128
  1876  0756  00F4               	movwf	lcd_msg@c+1
  1877  0757  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1878  075C                     l1935:	
  1879                           
  1880                           ;MASTERR_I2C.c: 194:         if(RA0 == 1){
  1881  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1882  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1883  075E  1C05               	btfss	5,0	;volatile
  1884  075F  2F61               	goto	u1381
  1885  0760  2F62               	goto	u1380
  1886  0761                     u1381:	
  1887  0761  2FB3               	goto	l1947
  1888  0762                     u1380:	
  1889  0762                     l1937:	
  1890                           
  1891                           ;MASTERR_I2C.c: 195:             if(S0==0){
  1892  0762  0849               	movf	_S0,w
  1893  0763  1D03               	btfss	3,2
  1894  0764  2F66               	goto	u1391
  1895  0765  2F67               	goto	u1390
  1896  0766                     u1391:	
  1897  0766  2F71               	goto	l155
  1898  0767                     u1390:	
  1899  0767                     l1939:	
  1900                           
  1901                           ;MASTERR_I2C.c: 196:             lcd_cmd(0x01);
  1902  0767  3001               	movlw	1
  1903  0768  120A  158A  276E  120A  118A  	fcall	_lcd_cmd
  1904  076D                     l1941:	
  1905                           
  1906                           ;MASTERR_I2C.c: 197:             S0=1;
  1907  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1908  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1909  076F  01C9               	clrf	_S0
  1910  0770  0AC9               	incf	_S0,f
  1911  0771                     l155:	
  1912                           ;MASTERR_I2C.c: 198:             }
  1913                           
  1914                           
  1915                           ;MASTERR_I2C.c: 199:             lcd_cmd(0x80);
  1916  0771  3080               	movlw	128
  1917  0772  120A  158A  276E  120A  118A  	fcall	_lcd_cmd
  1918  0777                     l1943:	
  1919                           
  1920                           ;MASTERR_I2C.c: 200:             lcd_msg(" FUERZA ULTRA   ");
  1921  0777  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1922  0778  00F3               	movwf	lcd_msg@c
  1923  0779  3080               	movlw	128
  1924  077A  00F4               	movwf	lcd_msg@c+1
  1925  077B  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1926  0780                     l1945:	
  1927                           
  1928                           ;MASTERR_I2C.c: 201:             lcd_cmd(0xC0);
  1929  0780  30C0               	movlw	192
  1930  0781  120A  158A  276E  120A  118A  	fcall	_lcd_cmd
  1931                           
  1932                           ;MASTERR_I2C.c: 202:             lcd_msg("  ");
  1933  0786  3027               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  1934  0787  00F3               	movwf	lcd_msg@c
  1935  0788  3080               	movlw	128
  1936  0789  00F4               	movwf	lcd_msg@c+1
  1937  078A  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1938                           
  1939                           ;MASTERR_I2C.c: 203:             lcd_msg(ADCA_CHARA);
  1940  078F  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1941  0790  00F3               	movwf	lcd_msg@c
  1942  0791  3000               	movlw	0
  1943  0792  00F4               	movwf	lcd_msg@c+1
  1944  0793  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1945                           
  1946                           ;MASTERR_I2C.c: 204:             lcd_msg("     ");
  1947  0798  3024               	movlw	(low (((STR_9+1)-__stringbase)| (0+32768)))& (0+255)
  1948  0799  00F3               	movwf	lcd_msg@c
  1949  079A  3080               	movlw	128
  1950  079B  00F4               	movwf	lcd_msg@c+1
  1951  079C  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1952                           
  1953                           ;MASTERR_I2C.c: 205:             lcd_msg(SONICOU_CHAR);
  1954  07A1  30DF               	movlw	(low (_SONICOU_CHAR| 0))& (0+255)
  1955  07A2  00F3               	movwf	lcd_msg@c
  1956  07A3  3000               	movlw	0
  1957  07A4  00F4               	movwf	lcd_msg@c+1
  1958  07A5  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1959                           
  1960                           ;MASTERR_I2C.c: 206:             lcd_msg("      ");
  1961  07AA  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1962  07AB  00F3               	movwf	lcd_msg@c
  1963  07AC  3080               	movlw	128
  1964  07AD  00F4               	movwf	lcd_msg@c+1
  1965  07AE  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1966  07B3                     l1947:	
  1967                           
  1968                           ;MASTERR_I2C.c: 209:         UART_WRITE(decT_char);
  1969  07B3  30C1               	movlw	(low _decT_char)& (0+255)
  1970  07B4  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1971  07B9                     l1949:	
  1972                           
  1973                           ;MASTERR_I2C.c: 210:         UART_WRITE(CONTU_CHAR);
  1974  07B9  30D5               	movlw	(low _CONTU_CHAR)& (0+255)
  1975  07BA  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1976  07BF                     l1951:	
  1977                           
  1978                           ;MASTERR_I2C.c: 211:         UART_WRITE(CONTLUZA_CHAR);
  1979  07BF  304F               	movlw	(low _CONTLUZA_CHAR)& (0+255)
  1980  07C0  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1981  07C5                     l1953:	
  1982                           
  1983                           ;MASTERR_I2C.c: 212:         UART_WRITE(ADCA_CHARA);
  1984  07C5  30D0               	movlw	(low _ADCA_CHARA)& (0+255)
  1985  07C6  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1986  07CB                     l1955:	
  1987                           
  1988                           ;MASTERR_I2C.c: 213:         UART_WRITE(SONICOU_CHAR);
  1989  07CB  30DF               	movlw	(low _SONICOU_CHAR)& (0+255)
  1990  07CC  120A  158A  2746  120A  118A  	fcall	_UART_WRITE
  1991  07D1                     l1957:	
  1992                           
  1993                           ;MASTERR_I2C.c: 214:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1994  07D1  3002               	movlw	2
  1995  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1996  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1997  07D4  00EC               	movwf	??_main+2
  1998  07D5  3004               	movlw	4
  1999  07D6  00EB               	movwf	??_main+1
  2000  07D7  30B9               	movlw	185
  2001  07D8  00EA               	movwf	??_main
  2002  07D9                     u1457:	
  2003  07D9  0BEA               	decfsz	??_main,f
  2004  07DA  2FD9               	goto	u1457
  2005  07DB  0BEB               	decfsz	??_main+1,f
  2006  07DC  2FD9               	goto	u1457
  2007  07DD  0BEC               	decfsz	??_main+2,f
  2008  07DE  2FD9               	goto	u1457
  2009  07DF  2FE0               	nop2
  2010  07E0  2C44               	goto	l151
  2011  07E1  120A  118A  2800   	ljmp	start
  2012  07E4                     __end_of_main:	
  2013                           
  2014                           	psect	text1
  2015  0077                     __ptext1:	
  2016 ;; *************** function _strcat *****************
  2017 ;; Defined at:
  2018 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  to              1    wreg     PTR unsigned char 
  2021 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2022 ;;  from            1    0[COMMON] PTR const unsigned char 
  2023 ;;		 -> ADCB_CHARB(5), uniT_char(5), CONTLUZB_CHAR(5), 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  to              1    2[COMMON] PTR unsigned char 
  2026 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2027 ;;  cp              1    3[COMMON] PTR unsigned char 
  2028 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      PTR unsigned char 
  2031 ;; Registers used:
  2032 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         1       0       0       0       0
  2039 ;;      Locals:         2       0       0       0       0
  2040 ;;      Temps:          1       0       0       0       0
  2041 ;;      Totals:         4       0       0       0       0
  2042 ;;Total ram usage:        4 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function _strcat
  2053  0077                     _strcat:	
  2054                           
  2055                           ;incstack = 0
  2056                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2057                           ;strcat@to stored from wreg
  2058  0077  00F2               	movwf	strcat@to
  2059  0078                     l1719:	
  2060  0078  0872               	movf	strcat@to,w
  2061  0079  00F1               	movwf	??_strcat
  2062  007A  0871               	movf	??_strcat,w
  2063  007B  00F3               	movwf	strcat@cp
  2064  007C  2881               	goto	l1723
  2065  007D                     l1721:	
  2066  007D  3001               	movlw	1
  2067  007E  00F1               	movwf	??_strcat
  2068  007F  0871               	movf	??_strcat,w
  2069  0080  07F3               	addwf	strcat@cp,f
  2070  0081                     l1723:	
  2071  0081  0873               	movf	strcat@cp,w
  2072  0082  0084               	movwf	4
  2073  0083  1383               	bcf	3,7	;select IRP bank0
  2074  0084  0800               	movf	0,w
  2075  0085  1D03               	btfss	3,2
  2076  0086  2888               	goto	u1131
  2077  0087  2889               	goto	u1130
  2078  0088                     u1131:	
  2079  0088  287D               	goto	l1721
  2080  0089                     u1130:	
  2081  0089  2892               	goto	l1727
  2082  008A                     l1725:	
  2083  008A  3001               	movlw	1
  2084  008B  00F1               	movwf	??_strcat
  2085  008C  0871               	movf	??_strcat,w
  2086  008D  07F3               	addwf	strcat@cp,f
  2087  008E  3001               	movlw	1
  2088  008F  00F1               	movwf	??_strcat
  2089  0090  0871               	movf	??_strcat,w
  2090  0091  07F0               	addwf	strcat@from,f
  2091  0092                     l1727:	
  2092  0092  0870               	movf	strcat@from,w
  2093  0093  0084               	movwf	4
  2094  0094  0800               	movf	0,w
  2095  0095  00F1               	movwf	??_strcat
  2096  0096  0873               	movf	strcat@cp,w
  2097  0097  0084               	movwf	4
  2098  0098  0871               	movf	??_strcat,w
  2099  0099  0080               	movwf	0
  2100  009A  0800               	movf	0,w
  2101  009B  1D03               	btfss	3,2
  2102  009C  289E               	goto	u1141
  2103  009D  289F               	goto	u1140
  2104  009E                     u1141:	
  2105  009E  288A               	goto	l1725
  2106  009F                     u1140:	
  2107  009F                     l831:	
  2108  009F  0008               	return
  2109  00A0                     __end_of_strcat:	
  2110                           
  2111                           	psect	text2
  2112  0FDA                     __ptext2:	
  2113 ;; *************** function _lcd_msg *****************
  2114 ;; Defined at:
  2115 ;;		line 52 in file "PANTALLALCD.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  c               2    3[COMMON] PTR unsigned char 
  2118 ;;		 -> STR_9(7), STR_8(6), STR_7(3), STR_6(17), 
  2119 ;;		 -> STR_5(2), STR_4(5), STR_3(5), STR_2(2), 
  2120 ;;		 -> STR_1(17), SONICOU_CHAR(5), ADCA_CHARA(5), CONTU_CHAR(5), 
  2121 ;;		 -> decT_char(5), CONTLUZA_CHAR(5), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         2       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0
  2136 ;;      Totals:         2       0       0       0       0
  2137 ;;Total ram usage:        2 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    2
  2140 ;; This function calls:
  2141 ;;		_lcd_dwr
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _lcd_msg
  2149  0FDA                     _lcd_msg:	
  2150  0FDA                     l1733:	
  2151                           ;incstack = 0
  2152                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2153                           
  2154                           
  2155                           ;PANTALLALCD.c: 53:     while(*c != 0)
  2156  0FDA  2FEF               	goto	l1739
  2157  0FDB                     l1735:	
  2158                           
  2159                           ;PANTALLALCD.c: 54:         lcd_dwr(*c++);
  2160  0FDB  0874               	movf	lcd_msg@c+1,w
  2161  0FDC  00FF               	movwf	btemp+1
  2162  0FDD  0873               	movf	lcd_msg@c,w
  2163  0FDE  0084               	movwf	4
  2164  0FDF  120A  118A  2003  120A  158A  	fcall	stringtab
  2165  0FE4  120A  118A  203C  120A  158A  	fcall	_lcd_dwr
  2166  0FE9                     l1737:	
  2167  0FE9  3001               	movlw	1
  2168  0FEA  07F3               	addwf	lcd_msg@c,f
  2169  0FEB  1803               	skipnc
  2170  0FEC  0AF4               	incf	lcd_msg@c+1,f
  2171  0FED  3000               	movlw	0
  2172  0FEE  07F4               	addwf	lcd_msg@c+1,f
  2173  0FEF                     l1739:	
  2174                           
  2175                           ;PANTALLALCD.c: 53:     while(*c != 0)
  2176  0FEF  0874               	movf	lcd_msg@c+1,w
  2177  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  2179  0FF2  00FF               	movwf	btemp+1
  2180  0FF3  0873               	movf	lcd_msg@c,w
  2181  0FF4  0084               	movwf	4
  2182  0FF5  120A  118A  2003  120A  158A  	fcall	stringtab
  2183  0FFA  3A00               	xorlw	0
  2184  0FFB  1D03               	skipz
  2185  0FFC  2FFE               	goto	u1161
  2186  0FFD  2FFF               	goto	u1160
  2187  0FFE                     u1161:	
  2188  0FFE  2FDB               	goto	l1735
  2189  0FFF                     u1160:	
  2190  0FFF                     l195:	
  2191  0FFF  0008               	return
  2192  1000                     __end_of_lcd_msg:	
  2193                           
  2194                           	psect	text3
  2195  003C                     __ptext3:	
  2196 ;; *************** function _lcd_dwr *****************
  2197 ;; Defined at:
  2198 ;;		line 43 in file "PANTALLALCD.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  x               1    wreg     unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  x               1    2[COMMON] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;                  1    wreg      void 
  2205 ;; Registers used:
  2206 ;;		wreg, status,2, status,0, pclath, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2212 ;;      Params:         0       0       0       0       0
  2213 ;;      Locals:         1       0       0       0       0
  2214 ;;      Temps:          0       0       0       0       0
  2215 ;;      Totals:         1       0       0       0       0
  2216 ;;Total ram usage:        1 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    1
  2219 ;; This function calls:
  2220 ;;		_lcd_lat
  2221 ;;		_lcd_ready
  2222 ;; This function is called by:
  2223 ;;		_lcd_msg
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _lcd_dwr
  2229  003C                     _lcd_dwr:	
  2230                           
  2231                           ;incstack = 0
  2232                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
  2233                           ;lcd_dwr@x stored from wreg
  2234  003C  00F2               	movwf	lcd_dwr@x
  2235  003D                     l1527:	
  2236                           
  2237                           ;PANTALLALCD.c: 44:     lcd_ready();
  2238  003D  120A  118A  204E  120A  118A  	fcall	_lcd_ready
  2239  0042                     l1529:	
  2240                           
  2241                           ;PANTALLALCD.c: 45:     PORTB = x;
  2242  0042  0872               	movf	lcd_dwr@x,w
  2243  0043  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0044  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0045  0086               	movwf	6	;volatile
  2246  0046                     l1531:	
  2247                           
  2248                           ;PANTALLALCD.c: 46:     RD5 = 1;
  2249  0046  1688               	bsf	8,5	;volatile
  2250  0047                     l1533:	
  2251                           
  2252                           ;PANTALLALCD.c: 47:     RD6 = 0;
  2253  0047  1308               	bcf	8,6	;volatile
  2254  0048                     l1535:	
  2255                           
  2256                           ;PANTALLALCD.c: 48:     lcd_lat();
  2257  0048  120A  158A  275F  120A  118A  	fcall	_lcd_lat
  2258  004D                     l189:	
  2259  004D  0008               	return
  2260  004E                     __end_of_lcd_dwr:	
  2261                           
  2262                           	psect	text4
  2263  0FB4                     __ptext4:	
  2264 ;; *************** function _itoa *****************
  2265 ;; Defined at:
  2266 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  buf             1    wreg     PTR unsigned char 
  2269 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2270 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2271 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2272 ;;  val             2    4[BANK0 ] int 
  2273 ;;  base            2    6[BANK0 ] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2276 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2277 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2278 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2279 ;;  cp              1    0        PTR unsigned char 
  2280 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2281 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2282 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      PTR unsigned char 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       4       0       0       0
  2293 ;;      Locals:         0       2       0       0       0
  2294 ;;      Temps:          1       0       0       0       0
  2295 ;;      Totals:         1       6       0       0       0
  2296 ;;Total ram usage:        7 bytes
  2297 ;; Hardware stack levels used:    1
  2298 ;; Hardware stack levels required when called:    2
  2299 ;; This function calls:
  2300 ;;		_utoa
  2301 ;; This function is called by:
  2302 ;;		_main
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           
  2307                           ;psect for function _itoa
  2308  0FB4                     _itoa:	
  2309                           
  2310                           ;incstack = 0
  2311                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2312                           ;itoa@buf stored from wreg
  2313  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2314  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2315  0FB6  00DD               	movwf	itoa@buf
  2316  0FB7                     l1705:	
  2317  0FB7                     l1707:	
  2318  0FB7  1FD9               	btfss	itoa@val+1,7
  2319  0FB8  2FBA               	goto	u1121
  2320  0FB9  2FBB               	goto	u1120
  2321  0FBA                     u1121:	
  2322  0FBA  2FCB               	goto	l1715
  2323  0FBB                     u1120:	
  2324  0FBB                     l1709:	
  2325  0FBB  302D               	movlw	45
  2326  0FBC  00FD               	movwf	??_itoa
  2327  0FBD  085D               	movf	itoa@buf,w
  2328  0FBE  0084               	movwf	4
  2329  0FBF  087D               	movf	??_itoa,w
  2330  0FC0  1383               	bcf	3,7	;select IRP bank0
  2331  0FC1  0080               	movwf	0
  2332  0FC2                     l1711:	
  2333  0FC2  3001               	movlw	1
  2334  0FC3  00FD               	movwf	??_itoa
  2335  0FC4  087D               	movf	??_itoa,w
  2336  0FC5  07DD               	addwf	itoa@buf,f
  2337  0FC6                     l1713:	
  2338  0FC6  09D8               	comf	itoa@val,f
  2339  0FC7  09D9               	comf	itoa@val+1,f
  2340  0FC8  0AD8               	incf	itoa@val,f
  2341  0FC9  1903               	skipnz
  2342  0FCA  0AD9               	incf	itoa@val+1,f
  2343  0FCB                     l1715:	
  2344  0FCB  0859               	movf	itoa@val+1,w
  2345  0FCC  00F9               	movwf	utoa@val+1
  2346  0FCD  0858               	movf	itoa@val,w
  2347  0FCE  00F8               	movwf	utoa@val
  2348  0FCF  085B               	movf	itoa@base+1,w
  2349  0FD0  00FB               	movwf	utoa@base+1
  2350  0FD1  085A               	movf	itoa@base,w
  2351  0FD2  00FA               	movwf	utoa@base
  2352  0FD3  085D               	movf	itoa@buf,w
  2353  0FD4  120A  118A  230D  120A  158A  	fcall	_utoa
  2354  0FD9                     l814:	
  2355  0FD9  0008               	return
  2356  0FDA                     __end_of_itoa:	
  2357                           
  2358                           	psect	text5
  2359  030D                     __ptext5:	
  2360 ;; *************** function _utoa *****************
  2361 ;; Defined at:
  2362 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;  buf             1    wreg     PTR unsigned char 
  2365 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2366 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2367 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2368 ;;  val             2    8[COMMON] unsigned int 
  2369 ;;  base            2   10[COMMON] int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2372 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2373 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2374 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2375 ;;  v               2    0[BANK0 ] unsigned int 
  2376 ;;  c               1    2[BANK0 ] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      PTR unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         4       0       0       0       0
  2387 ;;      Locals:         0       4       0       0       0
  2388 ;;      Temps:          1       0       0       0       0
  2389 ;;      Totals:         5       4       0       0       0
  2390 ;;Total ram usage:        9 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		___lwdiv
  2395 ;;		___lwmod
  2396 ;; This function is called by:
  2397 ;;		_itoa
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _utoa
  2403  030D                     _utoa:	
  2404                           
  2405                           ;incstack = 0
  2406                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2407                           ;utoa@buf stored from wreg
  2408  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2409  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2410  030F  00D7               	movwf	utoa@buf
  2411  0310                     l1607:	
  2412  0310  0879               	movf	utoa@val+1,w
  2413  0311  00D5               	movwf	utoa@v+1
  2414  0312  0878               	movf	utoa@val,w
  2415  0313  00D4               	movwf	utoa@v
  2416  0314                     l1609:	
  2417  0314  087B               	movf	utoa@base+1,w
  2418  0315  00F1               	movwf	___lwdiv@divisor+1
  2419  0316  087A               	movf	utoa@base,w
  2420  0317  00F0               	movwf	___lwdiv@divisor
  2421  0318  0855               	movf	utoa@v+1,w
  2422  0319  00F3               	movwf	___lwdiv@dividend+1
  2423  031A  0854               	movf	utoa@v,w
  2424  031B  00F2               	movwf	___lwdiv@dividend
  2425  031C  120A  118A  2140  120A  118A  	fcall	___lwdiv
  2426  0321  0871               	movf	?___lwdiv+1,w
  2427  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0324  00D5               	movwf	utoa@v+1
  2430  0325  0870               	movf	?___lwdiv,w
  2431  0326  00D4               	movwf	utoa@v
  2432  0327                     l1611:	
  2433  0327  3001               	movlw	1
  2434  0328  00FC               	movwf	??_utoa
  2435  0329  087C               	movf	??_utoa,w
  2436  032A  07D7               	addwf	utoa@buf,f
  2437  032B                     l1613:	
  2438  032B  0854               	movf	utoa@v,w
  2439  032C  0455               	iorwf	utoa@v+1,w
  2440  032D  1D03               	btfss	3,2
  2441  032E  2B30               	goto	u1041
  2442  032F  2B31               	goto	u1040
  2443  0330                     u1041:	
  2444  0330  2B14               	goto	l1609
  2445  0331                     u1040:	
  2446  0331                     l1615:	
  2447  0331  0857               	movf	utoa@buf,w
  2448  0332  0084               	movwf	4
  2449  0333  1383               	bcf	3,7	;select IRP bank0
  2450  0334  0180               	clrf	0
  2451  0335                     l1617:	
  2452  0335  3001               	movlw	1
  2453  0336  02D7               	subwf	utoa@buf,f
  2454  0337                     l1619:	
  2455  0337  087B               	movf	utoa@base+1,w
  2456  0338  00F1               	movwf	___lwmod@divisor+1
  2457  0339  087A               	movf	utoa@base,w
  2458  033A  00F0               	movwf	___lwmod@divisor
  2459  033B  0879               	movf	utoa@val+1,w
  2460  033C  00F3               	movwf	___lwmod@dividend+1
  2461  033D  0878               	movf	utoa@val,w
  2462  033E  00F2               	movwf	___lwmod@dividend
  2463  033F  120A  118A  2106  120A  118A  	fcall	___lwmod
  2464  0344  0870               	movf	?___lwmod,w
  2465  0345  00FC               	movwf	??_utoa
  2466  0346  087C               	movf	??_utoa,w
  2467  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0349  00D6               	movwf	utoa@c
  2470  034A                     l1621:	
  2471  034A  087B               	movf	utoa@base+1,w
  2472  034B  00F1               	movwf	___lwdiv@divisor+1
  2473  034C  087A               	movf	utoa@base,w
  2474  034D  00F0               	movwf	___lwdiv@divisor
  2475  034E  0879               	movf	utoa@val+1,w
  2476  034F  00F3               	movwf	___lwdiv@dividend+1
  2477  0350  0878               	movf	utoa@val,w
  2478  0351  00F2               	movwf	___lwdiv@dividend
  2479  0352  120A  118A  2140  120A  118A  	fcall	___lwdiv
  2480  0357  0871               	movf	?___lwdiv+1,w
  2481  0358  00F9               	movwf	utoa@val+1
  2482  0359  0870               	movf	?___lwdiv,w
  2483  035A  00F8               	movwf	utoa@val
  2484  035B                     l1623:	
  2485  035B  300A               	movlw	10
  2486  035C  1283               	bcf	3,5	;RP0=0, select bank0
  2487  035D  1303               	bcf	3,6	;RP1=0, select bank0
  2488  035E  0256               	subwf	utoa@c,w
  2489  035F  1C03               	skipc
  2490  0360  2B62               	goto	u1051
  2491  0361  2B63               	goto	u1050
  2492  0362                     u1051:	
  2493  0362  2B67               	goto	l820
  2494  0363                     u1050:	
  2495  0363                     l1625:	
  2496  0363  3007               	movlw	7
  2497  0364  00FC               	movwf	??_utoa
  2498  0365  087C               	movf	??_utoa,w
  2499  0366  07D6               	addwf	utoa@c,f
  2500  0367                     l820:	
  2501  0367  3030               	movlw	48
  2502  0368  00FC               	movwf	??_utoa
  2503  0369  087C               	movf	??_utoa,w
  2504  036A  07D6               	addwf	utoa@c,f
  2505  036B                     l1627:	
  2506  036B  0856               	movf	utoa@c,w
  2507  036C  00FC               	movwf	??_utoa
  2508  036D  0857               	movf	utoa@buf,w
  2509  036E  0084               	movwf	4
  2510  036F  087C               	movf	??_utoa,w
  2511  0370  1383               	bcf	3,7	;select IRP bank0
  2512  0371  0080               	movwf	0
  2513  0372                     l1629:	
  2514  0372  3001               	movlw	1
  2515  0373  02D7               	subwf	utoa@buf,f
  2516  0374                     l1631:	
  2517  0374  0878               	movf	utoa@val,w
  2518  0375  0479               	iorwf	utoa@val+1,w
  2519  0376  1D03               	btfss	3,2
  2520  0377  2B79               	goto	u1061
  2521  0378  2B7A               	goto	u1060
  2522  0379                     u1061:	
  2523  0379  2B37               	goto	l1619
  2524  037A                     u1060:	
  2525  037A                     l1633:	
  2526                           
  2527                           ;	Return value of _utoa is never used
  2528  037A  3001               	movlw	1
  2529  037B  00FC               	movwf	??_utoa
  2530  037C  087C               	movf	??_utoa,w
  2531  037D  07D7               	addwf	utoa@buf,f
  2532  037E                     l822:	
  2533  037E  0008               	return
  2534  037F                     __end_of_utoa:	
  2535                           
  2536                           	psect	text6
  2537  0106                     __ptext6:	
  2538 ;; *************** function ___lwmod *****************
  2539 ;; Defined at:
  2540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  divisor         2    0[COMMON] unsigned int 
  2543 ;;  dividend        2    2[COMMON] unsigned int 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  counter         1    5[COMMON] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2    0[COMMON] unsigned int 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         4       0       0       0       0
  2556 ;;      Locals:         1       0       0       0       0
  2557 ;;      Temps:          1       0       0       0       0
  2558 ;;      Totals:         6       0       0       0       0
  2559 ;;Total ram usage:        6 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_utoa
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           
  2569                           ;psect for function ___lwmod
  2570  0106                     ___lwmod:	
  2571  0106                     l1493:	
  2572                           ;incstack = 0
  2573                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2574                           
  2575  0106  0870               	movf	___lwmod@divisor,w
  2576  0107  0471               	iorwf	___lwmod@divisor+1,w
  2577  0108  1903               	btfsc	3,2
  2578  0109  290B               	goto	u791
  2579  010A  290C               	goto	u790
  2580  010B                     u791:	
  2581  010B  293B               	goto	l1511
  2582  010C                     u790:	
  2583  010C                     l1495:	
  2584  010C  01F5               	clrf	___lwmod@counter
  2585  010D  0AF5               	incf	___lwmod@counter,f
  2586  010E  291A               	goto	l1501
  2587  010F                     l1497:	
  2588  010F  3001               	movlw	1
  2589  0110                     u805:	
  2590  0110  1003               	clrc
  2591  0111  0DF0               	rlf	___lwmod@divisor,f
  2592  0112  0DF1               	rlf	___lwmod@divisor+1,f
  2593  0113  3EFF               	addlw	-1
  2594  0114  1D03               	skipz
  2595  0115  2910               	goto	u805
  2596  0116                     l1499:	
  2597  0116  3001               	movlw	1
  2598  0117  00F4               	movwf	??___lwmod
  2599  0118  0874               	movf	??___lwmod,w
  2600  0119  07F5               	addwf	___lwmod@counter,f
  2601  011A                     l1501:	
  2602  011A  1FF1               	btfss	___lwmod@divisor+1,7
  2603  011B  291D               	goto	u811
  2604  011C  291E               	goto	u810
  2605  011D                     u811:	
  2606  011D  290F               	goto	l1497
  2607  011E                     u810:	
  2608  011E                     l1503:	
  2609  011E  0871               	movf	___lwmod@divisor+1,w
  2610  011F  0273               	subwf	___lwmod@dividend+1,w
  2611  0120  1D03               	skipz
  2612  0121  2924               	goto	u825
  2613  0122  0870               	movf	___lwmod@divisor,w
  2614  0123  0272               	subwf	___lwmod@dividend,w
  2615  0124                     u825:	
  2616  0124  1C03               	skipc
  2617  0125  2927               	goto	u821
  2618  0126  2928               	goto	u820
  2619  0127                     u821:	
  2620  0127  292E               	goto	l1507
  2621  0128                     u820:	
  2622  0128                     l1505:	
  2623  0128  0870               	movf	___lwmod@divisor,w
  2624  0129  02F2               	subwf	___lwmod@dividend,f
  2625  012A  0871               	movf	___lwmod@divisor+1,w
  2626  012B  1C03               	skipc
  2627  012C  03F3               	decf	___lwmod@dividend+1,f
  2628  012D  02F3               	subwf	___lwmod@dividend+1,f
  2629  012E                     l1507:	
  2630  012E  3001               	movlw	1
  2631  012F                     u835:	
  2632  012F  1003               	clrc
  2633  0130  0CF1               	rrf	___lwmod@divisor+1,f
  2634  0131  0CF0               	rrf	___lwmod@divisor,f
  2635  0132  3EFF               	addlw	-1
  2636  0133  1D03               	skipz
  2637  0134  292F               	goto	u835
  2638  0135                     l1509:	
  2639  0135  3001               	movlw	1
  2640  0136  02F5               	subwf	___lwmod@counter,f
  2641  0137  1D03               	btfss	3,2
  2642  0138  293A               	goto	u841
  2643  0139  293B               	goto	u840
  2644  013A                     u841:	
  2645  013A  291E               	goto	l1503
  2646  013B                     u840:	
  2647  013B                     l1511:	
  2648  013B  0873               	movf	___lwmod@dividend+1,w
  2649  013C  00F1               	movwf	?___lwmod+1
  2650  013D  0872               	movf	___lwmod@dividend,w
  2651  013E  00F0               	movwf	?___lwmod
  2652  013F                     l648:	
  2653  013F  0008               	return
  2654  0140                     __end_of___lwmod:	
  2655                           
  2656                           	psect	text7
  2657  0140                     __ptext7:	
  2658 ;; *************** function ___lwdiv *****************
  2659 ;; Defined at:
  2660 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  divisor         2    0[COMMON] unsigned int 
  2663 ;;  dividend        2    2[COMMON] unsigned int 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  quotient        2    5[COMMON] unsigned int 
  2666 ;;  counter         1    7[COMMON] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  2    0[COMMON] unsigned int 
  2669 ;; Registers used:
  2670 ;;		wreg, status,2, status,0
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2676 ;;      Params:         4       0       0       0       0
  2677 ;;      Locals:         3       0       0       0       0
  2678 ;;      Temps:          1       0       0       0       0
  2679 ;;      Totals:         8       0       0       0       0
  2680 ;;Total ram usage:        8 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_utoa
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function ___lwdiv
  2691  0140                     ___lwdiv:	
  2692  0140                     l1467:	
  2693                           ;incstack = 0
  2694                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2695                           
  2696  0140  01F5               	clrf	___lwdiv@quotient
  2697  0141  01F6               	clrf	___lwdiv@quotient+1
  2698  0142                     l1469:	
  2699  0142  0870               	movf	___lwdiv@divisor,w
  2700  0143  0471               	iorwf	___lwdiv@divisor+1,w
  2701  0144  1903               	btfsc	3,2
  2702  0145  2947               	goto	u721
  2703  0146  2948               	goto	u720
  2704  0147                     u721:	
  2705  0147  297F               	goto	l1489
  2706  0148                     u720:	
  2707  0148                     l1471:	
  2708  0148  01F7               	clrf	___lwdiv@counter
  2709  0149  0AF7               	incf	___lwdiv@counter,f
  2710  014A  2956               	goto	l1477
  2711  014B                     l1473:	
  2712  014B  3001               	movlw	1
  2713  014C                     u735:	
  2714  014C  1003               	clrc
  2715  014D  0DF0               	rlf	___lwdiv@divisor,f
  2716  014E  0DF1               	rlf	___lwdiv@divisor+1,f
  2717  014F  3EFF               	addlw	-1
  2718  0150  1D03               	skipz
  2719  0151  294C               	goto	u735
  2720  0152                     l1475:	
  2721  0152  3001               	movlw	1
  2722  0153  00F4               	movwf	??___lwdiv
  2723  0154  0874               	movf	??___lwdiv,w
  2724  0155  07F7               	addwf	___lwdiv@counter,f
  2725  0156                     l1477:	
  2726  0156  1FF1               	btfss	___lwdiv@divisor+1,7
  2727  0157  2959               	goto	u741
  2728  0158  295A               	goto	u740
  2729  0159                     u741:	
  2730  0159  294B               	goto	l1473
  2731  015A                     u740:	
  2732  015A                     l1479:	
  2733  015A  3001               	movlw	1
  2734  015B                     u755:	
  2735  015B  1003               	clrc
  2736  015C  0DF5               	rlf	___lwdiv@quotient,f
  2737  015D  0DF6               	rlf	___lwdiv@quotient+1,f
  2738  015E  3EFF               	addlw	-1
  2739  015F  1D03               	skipz
  2740  0160  295B               	goto	u755
  2741  0161  0871               	movf	___lwdiv@divisor+1,w
  2742  0162  0273               	subwf	___lwdiv@dividend+1,w
  2743  0163  1D03               	skipz
  2744  0164  2967               	goto	u765
  2745  0165  0870               	movf	___lwdiv@divisor,w
  2746  0166  0272               	subwf	___lwdiv@dividend,w
  2747  0167                     u765:	
  2748  0167  1C03               	skipc
  2749  0168  296A               	goto	u761
  2750  0169  296B               	goto	u760
  2751  016A                     u761:	
  2752  016A  2972               	goto	l1485
  2753  016B                     u760:	
  2754  016B                     l1481:	
  2755  016B  0870               	movf	___lwdiv@divisor,w
  2756  016C  02F2               	subwf	___lwdiv@dividend,f
  2757  016D  0871               	movf	___lwdiv@divisor+1,w
  2758  016E  1C03               	skipc
  2759  016F  03F3               	decf	___lwdiv@dividend+1,f
  2760  0170  02F3               	subwf	___lwdiv@dividend+1,f
  2761  0171                     l1483:	
  2762  0171  1475               	bsf	___lwdiv@quotient,0
  2763  0172                     l1485:	
  2764  0172  3001               	movlw	1
  2765  0173                     u775:	
  2766  0173  1003               	clrc
  2767  0174  0CF1               	rrf	___lwdiv@divisor+1,f
  2768  0175  0CF0               	rrf	___lwdiv@divisor,f
  2769  0176  3EFF               	addlw	-1
  2770  0177  1D03               	skipz
  2771  0178  2973               	goto	u775
  2772  0179                     l1487:	
  2773  0179  3001               	movlw	1
  2774  017A  02F7               	subwf	___lwdiv@counter,f
  2775  017B  1D03               	btfss	3,2
  2776  017C  297E               	goto	u781
  2777  017D  297F               	goto	u780
  2778  017E                     u781:	
  2779  017E  295A               	goto	l1479
  2780  017F                     u780:	
  2781  017F                     l1489:	
  2782  017F  0876               	movf	___lwdiv@quotient+1,w
  2783  0180  00F1               	movwf	?___lwdiv+1
  2784  0181  0875               	movf	___lwdiv@quotient,w
  2785  0182  00F0               	movwf	?___lwdiv
  2786  0183                     l638:	
  2787  0183  0008               	return
  2788  0184                     __end_of___lwdiv:	
  2789                           
  2790                           	psect	text8
  2791  0F95                     __ptext8:	
  2792 ;; *************** function _inicializacion *****************
  2793 ;; Defined at:
  2794 ;;		line 58 in file "PANTALLALCD.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    2
  2815 ;; This function calls:
  2816 ;;		_lcd_cmd
  2817 ;; This function is called by:
  2818 ;;		_main
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           
  2823                           ;psect for function _inicializacion
  2824  0F95                     _inicializacion:	
  2825  0F95                     l1657:	
  2826                           ;incstack = 0
  2827                           ; Regs used in _inicializacion: [wreg+status,2+status,0+pclath+cstack]
  2828                           
  2829                           
  2830                           ;PANTALLALCD.c: 59:     lcd_cmd(0x38);
  2831  0F95  3038               	movlw	56
  2832  0F96  120A  158A  276E  120A  158A  	fcall	_lcd_cmd
  2833                           
  2834                           ;PANTALLALCD.c: 60:     lcd_cmd(0x0C);
  2835  0F9B  300C               	movlw	12
  2836  0F9C  120A  158A  276E  120A  158A  	fcall	_lcd_cmd
  2837                           
  2838                           ;PANTALLALCD.c: 61:     lcd_cmd(0x01);
  2839  0FA1  3001               	movlw	1
  2840  0FA2  120A  158A  276E  120A  158A  	fcall	_lcd_cmd
  2841                           
  2842                           ;PANTALLALCD.c: 62:     lcd_cmd(0x06);
  2843  0FA7  3006               	movlw	6
  2844  0FA8  120A  158A  276E  120A  158A  	fcall	_lcd_cmd
  2845                           
  2846                           ;PANTALLALCD.c: 63:     lcd_cmd(0x80);
  2847  0FAD  3080               	movlw	128
  2848  0FAE  120A  158A  276E  120A  158A  	fcall	_lcd_cmd
  2849  0FB3                     l198:	
  2850  0FB3  0008               	return
  2851  0FB4                     __end_of_inicializacion:	
  2852                           
  2853                           	psect	text9
  2854  0F6E                     __ptext9:	
  2855 ;; *************** function _lcd_cmd *****************
  2856 ;; Defined at:
  2857 ;;		line 10 in file "PANTALLALCD.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  x               1    wreg     unsigned char 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  x               1    2[COMMON] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       0       0       0       0
  2872 ;;      Locals:         1       0       0       0       0
  2873 ;;      Temps:          0       0       0       0       0
  2874 ;;      Totals:         1       0       0       0       0
  2875 ;;Total ram usage:        1 bytes
  2876 ;; Hardware stack levels used:    1
  2877 ;; Hardware stack levels required when called:    1
  2878 ;; This function calls:
  2879 ;;		_lcd_lat
  2880 ;;		_lcd_ready
  2881 ;; This function is called by:
  2882 ;;		_main
  2883 ;;		_inicializacion
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           
  2888                           ;psect for function _lcd_cmd
  2889  0F6E                     _lcd_cmd:	
  2890                           
  2891                           ;incstack = 0
  2892                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2893                           ;lcd_cmd@x stored from wreg
  2894  0F6E  00F2               	movwf	lcd_cmd@x
  2895  0F6F                     l1515:	
  2896                           
  2897                           ;PANTALLALCD.c: 11:     lcd_ready();
  2898  0F6F  120A  118A  204E  120A  158A  	fcall	_lcd_ready
  2899  0F74                     l1517:	
  2900                           
  2901                           ;PANTALLALCD.c: 12:     PORTB = x;
  2902  0F74  0872               	movf	lcd_cmd@x,w
  2903  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0F77  0086               	movwf	6	;volatile
  2906  0F78                     l1519:	
  2907                           
  2908                           ;PANTALLALCD.c: 13:     RD5 = 0;
  2909  0F78  1288               	bcf	8,5	;volatile
  2910  0F79                     l1521:	
  2911                           
  2912                           ;PANTALLALCD.c: 14:     RD6 = 0;
  2913  0F79  1308               	bcf	8,6	;volatile
  2914  0F7A                     l1523:	
  2915                           
  2916                           ;PANTALLALCD.c: 15:     lcd_lat();
  2917  0F7A  120A  158A  275F  120A  158A  	fcall	_lcd_lat
  2918  0F7F                     l178:	
  2919  0F7F  0008               	return
  2920  0F80                     __end_of_lcd_cmd:	
  2921                           
  2922                           	psect	text10
  2923  004E                     __ptext10:	
  2924 ;; *************** function _lcd_ready *****************
  2925 ;; Defined at:
  2926 ;;		line 25 in file "PANTALLALCD.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         0       0       0       0       0
  2941 ;;      Locals:         0       0       0       0       0
  2942 ;;      Temps:          2       0       0       0       0
  2943 ;;      Totals:         2       0       0       0       0
  2944 ;;Total ram usage:        2 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_lcd_cmd
  2950 ;;		_lcd_dwr
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           
  2955                           ;psect for function _lcd_ready
  2956  004E                     _lcd_ready:	
  2957  004E                     l1439:	
  2958                           ;incstack = 0
  2959                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
  2960                           
  2961                           
  2962                           ;PANTALLALCD.c: 26:     PORTB = 0xFF;
  2963  004E  30FF               	movlw	255
  2964  004F  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0050  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0051  0086               	movwf	6	;volatile
  2967  0052                     l1441:	
  2968                           
  2969                           ;PANTALLALCD.c: 27:     PORTB &= 0x80;
  2970  0052  3080               	movlw	128
  2971  0053  00F0               	movwf	??_lcd_ready
  2972  0054  0870               	movf	??_lcd_ready,w
  2973  0055  0586               	andwf	6,f	;volatile
  2974  0056                     l1443:	
  2975                           
  2976                           ;PANTALLALCD.c: 28:     RD5 = 0;
  2977  0056  1288               	bcf	8,5	;volatile
  2978  0057                     l1445:	
  2979                           
  2980                           ;PANTALLALCD.c: 29:     RD6 = 1;
  2981  0057  1708               	bsf	8,6	;volatile
  2982  0058                     l1447:	
  2983                           
  2984                           ;PANTALLALCD.c: 30:     RD7 = 0;
  2985  0058  1388               	bcf	8,7	;volatile
  2986  0059                     l1449:	
  2987                           
  2988                           ;PANTALLALCD.c: 31:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2989  0059  304E               	movlw	78
  2990  005A  00F1               	movwf	??_lcd_ready+1
  2991  005B  30EB               	movlw	235
  2992  005C  00F0               	movwf	??_lcd_ready
  2993  005D                     u1467:	
  2994  005D  0BF0               	decfsz	??_lcd_ready,f
  2995  005E  285D               	goto	u1467
  2996  005F  0BF1               	decfsz	??_lcd_ready+1,f
  2997  0060  285D               	goto	u1467
  2998  0061                     l1451:	
  2999                           
  3000                           ;PANTALLALCD.c: 32:     RD7 = 1;
  3001  0061  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0062  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0063  1788               	bsf	8,7	;volatile
  3004                           
  3005                           ;PANTALLALCD.c: 33:     if (PORTB == 0x80){
  3006  0064  3080               	movlw	128
  3007  0065  0606               	xorwf	6,w	;volatile
  3008  0066  1D03               	btfss	3,2
  3009  0067  2869               	goto	u711
  3010  0068  286A               	goto	u710
  3011  0069                     u711:	
  3012  0069  2876               	goto	l186
  3013  006A                     u710:	
  3014  006A                     l1453:	
  3015                           
  3016                           ;PANTALLALCD.c: 34:     RD7 = 0;
  3017  006A  1388               	bcf	8,7	;volatile
  3018  006B                     l1455:	
  3019                           
  3020                           ;PANTALLALCD.c: 35:     _delay((unsigned long)((30)*(8000000/4000.0)));
  3021  006B  304E               	movlw	78
  3022  006C  00F1               	movwf	??_lcd_ready+1
  3023  006D  30EB               	movlw	235
  3024  006E  00F0               	movwf	??_lcd_ready
  3025  006F                     u1477:	
  3026  006F  0BF0               	decfsz	??_lcd_ready,f
  3027  0070  286F               	goto	u1477
  3028  0071  0BF1               	decfsz	??_lcd_ready+1,f
  3029  0072  286F               	goto	u1477
  3030  0073                     l1457:	
  3031                           
  3032                           ;PANTALLALCD.c: 36:     RD7 = 1;
  3033  0073  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0074  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0075  1788               	bsf	8,7	;volatile
  3036  0076                     l186:	
  3037                           ;PANTALLALCD.c: 37:     }
  3038                           
  3039  0076  0008               	return
  3040  0077                     __end_of_lcd_ready:	
  3041                           
  3042                           	psect	text11
  3043  0F5F                     __ptext11:	
  3044 ;; *************** function _lcd_lat *****************
  3045 ;; Defined at:
  3046 ;;		line 19 in file "PANTALLALCD.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		wreg
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3060 ;;      Params:         0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0
  3062 ;;      Temps:          2       0       0       0       0
  3063 ;;      Totals:         2       0       0       0       0
  3064 ;;Total ram usage:        2 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_lcd_cmd
  3070 ;;		_lcd_dwr
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           
  3075                           ;psect for function _lcd_lat
  3076  0F5F                     _lcd_lat:	
  3077  0F5F                     l1459:	
  3078                           ;incstack = 0
  3079                           ; Regs used in _lcd_lat: [wreg]
  3080                           
  3081                           
  3082                           ;PANTALLALCD.c: 20:     RD7 = 1;
  3083  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  3084  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  3085  0F61  1788               	bsf	8,7	;volatile
  3086  0F62                     l1461:	
  3087                           
  3088                           ;PANTALLALCD.c: 21:    _delay((unsigned long)((30)*(8000000/4000.0)));
  3089  0F62  304E               	movlw	78
  3090  0F63  00F1               	movwf	??_lcd_lat+1
  3091  0F64  30EB               	movlw	235
  3092  0F65  00F0               	movwf	??_lcd_lat
  3093  0F66                     u1487:	
  3094  0F66  0BF0               	decfsz	??_lcd_lat,f
  3095  0F67  2F66               	goto	u1487
  3096  0F68  0BF1               	decfsz	??_lcd_lat+1,f
  3097  0F69  2F66               	goto	u1487
  3098  0F6A                     l1463:	
  3099                           
  3100                           ;PANTALLALCD.c: 22:    RD7 = 0;
  3101  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0F6C  1388               	bcf	8,7	;volatile
  3104  0F6D                     l181:	
  3105  0F6D  0008               	return
  3106  0F6E                     __end_of_lcd_lat:	
  3107                           
  3108                           	psect	text12
  3109  0184                     __ptext12:	
  3110 ;; *************** function ___awmod *****************
  3111 ;; Defined at:
  3112 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  divisor         2    0[COMMON] int 
  3115 ;;  dividend        2    2[COMMON] int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  sign            1    6[COMMON] unsigned char 
  3118 ;;  counter         1    5[COMMON] unsigned char 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  2    0[COMMON] int 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3128 ;;      Params:         4       0       0       0       0
  3129 ;;      Locals:         2       0       0       0       0
  3130 ;;      Temps:          1       0       0       0       0
  3131 ;;      Totals:         7       0       0       0       0
  3132 ;;Total ram usage:        7 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; This function calls:
  3135 ;;		Nothing
  3136 ;; This function is called by:
  3137 ;;		_main
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           
  3142                           ;psect for function ___awmod
  3143  0184                     ___awmod:	
  3144  0184                     l1785:	
  3145                           ;incstack = 0
  3146                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3147                           
  3148  0184  01F6               	clrf	___awmod@sign
  3149  0185                     l1787:	
  3150  0185  1FF3               	btfss	___awmod@dividend+1,7
  3151  0186  2988               	goto	u1271
  3152  0187  2989               	goto	u1270
  3153  0188                     u1271:	
  3154  0188  2990               	goto	l1793
  3155  0189                     u1270:	
  3156  0189                     l1789:	
  3157  0189  09F2               	comf	___awmod@dividend,f
  3158  018A  09F3               	comf	___awmod@dividend+1,f
  3159  018B  0AF2               	incf	___awmod@dividend,f
  3160  018C  1903               	skipnz
  3161  018D  0AF3               	incf	___awmod@dividend+1,f
  3162  018E                     l1791:	
  3163  018E  01F6               	clrf	___awmod@sign
  3164  018F  0AF6               	incf	___awmod@sign,f
  3165  0190                     l1793:	
  3166  0190  1FF1               	btfss	___awmod@divisor+1,7
  3167  0191  2993               	goto	u1281
  3168  0192  2994               	goto	u1280
  3169  0193                     u1281:	
  3170  0193  2999               	goto	l1797
  3171  0194                     u1280:	
  3172  0194                     l1795:	
  3173  0194  09F0               	comf	___awmod@divisor,f
  3174  0195  09F1               	comf	___awmod@divisor+1,f
  3175  0196  0AF0               	incf	___awmod@divisor,f
  3176  0197  1903               	skipnz
  3177  0198  0AF1               	incf	___awmod@divisor+1,f
  3178  0199                     l1797:	
  3179  0199  0870               	movf	___awmod@divisor,w
  3180  019A  0471               	iorwf	___awmod@divisor+1,w
  3181  019B  1903               	btfsc	3,2
  3182  019C  299E               	goto	u1291
  3183  019D  299F               	goto	u1290
  3184  019E                     u1291:	
  3185  019E  29CE               	goto	l1815
  3186  019F                     u1290:	
  3187  019F                     l1799:	
  3188  019F  01F5               	clrf	___awmod@counter
  3189  01A0  0AF5               	incf	___awmod@counter,f
  3190  01A1  29AD               	goto	l1805
  3191  01A2                     l1801:	
  3192  01A2  3001               	movlw	1
  3193  01A3                     u1305:	
  3194  01A3  1003               	clrc
  3195  01A4  0DF0               	rlf	___awmod@divisor,f
  3196  01A5  0DF1               	rlf	___awmod@divisor+1,f
  3197  01A6  3EFF               	addlw	-1
  3198  01A7  1D03               	skipz
  3199  01A8  29A3               	goto	u1305
  3200  01A9                     l1803:	
  3201  01A9  3001               	movlw	1
  3202  01AA  00F4               	movwf	??___awmod
  3203  01AB  0874               	movf	??___awmod,w
  3204  01AC  07F5               	addwf	___awmod@counter,f
  3205  01AD                     l1805:	
  3206  01AD  1FF1               	btfss	___awmod@divisor+1,7
  3207  01AE  29B0               	goto	u1311
  3208  01AF  29B1               	goto	u1310
  3209  01B0                     u1311:	
  3210  01B0  29A2               	goto	l1801
  3211  01B1                     u1310:	
  3212  01B1                     l1807:	
  3213  01B1  0871               	movf	___awmod@divisor+1,w
  3214  01B2  0273               	subwf	___awmod@dividend+1,w
  3215  01B3  1D03               	skipz
  3216  01B4  29B7               	goto	u1325
  3217  01B5  0870               	movf	___awmod@divisor,w
  3218  01B6  0272               	subwf	___awmod@dividend,w
  3219  01B7                     u1325:	
  3220  01B7  1C03               	skipc
  3221  01B8  29BA               	goto	u1321
  3222  01B9  29BB               	goto	u1320
  3223  01BA                     u1321:	
  3224  01BA  29C1               	goto	l1811
  3225  01BB                     u1320:	
  3226  01BB                     l1809:	
  3227  01BB  0870               	movf	___awmod@divisor,w
  3228  01BC  02F2               	subwf	___awmod@dividend,f
  3229  01BD  0871               	movf	___awmod@divisor+1,w
  3230  01BE  1C03               	skipc
  3231  01BF  03F3               	decf	___awmod@dividend+1,f
  3232  01C0  02F3               	subwf	___awmod@dividend+1,f
  3233  01C1                     l1811:	
  3234  01C1  3001               	movlw	1
  3235  01C2                     u1335:	
  3236  01C2  1003               	clrc
  3237  01C3  0CF1               	rrf	___awmod@divisor+1,f
  3238  01C4  0CF0               	rrf	___awmod@divisor,f
  3239  01C5  3EFF               	addlw	-1
  3240  01C6  1D03               	skipz
  3241  01C7  29C2               	goto	u1335
  3242  01C8                     l1813:	
  3243  01C8  3001               	movlw	1
  3244  01C9  02F5               	subwf	___awmod@counter,f
  3245  01CA  1D03               	btfss	3,2
  3246  01CB  29CD               	goto	u1341
  3247  01CC  29CE               	goto	u1340
  3248  01CD                     u1341:	
  3249  01CD  29B1               	goto	l1807
  3250  01CE                     u1340:	
  3251  01CE                     l1815:	
  3252  01CE  0876               	movf	___awmod@sign,w
  3253  01CF  1903               	btfsc	3,2
  3254  01D0  29D2               	goto	u1351
  3255  01D1  29D3               	goto	u1350
  3256  01D2                     u1351:	
  3257  01D2  29D8               	goto	l1819
  3258  01D3                     u1350:	
  3259  01D3                     l1817:	
  3260  01D3  09F2               	comf	___awmod@dividend,f
  3261  01D4  09F3               	comf	___awmod@dividend+1,f
  3262  01D5  0AF2               	incf	___awmod@dividend,f
  3263  01D6  1903               	skipnz
  3264  01D7  0AF3               	incf	___awmod@dividend+1,f
  3265  01D8                     l1819:	
  3266  01D8  0873               	movf	___awmod@dividend+1,w
  3267  01D9  00F1               	movwf	?___awmod+1
  3268  01DA  0872               	movf	___awmod@dividend,w
  3269  01DB  00F0               	movwf	?___awmod
  3270  01DC                     l532:	
  3271  01DC  0008               	return
  3272  01DD                     __end_of___awmod:	
  3273                           
  3274                           	psect	text13
  3275  02A6                     __ptext13:	
  3276 ;; *************** function ___awdiv *****************
  3277 ;; Defined at:
  3278 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  divisor         2    0[COMMON] int 
  3281 ;;  dividend        2    2[COMMON] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  quotient        2    7[COMMON] int 
  3284 ;;  sign            1    6[COMMON] unsigned char 
  3285 ;;  counter         1    5[COMMON] unsigned char 
  3286 ;; Return value:  Size  Location     Type
  3287 ;;                  2    0[COMMON] int 
  3288 ;; Registers used:
  3289 ;;		wreg, status,2, status,0
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3295 ;;      Params:         4       0       0       0       0
  3296 ;;      Locals:         4       0       0       0       0
  3297 ;;      Temps:          1       0       0       0       0
  3298 ;;      Totals:         9       0       0       0       0
  3299 ;;Total ram usage:        9 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           
  3309                           ;psect for function ___awdiv
  3310  02A6                     ___awdiv:	
  3311  02A6                     l1741:	
  3312                           ;incstack = 0
  3313                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3314                           
  3315  02A6  01F6               	clrf	___awdiv@sign
  3316  02A7                     l1743:	
  3317  02A7  1FF1               	btfss	___awdiv@divisor+1,7
  3318  02A8  2AAA               	goto	u1171
  3319  02A9  2AAB               	goto	u1170
  3320  02AA                     u1171:	
  3321  02AA  2AB2               	goto	l1749
  3322  02AB                     u1170:	
  3323  02AB                     l1745:	
  3324  02AB  09F0               	comf	___awdiv@divisor,f
  3325  02AC  09F1               	comf	___awdiv@divisor+1,f
  3326  02AD  0AF0               	incf	___awdiv@divisor,f
  3327  02AE  1903               	skipnz
  3328  02AF  0AF1               	incf	___awdiv@divisor+1,f
  3329  02B0                     l1747:	
  3330  02B0  01F6               	clrf	___awdiv@sign
  3331  02B1  0AF6               	incf	___awdiv@sign,f
  3332  02B2                     l1749:	
  3333  02B2  1FF3               	btfss	___awdiv@dividend+1,7
  3334  02B3  2AB5               	goto	u1181
  3335  02B4  2AB6               	goto	u1180
  3336  02B5                     u1181:	
  3337  02B5  2ABF               	goto	l1755
  3338  02B6                     u1180:	
  3339  02B6                     l1751:	
  3340  02B6  09F2               	comf	___awdiv@dividend,f
  3341  02B7  09F3               	comf	___awdiv@dividend+1,f
  3342  02B8  0AF2               	incf	___awdiv@dividend,f
  3343  02B9  1903               	skipnz
  3344  02BA  0AF3               	incf	___awdiv@dividend+1,f
  3345  02BB                     l1753:	
  3346  02BB  3001               	movlw	1
  3347  02BC  00F4               	movwf	??___awdiv
  3348  02BD  0874               	movf	??___awdiv,w
  3349  02BE  06F6               	xorwf	___awdiv@sign,f
  3350  02BF                     l1755:	
  3351  02BF  01F7               	clrf	___awdiv@quotient
  3352  02C0  01F8               	clrf	___awdiv@quotient+1
  3353  02C1                     l1757:	
  3354  02C1  0870               	movf	___awdiv@divisor,w
  3355  02C2  0471               	iorwf	___awdiv@divisor+1,w
  3356  02C3  1903               	btfsc	3,2
  3357  02C4  2AC6               	goto	u1191
  3358  02C5  2AC7               	goto	u1190
  3359  02C6                     u1191:	
  3360  02C6  2AFE               	goto	l1777
  3361  02C7                     u1190:	
  3362  02C7                     l1759:	
  3363  02C7  01F5               	clrf	___awdiv@counter
  3364  02C8  0AF5               	incf	___awdiv@counter,f
  3365  02C9  2AD5               	goto	l1765
  3366  02CA                     l1761:	
  3367  02CA  3001               	movlw	1
  3368  02CB                     u1205:	
  3369  02CB  1003               	clrc
  3370  02CC  0DF0               	rlf	___awdiv@divisor,f
  3371  02CD  0DF1               	rlf	___awdiv@divisor+1,f
  3372  02CE  3EFF               	addlw	-1
  3373  02CF  1D03               	skipz
  3374  02D0  2ACB               	goto	u1205
  3375  02D1                     l1763:	
  3376  02D1  3001               	movlw	1
  3377  02D2  00F4               	movwf	??___awdiv
  3378  02D3  0874               	movf	??___awdiv,w
  3379  02D4  07F5               	addwf	___awdiv@counter,f
  3380  02D5                     l1765:	
  3381  02D5  1FF1               	btfss	___awdiv@divisor+1,7
  3382  02D6  2AD8               	goto	u1211
  3383  02D7  2AD9               	goto	u1210
  3384  02D8                     u1211:	
  3385  02D8  2ACA               	goto	l1761
  3386  02D9                     u1210:	
  3387  02D9                     l1767:	
  3388  02D9  3001               	movlw	1
  3389  02DA                     u1225:	
  3390  02DA  1003               	clrc
  3391  02DB  0DF7               	rlf	___awdiv@quotient,f
  3392  02DC  0DF8               	rlf	___awdiv@quotient+1,f
  3393  02DD  3EFF               	addlw	-1
  3394  02DE  1D03               	skipz
  3395  02DF  2ADA               	goto	u1225
  3396  02E0  0871               	movf	___awdiv@divisor+1,w
  3397  02E1  0273               	subwf	___awdiv@dividend+1,w
  3398  02E2  1D03               	skipz
  3399  02E3  2AE6               	goto	u1235
  3400  02E4  0870               	movf	___awdiv@divisor,w
  3401  02E5  0272               	subwf	___awdiv@dividend,w
  3402  02E6                     u1235:	
  3403  02E6  1C03               	skipc
  3404  02E7  2AE9               	goto	u1231
  3405  02E8  2AEA               	goto	u1230
  3406  02E9                     u1231:	
  3407  02E9  2AF1               	goto	l1773
  3408  02EA                     u1230:	
  3409  02EA                     l1769:	
  3410  02EA  0870               	movf	___awdiv@divisor,w
  3411  02EB  02F2               	subwf	___awdiv@dividend,f
  3412  02EC  0871               	movf	___awdiv@divisor+1,w
  3413  02ED  1C03               	skipc
  3414  02EE  03F3               	decf	___awdiv@dividend+1,f
  3415  02EF  02F3               	subwf	___awdiv@dividend+1,f
  3416  02F0                     l1771:	
  3417  02F0  1477               	bsf	___awdiv@quotient,0
  3418  02F1                     l1773:	
  3419  02F1  3001               	movlw	1
  3420  02F2                     u1245:	
  3421  02F2  1003               	clrc
  3422  02F3  0CF1               	rrf	___awdiv@divisor+1,f
  3423  02F4  0CF0               	rrf	___awdiv@divisor,f
  3424  02F5  3EFF               	addlw	-1
  3425  02F6  1D03               	skipz
  3426  02F7  2AF2               	goto	u1245
  3427  02F8                     l1775:	
  3428  02F8  3001               	movlw	1
  3429  02F9  02F5               	subwf	___awdiv@counter,f
  3430  02FA  1D03               	btfss	3,2
  3431  02FB  2AFD               	goto	u1251
  3432  02FC  2AFE               	goto	u1250
  3433  02FD                     u1251:	
  3434  02FD  2AD9               	goto	l1767
  3435  02FE                     u1250:	
  3436  02FE                     l1777:	
  3437  02FE  0876               	movf	___awdiv@sign,w
  3438  02FF  1903               	btfsc	3,2
  3439  0300  2B02               	goto	u1261
  3440  0301  2B03               	goto	u1260
  3441  0302                     u1261:	
  3442  0302  2B08               	goto	l1781
  3443  0303                     u1260:	
  3444  0303                     l1779:	
  3445  0303  09F7               	comf	___awdiv@quotient,f
  3446  0304  09F8               	comf	___awdiv@quotient+1,f
  3447  0305  0AF7               	incf	___awdiv@quotient,f
  3448  0306  1903               	skipnz
  3449  0307  0AF8               	incf	___awdiv@quotient+1,f
  3450  0308                     l1781:	
  3451  0308  0878               	movf	___awdiv@quotient+1,w
  3452  0309  00F1               	movwf	?___awdiv+1
  3453  030A  0877               	movf	___awdiv@quotient,w
  3454  030B  00F0               	movwf	?___awdiv
  3455  030C                     l519:	
  3456  030C  0008               	return
  3457  030D                     __end_of___awdiv:	
  3458                           
  3459                           	psect	text14
  3460  0F46                     __ptext14:	
  3461 ;; *************** function _UART_WRITE *****************
  3462 ;; Defined at:
  3463 ;;		line 31 in file "UART.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  data            1    wreg     unsigned char 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  data            1    0[COMMON] unsigned char 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       0       0       0
  3478 ;;      Locals:         1       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0
  3480 ;;      Totals:         1       0       0       0       0
  3481 ;;Total ram usage:        1 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_main
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           
  3491                           ;psect for function _UART_WRITE
  3492  0F46                     _UART_WRITE:	
  3493                           
  3494                           ;incstack = 0
  3495                           ; Regs used in _UART_WRITE: [wreg]
  3496                           ;UART_WRITE@data stored from wreg
  3497  0F46  00F0               	movwf	UART_WRITE@data
  3498  0F47                     l1729:	
  3499  0F47                     l277:	
  3500                           ;UART.c: 32:   while(!TXSTAbits.TRMT);
  3501                           
  3502  0F47  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0F48  1303               	bcf	3,6	;RP1=0, select bank1
  3504  0F49  1C98               	btfss	24,1	;volatile
  3505  0F4A  2F4C               	goto	u1151
  3506  0F4B  2F4D               	goto	u1150
  3507  0F4C                     u1151:	
  3508  0F4C  2F47               	goto	l277
  3509  0F4D                     u1150:	
  3510  0F4D                     l1731:	
  3511                           
  3512                           ;UART.c: 33:   TXREG = data;
  3513  0F4D  0870               	movf	UART_WRITE@data,w
  3514  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0F50  0099               	movwf	25	;volatile
  3517  0F51                     l280:	
  3518  0F51  0008               	return
  3519  0F52                     __end_of_UART_WRITE:	
  3520                           
  3521                           	psect	text15
  3522  01DD                     __ptext15:	
  3523 ;; *************** function _UART_INIT *****************
  3524 ;; Defined at:
  3525 ;;		line 6 in file "UART.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  baudrate        4    6[BANK0 ] const long 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;		None
  3530 ;; Return value:  Size  Location     Type
  3531 ;;                  1    wreg      unsigned char 
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, pclath, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3539 ;;      Params:         0       4       0       0       0
  3540 ;;      Locals:         0       0       0       0       0
  3541 ;;      Temps:          0      12       0       0       0
  3542 ;;      Totals:         0      16       0       0       0
  3543 ;;Total ram usage:       16 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    1
  3546 ;; This function calls:
  3547 ;;		___aldiv
  3548 ;; This function is called by:
  3549 ;;		_main
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           
  3554                           ;psect for function _UART_INIT
  3555  01DD                     _UART_INIT:	
  3556  01DD                     l1661:	
  3557                           ;incstack = 0
  3558                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  3559                           
  3560                           
  3561                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  3562  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3563  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3564  01DF  085A               	movf	UART_INIT@baudrate,w
  3565  01E0  00DE               	movwf	??_UART_INIT
  3566  01E1  085B               	movf	UART_INIT@baudrate+1,w
  3567  01E2  00DF               	movwf	??_UART_INIT+1
  3568  01E3  085C               	movf	UART_INIT@baudrate+2,w
  3569  01E4  00E0               	movwf	??_UART_INIT+2
  3570  01E5  085D               	movf	UART_INIT@baudrate+3,w
  3571  01E6  00E1               	movwf	??_UART_INIT+3
  3572  01E7  3004               	movlw	4
  3573  01E8                     u1085:	
  3574  01E8  1003               	clrc
  3575  01E9  0DDE               	rlf	??_UART_INIT,f
  3576  01EA  0DDF               	rlf	??_UART_INIT+1,f
  3577  01EB  0DE0               	rlf	??_UART_INIT+2,f
  3578  01EC  0DE1               	rlf	??_UART_INIT+3,f
  3579  01ED                     u1080:	
  3580  01ED  3EFF               	addlw	-1
  3581  01EE  1D03               	skipz
  3582  01EF  29E8               	goto	u1085
  3583  01F0  0861               	movf	??_UART_INIT+3,w
  3584  01F1  00F3               	movwf	___aldiv@divisor+3
  3585  01F2  0860               	movf	??_UART_INIT+2,w
  3586  01F3  00F2               	movwf	___aldiv@divisor+2
  3587  01F4  085F               	movf	??_UART_INIT+1,w
  3588  01F5  00F1               	movwf	___aldiv@divisor+1
  3589  01F6  085E               	movf	??_UART_INIT,w
  3590  01F7  00F0               	movwf	___aldiv@divisor
  3591  01F8  085A               	movf	UART_INIT@baudrate,w
  3592  01F9  00E2               	movwf	??_UART_INIT+4
  3593  01FA  085B               	movf	UART_INIT@baudrate+1,w
  3594  01FB  00E3               	movwf	??_UART_INIT+5
  3595  01FC  085C               	movf	UART_INIT@baudrate+2,w
  3596  01FD  00E4               	movwf	??_UART_INIT+6
  3597  01FE  085D               	movf	UART_INIT@baudrate+3,w
  3598  01FF  00E5               	movwf	??_UART_INIT+7
  3599  0200  3004               	movlw	4
  3600  0201                     u1095:	
  3601  0201  1003               	clrc
  3602  0202  0DE2               	rlf	??_UART_INIT+4,f
  3603  0203  0DE3               	rlf	??_UART_INIT+5,f
  3604  0204  0DE4               	rlf	??_UART_INIT+6,f
  3605  0205  0DE5               	rlf	??_UART_INIT+7,f
  3606  0206                     u1090:	
  3607  0206  3EFF               	addlw	-1
  3608  0207  1D03               	skipz
  3609  0208  2A01               	goto	u1095
  3610  0209  3000               	movlw	0
  3611  020A  00E6               	movwf	??_UART_INIT+8
  3612  020B  3012               	movlw	18
  3613  020C  00E7               	movwf	??_UART_INIT+9
  3614  020D  307A               	movlw	122
  3615  020E  00E8               	movwf	??_UART_INIT+10
  3616  020F  3000               	movlw	0
  3617  0210  00E9               	movwf	??_UART_INIT+11
  3618  0211  0862               	movf	??_UART_INIT+4,w
  3619  0212  02E6               	subwf	??_UART_INIT+8,f
  3620  0213  0863               	movf	??_UART_INIT+5,w
  3621  0214  1C03               	skipc
  3622  0215  0F63               	incfsz	??_UART_INIT+5,w
  3623  0216  2A18               	goto	u1101
  3624  0217  2A19               	goto	u1102
  3625  0218                     u1101:	
  3626  0218  02E7               	subwf	??_UART_INIT+9,f
  3627  0219                     u1102:	
  3628  0219  0864               	movf	??_UART_INIT+6,w
  3629  021A  1C03               	skipc
  3630  021B  0F64               	incfsz	??_UART_INIT+6,w
  3631  021C  2A1E               	goto	u1103
  3632  021D  2A1F               	goto	u1104
  3633  021E                     u1103:	
  3634  021E  02E8               	subwf	??_UART_INIT+10,f
  3635  021F                     u1104:	
  3636  021F  0865               	movf	??_UART_INIT+7,w
  3637  0220  1C03               	skipc
  3638  0221  0F65               	incfsz	??_UART_INIT+7,w
  3639  0222  2A24               	goto	u1105
  3640  0223  2A25               	goto	u1106
  3641  0224                     u1105:	
  3642  0224  02E9               	subwf	??_UART_INIT+11,f
  3643  0225                     u1106:	
  3644  0225  0869               	movf	??_UART_INIT+11,w
  3645  0226  00F7               	movwf	___aldiv@dividend+3
  3646  0227  0868               	movf	??_UART_INIT+10,w
  3647  0228  00F6               	movwf	___aldiv@dividend+2
  3648  0229  0867               	movf	??_UART_INIT+9,w
  3649  022A  00F5               	movwf	___aldiv@dividend+1
  3650  022B  0866               	movf	??_UART_INIT+8,w
  3651  022C  00F4               	movwf	___aldiv@dividend
  3652  022D  120A  118A  237F  120A  118A  	fcall	___aldiv
  3653  0232  0870               	movf	?___aldiv,w
  3654  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3655  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3656  0235  0099               	movwf	25	;volatile
  3657  0236                     l1663:	
  3658                           
  3659                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  3660  0236  1518               	bsf	24,2	;volatile
  3661  0237                     l1665:	
  3662                           
  3663                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  3664  0237  1698               	bsf	24,5	;volatile
  3665  0238                     l1667:	
  3666                           
  3667                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  3668  0238  1218               	bcf	24,4	;volatile
  3669  0239                     l1669:	
  3670                           
  3671                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  3672  0239  1318               	bcf	24,6	;volatile
  3673  023A                     l1671:	
  3674                           
  3675                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  3676  023A  1283               	bcf	3,5	;RP0=0, select bank0
  3677  023B  1303               	bcf	3,6	;RP1=0, select bank0
  3678  023C  1618               	bsf	24,4	;volatile
  3679  023D                     l1673:	
  3680                           
  3681                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  3682  023D  1798               	bsf	24,7	;volatile
  3683  023E                     l1675:	
  3684                           
  3685                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  3686  023E  1318               	bcf	24,6	;volatile
  3687  023F                     l270:	
  3688  023F  0008               	return
  3689  0240                     __end_of_UART_INIT:	
  3690                           
  3691                           	psect	text16
  3692  037F                     __ptext16:	
  3693 ;; *************** function ___aldiv *****************
  3694 ;; Defined at:
  3695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  divisor         4    0[COMMON] long 
  3698 ;;  dividend        4    4[COMMON] long 
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  quotient        4    2[BANK0 ] long 
  3701 ;;  sign            1    1[BANK0 ] unsigned char 
  3702 ;;  counter         1    0[BANK0 ] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  4    0[COMMON] long 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3712 ;;      Params:         8       0       0       0       0
  3713 ;;      Locals:         0       6       0       0       0
  3714 ;;      Temps:          1       0       0       0       0
  3715 ;;      Totals:         9       6       0       0       0
  3716 ;;Total ram usage:       15 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; This function calls:
  3719 ;;		Nothing
  3720 ;; This function is called by:
  3721 ;;		_UART_INIT
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function ___aldiv
  3727  037F                     ___aldiv:	
  3728  037F                     l1567:	
  3729                           ;incstack = 0
  3730                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3731                           
  3732  037F  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0380  1303               	bcf	3,6	;RP1=0, select bank0
  3734  0381  01D5               	clrf	___aldiv@sign
  3735  0382                     l1569:	
  3736  0382  1FF3               	btfss	___aldiv@divisor+3,7
  3737  0383  2B85               	goto	u941
  3738  0384  2B86               	goto	u940
  3739  0385                     u941:	
  3740  0385  2B93               	goto	l431
  3741  0386                     u940:	
  3742  0386                     l1571:	
  3743  0386  09F0               	comf	___aldiv@divisor,f
  3744  0387  09F1               	comf	___aldiv@divisor+1,f
  3745  0388  09F2               	comf	___aldiv@divisor+2,f
  3746  0389  09F3               	comf	___aldiv@divisor+3,f
  3747  038A  0AF0               	incf	___aldiv@divisor,f
  3748  038B  1903               	skipnz
  3749  038C  0AF1               	incf	___aldiv@divisor+1,f
  3750  038D  1903               	skipnz
  3751  038E  0AF2               	incf	___aldiv@divisor+2,f
  3752  038F  1903               	skipnz
  3753  0390  0AF3               	incf	___aldiv@divisor+3,f
  3754  0391  01D5               	clrf	___aldiv@sign
  3755  0392  0AD5               	incf	___aldiv@sign,f
  3756  0393                     l431:	
  3757  0393  1FF7               	btfss	___aldiv@dividend+3,7
  3758  0394  2B96               	goto	u951
  3759  0395  2B97               	goto	u950
  3760  0396                     u951:	
  3761  0396  2BA6               	goto	l1577
  3762  0397                     u950:	
  3763  0397                     l1573:	
  3764  0397  09F4               	comf	___aldiv@dividend,f
  3765  0398  09F5               	comf	___aldiv@dividend+1,f
  3766  0399  09F6               	comf	___aldiv@dividend+2,f
  3767  039A  09F7               	comf	___aldiv@dividend+3,f
  3768  039B  0AF4               	incf	___aldiv@dividend,f
  3769  039C  1903               	skipnz
  3770  039D  0AF5               	incf	___aldiv@dividend+1,f
  3771  039E  1903               	skipnz
  3772  039F  0AF6               	incf	___aldiv@dividend+2,f
  3773  03A0  1903               	skipnz
  3774  03A1  0AF7               	incf	___aldiv@dividend+3,f
  3775  03A2                     l1575:	
  3776  03A2  3001               	movlw	1
  3777  03A3  00F8               	movwf	??___aldiv
  3778  03A4  0878               	movf	??___aldiv,w
  3779  03A5  06D5               	xorwf	___aldiv@sign,f
  3780  03A6                     l1577:	
  3781  03A6  3000               	movlw	0
  3782  03A7  00D9               	movwf	___aldiv@quotient+3
  3783  03A8  3000               	movlw	0
  3784  03A9  00D8               	movwf	___aldiv@quotient+2
  3785  03AA  3000               	movlw	0
  3786  03AB  00D7               	movwf	___aldiv@quotient+1
  3787  03AC  3000               	movlw	0
  3788  03AD  00D6               	movwf	___aldiv@quotient
  3789  03AE                     l1579:	
  3790  03AE  0873               	movf	___aldiv@divisor+3,w
  3791  03AF  0472               	iorwf	___aldiv@divisor+2,w
  3792  03B0  0471               	iorwf	___aldiv@divisor+1,w
  3793  03B1  0470               	iorwf	___aldiv@divisor,w
  3794  03B2  1903               	skipnz
  3795  03B3  2BB5               	goto	u961
  3796  03B4  2BB6               	goto	u960
  3797  03B5                     u961:	
  3798  03B5  2C03               	goto	l1599
  3799  03B6                     u960:	
  3800  03B6                     l1581:	
  3801  03B6  01D4               	clrf	___aldiv@counter
  3802  03B7  0AD4               	incf	___aldiv@counter,f
  3803  03B8  2BC6               	goto	l1585
  3804  03B9                     l1583:	
  3805  03B9  3001               	movlw	1
  3806  03BA  00F8               	movwf	??___aldiv
  3807  03BB                     u975:	
  3808  03BB  1003               	clrc
  3809  03BC  0DF0               	rlf	___aldiv@divisor,f
  3810  03BD  0DF1               	rlf	___aldiv@divisor+1,f
  3811  03BE  0DF2               	rlf	___aldiv@divisor+2,f
  3812  03BF  0DF3               	rlf	___aldiv@divisor+3,f
  3813  03C0  0BF8               	decfsz	??___aldiv,f
  3814  03C1  2BBB               	goto	u975
  3815  03C2  3001               	movlw	1
  3816  03C3  00F8               	movwf	??___aldiv
  3817  03C4  0878               	movf	??___aldiv,w
  3818  03C5  07D4               	addwf	___aldiv@counter,f
  3819  03C6                     l1585:	
  3820  03C6  1FF3               	btfss	___aldiv@divisor+3,7
  3821  03C7  2BC9               	goto	u981
  3822  03C8  2BCA               	goto	u980
  3823  03C9                     u981:	
  3824  03C9  2BB9               	goto	l1583
  3825  03CA                     u980:	
  3826  03CA                     l1587:	
  3827  03CA  3001               	movlw	1
  3828  03CB  00F8               	movwf	??___aldiv
  3829  03CC                     u995:	
  3830  03CC  1003               	clrc
  3831  03CD  0DD6               	rlf	___aldiv@quotient,f
  3832  03CE  0DD7               	rlf	___aldiv@quotient+1,f
  3833  03CF  0DD8               	rlf	___aldiv@quotient+2,f
  3834  03D0  0DD9               	rlf	___aldiv@quotient+3,f
  3835  03D1  0BF8               	decfsz	??___aldiv,f
  3836  03D2  2BCC               	goto	u995
  3837  03D3                     l1589:	
  3838  03D3  0873               	movf	___aldiv@divisor+3,w
  3839  03D4  0277               	subwf	___aldiv@dividend+3,w
  3840  03D5  1D03               	skipz
  3841  03D6  2BE1               	goto	u1005
  3842  03D7  0872               	movf	___aldiv@divisor+2,w
  3843  03D8  0276               	subwf	___aldiv@dividend+2,w
  3844  03D9  1D03               	skipz
  3845  03DA  2BE1               	goto	u1005
  3846  03DB  0871               	movf	___aldiv@divisor+1,w
  3847  03DC  0275               	subwf	___aldiv@dividend+1,w
  3848  03DD  1D03               	skipz
  3849  03DE  2BE1               	goto	u1005
  3850  03DF  0870               	movf	___aldiv@divisor,w
  3851  03E0  0274               	subwf	___aldiv@dividend,w
  3852  03E1                     u1005:	
  3853  03E1  1C03               	skipc
  3854  03E2  2BE4               	goto	u1001
  3855  03E3  2BE5               	goto	u1000
  3856  03E4                     u1001:	
  3857  03E4  2BF4               	goto	l1595
  3858  03E5                     u1000:	
  3859  03E5                     l1591:	
  3860  03E5  0870               	movf	___aldiv@divisor,w
  3861  03E6  02F4               	subwf	___aldiv@dividend,f
  3862  03E7  0871               	movf	___aldiv@divisor+1,w
  3863  03E8  1C03               	skipc
  3864  03E9  0F71               	incfsz	___aldiv@divisor+1,w
  3865  03EA  02F5               	subwf	___aldiv@dividend+1,f
  3866  03EB  0872               	movf	___aldiv@divisor+2,w
  3867  03EC  1C03               	skipc
  3868  03ED  0F72               	incfsz	___aldiv@divisor+2,w
  3869  03EE  02F6               	subwf	___aldiv@dividend+2,f
  3870  03EF  0873               	movf	___aldiv@divisor+3,w
  3871  03F0  1C03               	skipc
  3872  03F1  0F73               	incfsz	___aldiv@divisor+3,w
  3873  03F2  02F7               	subwf	___aldiv@dividend+3,f
  3874  03F3                     l1593:	
  3875  03F3  1456               	bsf	___aldiv@quotient,0
  3876  03F4                     l1595:	
  3877  03F4  3001               	movlw	1
  3878  03F5                     u1015:	
  3879  03F5  1003               	clrc
  3880  03F6  0CF3               	rrf	___aldiv@divisor+3,f
  3881  03F7  0CF2               	rrf	___aldiv@divisor+2,f
  3882  03F8  0CF1               	rrf	___aldiv@divisor+1,f
  3883  03F9  0CF0               	rrf	___aldiv@divisor,f
  3884  03FA  3EFF               	addlw	-1
  3885  03FB  1D03               	skipz
  3886  03FC  2BF5               	goto	u1015
  3887  03FD                     l1597:	
  3888  03FD  3001               	movlw	1
  3889  03FE  02D4               	subwf	___aldiv@counter,f
  3890  03FF  1D03               	btfss	3,2
  3891  0400  2C02               	goto	u1021
  3892  0401  2C03               	goto	u1020
  3893  0402                     u1021:	
  3894  0402  2BCA               	goto	l1587
  3895  0403                     u1020:	
  3896  0403                     l1599:	
  3897  0403  0855               	movf	___aldiv@sign,w
  3898  0404  1903               	btfsc	3,2
  3899  0405  2C07               	goto	u1031
  3900  0406  2C08               	goto	u1030
  3901  0407                     u1031:	
  3902  0407  2C13               	goto	l1603
  3903  0408                     u1030:	
  3904  0408                     l1601:	
  3905  0408  09D6               	comf	___aldiv@quotient,f
  3906  0409  09D7               	comf	___aldiv@quotient+1,f
  3907  040A  09D8               	comf	___aldiv@quotient+2,f
  3908  040B  09D9               	comf	___aldiv@quotient+3,f
  3909  040C  0AD6               	incf	___aldiv@quotient,f
  3910  040D  1903               	skipnz
  3911  040E  0AD7               	incf	___aldiv@quotient+1,f
  3912  040F  1903               	skipnz
  3913  0410  0AD8               	incf	___aldiv@quotient+2,f
  3914  0411  1903               	skipnz
  3915  0412  0AD9               	incf	___aldiv@quotient+3,f
  3916  0413                     l1603:	
  3917  0413  0859               	movf	___aldiv@quotient+3,w
  3918  0414  00F3               	movwf	?___aldiv+3
  3919  0415  0858               	movf	___aldiv@quotient+2,w
  3920  0416  00F2               	movwf	?___aldiv+2
  3921  0417  0857               	movf	___aldiv@quotient+1,w
  3922  0418  00F1               	movwf	?___aldiv+1
  3923  0419  0856               	movf	___aldiv@quotient,w
  3924  041A  00F0               	movwf	?___aldiv
  3925  041B                     l441:	
  3926  041B  0008               	return
  3927  041C                     __end_of___aldiv:	
  3928                           
  3929                           	psect	text17
  3930  0F80                     __ptext17:	
  3931 ;; *************** function _SETUP *****************
  3932 ;; Defined at:
  3933 ;;		line 218 in file "MASTERR_I2C.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;		None
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;		None
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3947 ;;      Params:         0       0       0       0       0
  3948 ;;      Locals:         0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0
  3950 ;;      Totals:         0       0       0       0       0
  3951 ;;Total ram usage:        0 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; This function calls:
  3954 ;;		Nothing
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           
  3961                           ;psect for function _SETUP
  3962  0F80                     _SETUP:	
  3963  0F80                     l1637:	
  3964                           ;incstack = 0
  3965                           ; Regs used in _SETUP: [wreg+status,2]
  3966                           
  3967                           
  3968                           ;MASTERR_I2C.c: 219:      TRISA=0b00000001;
  3969  0F80  3001               	movlw	1
  3970  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  3972  0F83  0085               	movwf	5	;volatile
  3973  0F84                     l1639:	
  3974                           
  3975                           ;MASTERR_I2C.c: 220:     TRISB=0;
  3976  0F84  0186               	clrf	6	;volatile
  3977  0F85                     l1641:	
  3978                           
  3979                           ;MASTERR_I2C.c: 221:     TRISC=0b000011000;
  3980  0F85  3018               	movlw	24
  3981  0F86  0087               	movwf	7	;volatile
  3982                           
  3983                           ;MASTERR_I2C.c: 222:     TRISD=0;
  3984  0F87  0188               	clrf	8	;volatile
  3985                           
  3986                           ;MASTERR_I2C.c: 223:     TRISE=0;
  3987  0F88  0189               	clrf	9	;volatile
  3988                           
  3989                           ;MASTERR_I2C.c: 224:     ANSEL = 0b00000000;
  3990  0F89  1683               	bsf	3,5	;RP0=1, select bank3
  3991  0F8A  1703               	bsf	3,6	;RP1=1, select bank3
  3992  0F8B  0188               	clrf	8	;volatile
  3993                           
  3994                           ;MASTERR_I2C.c: 225:     ANSELH =0b00000000;
  3995  0F8C  0189               	clrf	9	;volatile
  3996                           
  3997                           ;MASTERR_I2C.c: 226:     PORTA=0;
  3998  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  3999  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4000  0F8F  0185               	clrf	5	;volatile
  4001                           
  4002                           ;MASTERR_I2C.c: 227:     PORTB=0;
  4003  0F90  0186               	clrf	6	;volatile
  4004                           
  4005                           ;MASTERR_I2C.c: 228:     PORTC=0;
  4006  0F91  0187               	clrf	7	;volatile
  4007                           
  4008                           ;MASTERR_I2C.c: 229:     PORTD=0;
  4009  0F92  0188               	clrf	8	;volatile
  4010                           
  4011                           ;MASTERR_I2C.c: 230:     PORTE=0;
  4012  0F93  0189               	clrf	9	;volatile
  4013  0F94                     l161:	
  4014  0F94  0008               	return
  4015  0F95                     __end_of_SETUP:	
  4016                           
  4017                           	psect	text18
  4018  0F3C                     __ptext18:	
  4019 ;; *************** function _I2C_Master_Write *****************
  4020 ;; Defined at:
  4021 ;;		line 44 in file "I2C.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  d               2    0[COMMON] unsigned int 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;		None
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4035 ;;      Params:         2       0       0       0       0
  4036 ;;      Locals:         0       0       0       0       0
  4037 ;;      Temps:          0       0       0       0       0
  4038 ;;      Totals:         2       0       0       0       0
  4039 ;;Total ram usage:        2 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    1
  4042 ;; This function calls:
  4043 ;;		_I2C_Master_Wait
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _I2C_Master_Write
  4051  0F3C                     _I2C_Master_Write:	
  4052  0F3C                     l1681:	
  4053                           ;incstack = 0
  4054                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4055                           
  4056                           
  4057                           ;I2C.c: 45:     I2C_Master_Wait();
  4058  0F3C  120A  158A  2752  120A  158A  	fcall	_I2C_Master_Wait
  4059  0F41                     l1683:	
  4060                           
  4061                           ;I2C.c: 46:     SSPBUF = d;
  4062  0F41  0870               	movf	I2C_Master_Write@d,w
  4063  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4064  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4065  0F44  0093               	movwf	19	;volatile
  4066  0F45                     l247:	
  4067  0F45  0008               	return
  4068  0F46                     __end_of_I2C_Master_Write:	
  4069                           
  4070                           	psect	text19
  4071  0F33                     __ptext19:	
  4072 ;; *************** function _I2C_Master_Stop *****************
  4073 ;; Defined at:
  4074 ;;		line 35 in file "I2C.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;		None
  4079 ;; Return value:  Size  Location     Type
  4080 ;;                  1    wreg      void 
  4081 ;; Registers used:
  4082 ;;		wreg, status,2, status,0, pclath, cstack
  4083 ;; Tracked objects:
  4084 ;;		On entry : 0/0
  4085 ;;		On exit  : 0/0
  4086 ;;		Unchanged: 0/0
  4087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4088 ;;      Params:         0       0       0       0       0
  4089 ;;      Locals:         0       0       0       0       0
  4090 ;;      Temps:          0       0       0       0       0
  4091 ;;      Totals:         0       0       0       0       0
  4092 ;;Total ram usage:        0 bytes
  4093 ;; Hardware stack levels used:    1
  4094 ;; Hardware stack levels required when called:    1
  4095 ;; This function calls:
  4096 ;;		_I2C_Master_Wait
  4097 ;; This function is called by:
  4098 ;;		_main
  4099 ;; This function uses a non-reentrant model
  4100 ;;
  4101                           
  4102                           
  4103                           ;psect for function _I2C_Master_Stop
  4104  0F33                     _I2C_Master_Stop:	
  4105  0F33                     l1701:	
  4106                           ;incstack = 0
  4107                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4108                           
  4109                           
  4110                           ;I2C.c: 36:     I2C_Master_Wait();
  4111  0F33  120A  158A  2752  120A  158A  	fcall	_I2C_Master_Wait
  4112  0F38                     l1703:	
  4113                           
  4114                           ;I2C.c: 37:     SSPCON2bits.PEN = 1;
  4115  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  4116  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  4117  0F3A  1511               	bsf	17,2	;volatile
  4118  0F3B                     l244:	
  4119  0F3B  0008               	return
  4120  0F3C                     __end_of_I2C_Master_Stop:	
  4121                           
  4122                           	psect	text20
  4123  0F2A                     __ptext20:	
  4124 ;; *************** function _I2C_Master_Start *****************
  4125 ;; Defined at:
  4126 ;;		line 21 in file "I2C.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;		None
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4140 ;;      Params:         0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0
  4143 ;;      Totals:         0       0       0       0       0
  4144 ;;Total ram usage:        0 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    1
  4147 ;; This function calls:
  4148 ;;		_I2C_Master_Wait
  4149 ;; This function is called by:
  4150 ;;		_main
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _I2C_Master_Start
  4156  0F2A                     _I2C_Master_Start:	
  4157  0F2A                     l1677:	
  4158                           ;incstack = 0
  4159                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4160                           
  4161                           
  4162                           ;I2C.c: 22:     I2C_Master_Wait();
  4163  0F2A  120A  158A  2752  120A  158A  	fcall	_I2C_Master_Wait
  4164  0F2F                     l1679:	
  4165                           
  4166                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  4167  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  4168  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  4169  0F31  1411               	bsf	17,0	;volatile
  4170  0F32                     l238:	
  4171  0F32  0008               	return
  4172  0F33                     __end_of_I2C_Master_Start:	
  4173                           
  4174                           	psect	text21
  4175  00A0                     __ptext21:	
  4176 ;; *************** function _I2C_Master_Read *****************
  4177 ;; Defined at:
  4178 ;;		line 52 in file "I2C.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  a               2    0[COMMON] unsigned short 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  temp            2    4[COMMON] unsigned short 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2    0[COMMON] unsigned short 
  4185 ;; Registers used:
  4186 ;;		wreg, status,2, status,0, pclath, cstack
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4192 ;;      Params:         2       0       0       0       0
  4193 ;;      Locals:         2       0       0       0       0
  4194 ;;      Temps:          2       0       0       0       0
  4195 ;;      Totals:         6       0       0       0       0
  4196 ;;Total ram usage:        6 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    1
  4199 ;; This function calls:
  4200 ;;		_I2C_Master_Wait
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           
  4207                           ;psect for function _I2C_Master_Read
  4208  00A0                     _I2C_Master_Read:	
  4209  00A0                     l1685:	
  4210                           ;incstack = 0
  4211                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4212                           
  4213                           
  4214                           ;I2C.c: 53:     unsigned short temp;;I2C.c: 54:     I2C_Master_Wait();
  4215  00A0  120A  158A  2752  120A  118A  	fcall	_I2C_Master_Wait
  4216  00A5                     l1687:	
  4217                           
  4218                           ;I2C.c: 55:     RCEN = 1;
  4219  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  4220  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  4221  00A7  1591               	bsf	17,3	;volatile
  4222                           
  4223                           ;I2C.c: 56:     I2C_Master_Wait();
  4224  00A8  120A  158A  2752  120A  118A  	fcall	_I2C_Master_Wait
  4225  00AD                     l1689:	
  4226                           
  4227                           ;I2C.c: 57:     temp = SSPBUF;
  4228  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  4229  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  4230  00AF  0813               	movf	19,w	;volatile
  4231  00B0  00F2               	movwf	??_I2C_Master_Read
  4232  00B1  01F3               	clrf	??_I2C_Master_Read+1
  4233  00B2  0872               	movf	??_I2C_Master_Read,w
  4234  00B3  00F4               	movwf	I2C_Master_Read@temp
  4235  00B4  0873               	movf	??_I2C_Master_Read+1,w
  4236  00B5  00F5               	movwf	I2C_Master_Read@temp+1
  4237  00B6                     l1691:	
  4238                           
  4239                           ;I2C.c: 58:     I2C_Master_Wait();
  4240  00B6  120A  158A  2752  120A  118A  	fcall	_I2C_Master_Wait
  4241  00BB                     l1693:	
  4242                           
  4243                           ;I2C.c: 59:     if(a == 1){
  4244  00BB  0370               	decf	I2C_Master_Read@a,w
  4245  00BC  0471               	iorwf	I2C_Master_Read@a+1,w
  4246  00BD  1D03               	btfss	3,2
  4247  00BE  28C0               	goto	u1111
  4248  00BF  28C1               	goto	u1110
  4249  00C0                     u1111:	
  4250  00C0  28C5               	goto	l250
  4251  00C1                     u1110:	
  4252  00C1                     l1695:	
  4253                           
  4254                           ;I2C.c: 60:         SSPCON2bits.ACKDT = 0;
  4255  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  4256  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  4257  00C3  1291               	bcf	17,5	;volatile
  4258                           
  4259                           ;I2C.c: 61:     }
  4260  00C4  28C8               	goto	l251
  4261  00C5                     l250:	
  4262                           ;I2C.c: 62:     else{
  4263                           
  4264                           
  4265                           ;I2C.c: 63:         SSPCON2bits.ACKDT = 1;
  4266  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  4267  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  4268  00C7  1691               	bsf	17,5	;volatile
  4269  00C8                     l251:	
  4270                           ;I2C.c: 64:     }
  4271                           
  4272                           
  4273                           ;I2C.c: 65:     SSPCON2bits.ACKEN = 1;
  4274  00C8  1611               	bsf	17,4	;volatile
  4275  00C9                     l1697:	
  4276                           
  4277                           ;I2C.c: 66:     return temp;
  4278  00C9  0875               	movf	I2C_Master_Read@temp+1,w
  4279  00CA  00F1               	movwf	?_I2C_Master_Read+1
  4280  00CB  0874               	movf	I2C_Master_Read@temp,w
  4281  00CC  00F0               	movwf	?_I2C_Master_Read
  4282  00CD                     l252:	
  4283  00CD  0008               	return
  4284  00CE                     __end_of_I2C_Master_Read:	
  4285                           
  4286                           	psect	text22
  4287  0F52                     __ptext22:	
  4288 ;; *************** function _I2C_Master_Wait *****************
  4289 ;; Defined at:
  4290 ;;		line 15 in file "I2C.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;		None
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, status,2
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4304 ;;      Params:         0       0       0       0       0
  4305 ;;      Locals:         0       0       0       0       0
  4306 ;;      Temps:          0       0       0       0       0
  4307 ;;      Totals:         0       0       0       0       0
  4308 ;;Total ram usage:        0 bytes
  4309 ;; Hardware stack levels used:    1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_I2C_Master_Start
  4314 ;;		_I2C_Master_Stop
  4315 ;;		_I2C_Master_Write
  4316 ;;		_I2C_Master_Read
  4317 ;;		_I2C_Master_RepeatedStart
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           
  4322                           ;psect for function _I2C_Master_Wait
  4323  0F52                     _I2C_Master_Wait:	
  4324  0F52                     l1539:	
  4325                           ;incstack = 0
  4326                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4327                           
  4328  0F52                     l232:	
  4329                           ;I2C.c: 16:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4330                           
  4331  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  4332  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  4333  0F54  1914               	btfsc	20,2	;volatile
  4334  0F55  2F57               	goto	u851
  4335  0F56  2F58               	goto	u850
  4336  0F57                     u851:	
  4337  0F57  2F52               	goto	l232
  4338  0F58                     u850:	
  4339  0F58                     l1541:	
  4340  0F58  0811               	movf	17,w	;volatile
  4341  0F59  391F               	andlw	31
  4342  0F5A  1D03               	btfss	3,2
  4343  0F5B  2F5D               	goto	u861
  4344  0F5C  2F5E               	goto	u860
  4345  0F5D                     u861:	
  4346  0F5D  2F52               	goto	l232
  4347  0F5E                     u860:	
  4348  0F5E                     l235:	
  4349  0F5E  0008               	return
  4350  0F5F                     __end_of_I2C_Master_Wait:	
  4351                           
  4352                           	psect	text23
  4353  00CE                     __ptext23:	
  4354 ;; *************** function _I2C_INIT *****************
  4355 ;; Defined at:
  4356 ;;		line 5 in file "I2C.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  c               4    0[BANK0 ] const unsigned long 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		wreg, status,2, status,0, pclath, cstack
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4370 ;;      Params:         0       4       0       0       0
  4371 ;;      Locals:         0       0       0       0       0
  4372 ;;      Temps:          0       4       0       0       0
  4373 ;;      Totals:         0       8       0       0       0
  4374 ;;Total ram usage:        8 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    1
  4377 ;; This function calls:
  4378 ;;		___lldiv
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _I2C_INIT
  4386  00CE                     _I2C_INIT:	
  4387  00CE                     l1643:	
  4388                           ;incstack = 0
  4389                           ; Regs used in _I2C_INIT: [wreg+status,2+status,0+pclath+cstack]
  4390                           
  4391                           
  4392                           ;I2C.c: 6:     SSPCON = 0b00101000;
  4393  00CE  3028               	movlw	40
  4394  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  4395  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  4396  00D1  0094               	movwf	20	;volatile
  4397  00D2                     l1645:	
  4398                           
  4399                           ;I2C.c: 7:     SSPCON2 = 0;
  4400  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  4401  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  4402  00D4  0191               	clrf	17	;volatile
  4403  00D5                     l1647:	
  4404                           
  4405                           ;I2C.c: 8:     SSPADD = (8000000/(4*c))-1;
  4406  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  4407  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  4408  00D7  0854               	movf	I2C_INIT@c,w
  4409  00D8  00D8               	movwf	??_I2C_INIT
  4410  00D9  0855               	movf	I2C_INIT@c+1,w
  4411  00DA  00D9               	movwf	??_I2C_INIT+1
  4412  00DB  0856               	movf	I2C_INIT@c+2,w
  4413  00DC  00DA               	movwf	??_I2C_INIT+2
  4414  00DD  0857               	movf	I2C_INIT@c+3,w
  4415  00DE  00DB               	movwf	??_I2C_INIT+3
  4416  00DF  3002               	movlw	2
  4417  00E0                     u1075:	
  4418  00E0  1003               	clrc
  4419  00E1  0DD8               	rlf	??_I2C_INIT,f
  4420  00E2  0DD9               	rlf	??_I2C_INIT+1,f
  4421  00E3  0DDA               	rlf	??_I2C_INIT+2,f
  4422  00E4  0DDB               	rlf	??_I2C_INIT+3,f
  4423  00E5                     u1070:	
  4424  00E5  3EFF               	addlw	-1
  4425  00E6  1D03               	skipz
  4426  00E7  28E0               	goto	u1075
  4427  00E8  085B               	movf	??_I2C_INIT+3,w
  4428  00E9  00F3               	movwf	___lldiv@divisor+3
  4429  00EA  085A               	movf	??_I2C_INIT+2,w
  4430  00EB  00F2               	movwf	___lldiv@divisor+2
  4431  00EC  0859               	movf	??_I2C_INIT+1,w
  4432  00ED  00F1               	movwf	___lldiv@divisor+1
  4433  00EE  0858               	movf	??_I2C_INIT,w
  4434  00EF  00F0               	movwf	___lldiv@divisor
  4435  00F0  3000               	movlw	0
  4436  00F1  00F7               	movwf	___lldiv@dividend+3
  4437  00F2  307A               	movlw	122
  4438  00F3  00F6               	movwf	___lldiv@dividend+2
  4439  00F4  3012               	movlw	18
  4440  00F5  00F5               	movwf	___lldiv@dividend+1
  4441  00F6  3000               	movlw	0
  4442  00F7  00F4               	movwf	___lldiv@dividend
  4443  00F8  120A  118A  2240  120A  118A  	fcall	___lldiv
  4444  00FD  0870               	movf	?___lldiv,w
  4445  00FE  3EFF               	addlw	255
  4446  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  4447  0100  1303               	bcf	3,6	;RP1=0, select bank1
  4448  0101  0093               	movwf	19	;volatile
  4449  0102                     l1649:	
  4450                           
  4451                           ;I2C.c: 9:     SSPSTAT = 0;
  4452  0102  0194               	clrf	20	;volatile
  4453  0103                     l1651:	
  4454                           
  4455                           ;I2C.c: 10:     TRISCbits.TRISC3 = 1;
  4456  0103  1587               	bsf	7,3	;volatile
  4457  0104                     l1653:	
  4458                           
  4459                           ;I2C.c: 11:     TRISCbits.TRISC4 = 1;
  4460  0104  1607               	bsf	7,4	;volatile
  4461  0105                     l229:	
  4462  0105  0008               	return
  4463  0106                     __end_of_I2C_INIT:	
  4464                           
  4465                           	psect	text24
  4466  0240                     __ptext24:	
  4467 ;; *************** function ___lldiv *****************
  4468 ;; Defined at:
  4469 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  divisor         4    0[COMMON] unsigned long 
  4472 ;;  dividend        4    4[COMMON] unsigned long 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  quotient        4    9[COMMON] unsigned long 
  4475 ;;  counter         1   13[COMMON] unsigned char 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  4    0[COMMON] unsigned long 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4485 ;;      Params:         8       0       0       0       0
  4486 ;;      Locals:         5       0       0       0       0
  4487 ;;      Temps:          1       0       0       0       0
  4488 ;;      Totals:        14       0       0       0       0
  4489 ;;Total ram usage:       14 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_I2C_INIT
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           
  4499                           ;psect for function ___lldiv
  4500  0240                     ___lldiv:	
  4501  0240                     l1543:	
  4502                           ;incstack = 0
  4503                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4504                           
  4505  0240  3000               	movlw	0
  4506  0241  00FC               	movwf	___lldiv@quotient+3
  4507  0242  3000               	movlw	0
  4508  0243  00FB               	movwf	___lldiv@quotient+2
  4509  0244  3000               	movlw	0
  4510  0245  00FA               	movwf	___lldiv@quotient+1
  4511  0246  3000               	movlw	0
  4512  0247  00F9               	movwf	___lldiv@quotient
  4513  0248  0873               	movf	___lldiv@divisor+3,w
  4514  0249  0472               	iorwf	___lldiv@divisor+2,w
  4515  024A  0471               	iorwf	___lldiv@divisor+1,w
  4516  024B  0470               	iorwf	___lldiv@divisor,w
  4517  024C  1903               	skipnz
  4518  024D  2A4F               	goto	u871
  4519  024E  2A50               	goto	u870
  4520  024F                     u871:	
  4521  024F  2A9D               	goto	l1563
  4522  0250                     u870:	
  4523  0250                     l1545:	
  4524  0250  01FD               	clrf	___lldiv@counter
  4525  0251  0AFD               	incf	___lldiv@counter,f
  4526  0252  2A60               	goto	l1549
  4527  0253                     l1547:	
  4528  0253  3001               	movlw	1
  4529  0254  00F8               	movwf	??___lldiv
  4530  0255                     u885:	
  4531  0255  1003               	clrc
  4532  0256  0DF0               	rlf	___lldiv@divisor,f
  4533  0257  0DF1               	rlf	___lldiv@divisor+1,f
  4534  0258  0DF2               	rlf	___lldiv@divisor+2,f
  4535  0259  0DF3               	rlf	___lldiv@divisor+3,f
  4536  025A  0BF8               	decfsz	??___lldiv,f
  4537  025B  2A55               	goto	u885
  4538  025C  3001               	movlw	1
  4539  025D  00F8               	movwf	??___lldiv
  4540  025E  0878               	movf	??___lldiv,w
  4541  025F  07FD               	addwf	___lldiv@counter,f
  4542  0260                     l1549:	
  4543  0260  1FF3               	btfss	___lldiv@divisor+3,7
  4544  0261  2A63               	goto	u891
  4545  0262  2A64               	goto	u890
  4546  0263                     u891:	
  4547  0263  2A53               	goto	l1547
  4548  0264                     u890:	
  4549  0264                     l1551:	
  4550  0264  3001               	movlw	1
  4551  0265  00F8               	movwf	??___lldiv
  4552  0266                     u905:	
  4553  0266  1003               	clrc
  4554  0267  0DF9               	rlf	___lldiv@quotient,f
  4555  0268  0DFA               	rlf	___lldiv@quotient+1,f
  4556  0269  0DFB               	rlf	___lldiv@quotient+2,f
  4557  026A  0DFC               	rlf	___lldiv@quotient+3,f
  4558  026B  0BF8               	decfsz	??___lldiv,f
  4559  026C  2A66               	goto	u905
  4560  026D                     l1553:	
  4561  026D  0873               	movf	___lldiv@divisor+3,w
  4562  026E  0277               	subwf	___lldiv@dividend+3,w
  4563  026F  1D03               	skipz
  4564  0270  2A7B               	goto	u915
  4565  0271  0872               	movf	___lldiv@divisor+2,w
  4566  0272  0276               	subwf	___lldiv@dividend+2,w
  4567  0273  1D03               	skipz
  4568  0274  2A7B               	goto	u915
  4569  0275  0871               	movf	___lldiv@divisor+1,w
  4570  0276  0275               	subwf	___lldiv@dividend+1,w
  4571  0277  1D03               	skipz
  4572  0278  2A7B               	goto	u915
  4573  0279  0870               	movf	___lldiv@divisor,w
  4574  027A  0274               	subwf	___lldiv@dividend,w
  4575  027B                     u915:	
  4576  027B  1C03               	skipc
  4577  027C  2A7E               	goto	u911
  4578  027D  2A7F               	goto	u910
  4579  027E                     u911:	
  4580  027E  2A8E               	goto	l1559
  4581  027F                     u910:	
  4582  027F                     l1555:	
  4583  027F  0870               	movf	___lldiv@divisor,w
  4584  0280  02F4               	subwf	___lldiv@dividend,f
  4585  0281  0871               	movf	___lldiv@divisor+1,w
  4586  0282  1C03               	skipc
  4587  0283  0F71               	incfsz	___lldiv@divisor+1,w
  4588  0284  02F5               	subwf	___lldiv@dividend+1,f
  4589  0285  0872               	movf	___lldiv@divisor+2,w
  4590  0286  1C03               	skipc
  4591  0287  0F72               	incfsz	___lldiv@divisor+2,w
  4592  0288  02F6               	subwf	___lldiv@dividend+2,f
  4593  0289  0873               	movf	___lldiv@divisor+3,w
  4594  028A  1C03               	skipc
  4595  028B  0F73               	incfsz	___lldiv@divisor+3,w
  4596  028C  02F7               	subwf	___lldiv@dividend+3,f
  4597  028D                     l1557:	
  4598  028D  1479               	bsf	___lldiv@quotient,0
  4599  028E                     l1559:	
  4600  028E  3001               	movlw	1
  4601  028F                     u925:	
  4602  028F  1003               	clrc
  4603  0290  0CF3               	rrf	___lldiv@divisor+3,f
  4604  0291  0CF2               	rrf	___lldiv@divisor+2,f
  4605  0292  0CF1               	rrf	___lldiv@divisor+1,f
  4606  0293  0CF0               	rrf	___lldiv@divisor,f
  4607  0294  3EFF               	addlw	-1
  4608  0295  1D03               	skipz
  4609  0296  2A8F               	goto	u925
  4610  0297                     l1561:	
  4611  0297  3001               	movlw	1
  4612  0298  02FD               	subwf	___lldiv@counter,f
  4613  0299  1D03               	btfss	3,2
  4614  029A  2A9C               	goto	u931
  4615  029B  2A9D               	goto	u930
  4616  029C                     u931:	
  4617  029C  2A64               	goto	l1551
  4618  029D                     u930:	
  4619  029D                     l1563:	
  4620  029D  087C               	movf	___lldiv@quotient+3,w
  4621  029E  00F3               	movwf	?___lldiv+3
  4622  029F  087B               	movf	___lldiv@quotient+2,w
  4623  02A0  00F2               	movwf	?___lldiv+2
  4624  02A1  087A               	movf	___lldiv@quotient+1,w
  4625  02A2  00F1               	movwf	?___lldiv+1
  4626  02A3  0879               	movf	___lldiv@quotient,w
  4627  02A4  00F0               	movwf	?___lldiv
  4628  02A5                     l402:	
  4629  02A5  0008               	return
  4630  02A6                     __end_of___lldiv:	
  4631  007E                     btemp	set	126	;btemp
  4632  007E                     wtemp0	set	126


Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      77
    BANK1            80      0      78
    BANK3            96      0       5
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> ADCB_CHARB(BANK1[5]), uniT_char(BANK1[5]), CONTLUZB_CHAR(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[3]), STR_6(CODE[17]), 
		 -> STR_5(CODE[2]), STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), SONICOU_CHAR(BANK1[5]), ADCA_CHARA(BANK1[5]), CONTU_CHAR(BANK1[5]), 
		 -> decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _lcd_msg->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializacion->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready
    _UART_INIT->___aldiv
    _I2C_INIT->___lldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _itoa->_utoa
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8826
                                             22 BANK0      3     3      0
                           _I2C_INIT
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _SETUP
                          _UART_INIT
                         _UART_WRITE
                            ___awdiv
                            ___awmod
                     _inicializacion
                               _itoa
                            _lcd_cmd
                            _lcd_msg
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     425
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2    1131
                                              3 COMMON     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    3277
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1056
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     425
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_INIT                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INIT
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _SETUP
   _UART_INIT
     ___aldiv
   _UART_WRITE
   ___awdiv
   ___awmod
   _inicializacion
     _lcd_cmd
       _lcd_lat
       _lcd_ready
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_cmd
     _lcd_lat
     _lcd_ready
   _lcd_msg
     _lcd_dwr
       _lcd_lat
       _lcd_ready
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       5       9        5.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AE      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 18 23:11:48 2020

                        pc 0002                __CFG_CP$OFF 0000                         _S0 0049  
                       _S1 0048               ___awdiv@sign 0076                         fsr 0004  
                      l151 0444                        _DC1 002A                        l232 0F52  
                      _DC2 003A                        l161 0F94                        l402 02A5  
                      l250 00C5                        l235 0F5E                        l251 00C8  
                      l155 0771                        l252 00CD                        l244 0F3B  
                      l229 0105                        l181 0F6D                        l238 0F32  
                      l270 023F                        l247 0F45                        l431 0393  
                      l280 0F51                        l441 041B                        l186 0076  
                      l178 0F7F                        l195 0FFF                        l532 01DC  
                      l277 0F47                        l189 004D                        l198 0FB3  
                      l519 030C                        l820 0367                        l638 0183  
                      l822 037E                        l814 0FD9                        l831 009F  
                      l648 013F                        _GIE 005F                        _RA0 0028  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
             __CFG_CPD$OFF 0000                        u710 006A                        u711 0069  
                      u720 0148                        u721 0147                        u810 011E  
                      u811 011D                        u740 015A                        u820 0128  
                      u741 0159                        u821 0127                        u805 0110  
                      u910 027F                        u911 027E                        u735 014C  
                      u760 016B                        u840 013B                        u905 0266  
                      u761 016A                        u841 013A                        u825 0124  
                      u930 029D                        u850 0F58                        u931 029C  
                      u915 027B                        u851 0F57                        u755 015B  
                      u835 012F                        u860 0F5E                        u940 0386  
                      u780 017F                        u925 028F                        u861 0F5D  
                      u941 0385                        u781 017E                        u765 0167  
                      u870 0250                        u950 0397                        u790 010C  
                      u871 024F                        u951 0396                        u775 0173  
                      u791 010B                        u960 03B6                        u961 03B5  
                      u890 0264                        u891 0263                        u980 03CA  
                      u885 0255                        u981 03C9                        u975 03BB  
                      u995 03CC                        _luz 00B9                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       l1501 011A                       l1503 011E  
                     l1511 013B                       l1601 0408                       l1441 0052  
                     l1521 0F79                       l1505 0128                       l1603 0413  
                     l1451 0061                       l1443 0056                       l1523 0F7A  
                     l1515 0F6F                       l1507 012E                       l1611 0327  
                     l1531 0046                       l1541 0F58                       l1701 0F33  
                     l1461 0F62                       l1453 006A                       l1445 0057  
                     l1517 0F74                       l1509 0135                       l1621 034A  
                     l1613 032B                       l1533 0047                       l1551 0264  
                     l1543 0240                       l1703 0F38                       l1463 0F6A  
                     l1455 006B                       l1447 0058                       l1439 004E  
                     l1519 0F78                       l1471 0148                       l1631 0374  
                     l1623 035B                       l1615 0331                       l1607 0310  
                     l1711 0FC2                       l1535 0048                       l1527 003D  
                     l1561 0297                       l1553 026D                       l1545 0250  
                     l1641 0F85                       l1801 01A2                       l1457 0073  
                     l1449 0059                       l1481 016B                       l1473 014B  
                     l1633 037A                       l1625 0363                       l1617 0335  
                     l1609 0314                       l1713 0FC6                       l1705 0FB7  
                     l1529 0042                       l1721 007D                       l1555 027F  
                     l1547 0253                       l1563 029D                       l1651 0103  
                     l1643 00CE                       l1539 0F52                       l1571 0386  
                     l1731 0F4D                       l1811 01C1                       l1803 01A9  
                     l1459 0F5F                       l1483 0171                       l1475 0152  
                     l1467 0140                       l1627 036B                       l1619 0337  
                     l1715 0FCB                       l1707 0FB7                       l1723 0081  
                     l1557 028D                       l1549 0260                       l1653 0104  
                     l1645 00D2                       l1637 0F80                       l1581 03B6  
                     l1573 0397                       l1661 01DD                       l1741 02A6  
                     l1813 01C8                       l1805 01AD                       l1485 0172  
                     l1477 0156                       l1469 0142                       l1493 0106  
                     l1629 0372                       l1709 0FBB                       l1733 0FDA  
                     l1725 008A                       l1901 06A8                       l1559 028E  
                     l1647 00D5                       l1639 0F84                       l1591 03E5  
                     l1583 03B9                       l1575 03A2                       l1567 037F  
                     l1671 023A                       l1663 0236                       l1751 02B6  
                     l1743 02A7                       l1807 01B1                       l1815 01CE  
                     l1487 0179                       l1479 015A                       l1495 010C  
                     l1735 0FDB                       l1727 0092                       l1719 0078  
                     l1911 06FF                       l1903 06C0                       l1831 049A  
                     l1823 041C                       l1649 0102                       l1681 0F3C  
                     l1593 03F3                       l1585 03C6                       l1577 03A6  
                     l1569 0382                       l1673 023D                       l1665 0237  
                     l1729 0F47                       l1761 02CA                       l1753 02BB  
                     l1745 02AB                       l1817 01D3                       l1809 01BB  
                     l1657 0F95                       l1489 017F                       l1497 010F  
                     l1737 0FE9                       l1921 071D                       l1913 0705  
                     l1905 06E6                       l1841 04DA                       l1833 04B2  
                     l1825 0465                       l1691 00B6                       l1683 0F41  
                     l1595 03F4                       l1587 03CA                       l1579 03AE  
                     l1675 023E                       l1667 0238                       l1771 02F0  
                     l1763 02D1                       l1755 02BF                       l1747 02B0  
                     l1819 01D8                       l1499 0116                       l1739 0FEF  
                     l1931 074A                       l1923 0726                       l1915 0708  
                     l1907 06F4                       l1851 051C                       l1843 04E8  
                     l1835 04C0                       l1827 0474                       l1693 00BB  
                     l1685 00A0                       l1677 0F2A                       l1597 03FD  
                     l1589 03D3                       l1669 0239                       l1781 0308  
                     l1773 02F1                       l1765 02D5                       l1757 02C1  
                     l1749 02B2                       l1941 076D                       l1933 0753  
                     l1925 072F                       l1917 070E                       l1909 06FA  
                     l1861 0594                       l1853 0542                       l1845 04ED  
                     l1837 04CC                       l1829 048C                       l1695 00C1  
                     l1687 00A5                       l1679 0F2F                       l1599 0403  
                     l1775 02F8                       l1767 02D9                       l1759 02C7  
                     l1791 018E                       l1951 07BF                       l1943 0777  
                     l1927 0738                       l1919 0717                       l1935 075C  
                     l1871 05E5                       l1863 05AC                       l1855 0550  
                     l1847 04FC                       l1839 04D1                       l1697 00C9  
                     l1689 00AD                       l1769 02EA                       l1777 02FE  
                     l1793 0190                       l1785 0184                       l1953 07C5  
                     l1945 0780                       l1937 0762                       l1929 0741  
                     l1881 0630                       l1873 05EE                       l1865 05BA  
                     l1857 057D                       l1849 0504                       l1779 0303  
                     l1795 0194                       l1787 0185                       l1955 07CB  
                     l1939 0767                       l1947 07B3                       l1891 0675  
                     l1883 063E                       l1875 05FC                       l1867 05D2  
                     l1859 058C                       l1797 0199                       l1789 0189  
                     l1957 07D1                       l1949 07B9                       l1893 067E  
                     l1885 0656                       l1877 0610                       l1869 05E0  
                     l1799 019F                       l1895 068C                       l1887 0664  
                     l1879 0618                       l1897 0691                       l1889 0670  
                     l1899 06A0                       STR_1 0024                       STR_2 003A  
                     STR_3 0037                       STR_4 0037                       STR_5 003A  
                     STR_6 0013                       STR_7 0039                       STR_8 0036  
                     STR_9 0035                       u1000 03E5                       u1001 03E4  
                     u1020 0403                       u1021 0402                       u1005 03E1  
                     u1101 0218                       u1110 00C1                       u1030 0408  
                     u1102 0219                       u1111 00C0                       u1031 0407  
                     u1015 03F5                       u1103 021E                       u1104 021F  
                     u1040 0331                       u1120 0FBB                       u1105 0224  
                     u1041 0330                       u1121 0FBA                       u1106 0225  
                     u1210 02D9                       u1050 0363                       u1130 0089  
                     u1211 02D8                       u1051 0362                       u1131 0088  
                     u1060 037A                       u1140 009F                       u1205 02CB  
                     u1061 0379                       u1141 009E                       u1070 00E5  
                     u1150 0F4D                       u1230 02EA                       u1310 01B1  
                     u1151 0F4C                       u1231 02E9                       u1311 01B0  
                     u1080 01ED                       u1320 01BB                       u1160 0FFF  
                     u1225 02DA                       u1321 01BA                       u1305 01A3  
                     u1161 0FFE                       u1090 0206                       u1250 02FE  
                     u1170 02AB                       u1075 00E0                       u1251 02FD  
                     u1235 02E6                       u1171 02AA                       u1260 0303  
                     u1180 02B6                       u1340 01CE                       u1085 01E8  
                     u1261 0302                       u1245 02F2                       u1181 02B5  
                     u1341 01CD                       u1325 01B7                       u1190 02C7  
                     u1350 01D3                       u1270 0189                       u1095 0201  
                     u1191 02C6                       u1351 01D2                       u1335 01C2  
                     u1271 0188                       u1407 046D                       u1280 0194  
                     u1360 06FA                       u1281 0193                       u1361 06F9  
                     u1417 04F5                       u1290 019F                       u1370 06FF  
                     u1291 019E                       u1371 06FE                       u1427 0585  
                     u1380 0762                       u1381 0761                       u1437 0609  
                     u1390 0767                       u1391 0766                       u1447 0699  
                     u1457 07D9                       u1467 005D                       u1477 006F  
                     u1487 0F66                       _PEIE 005E                       _RCEN 048B  
             __CFG_WRT$OFF 0000           __end_of_I2C_INIT 0106                       _decT 0040  
                     _main 041C                       _itoa 0FB4                       _uniT 0042  
                     btemp 007E                       _utoa 030D                       start 0000  
            __CFG_IESO$OFF 0000           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070            __end_of___aldiv 041C                      ?_main 0070  
                    _ADC_A 0024                      ?_itoa 0058            __end_of___awdiv 030D  
            __CFG_WDTE$OFF 0000            __end_of___awmod 01DD                      _ANSEL 0188  
          __end_of___lldiv 02A6                      ?_utoa 0078            ___awdiv@divisor 0070  
                    _CONTD 0032                      _CONTU 002E            __end_of___lwdiv 0184  
          __end_of___lwmod 0140            ___awdiv@counter 0075                      _RCREG 001A  
              ?_UART_WRITE 0070                      _SETUP 0F80                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _LUZ_A 0034  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019         __size_of_UART_INIT 0063  
           __CFG_FCMEN$OFF 0000            __end_of_lcd_cmd 0F80            __end_of_lcd_lat 0F6E  
          __end_of_lcd_dwr 004E            __end_of_lcd_msg 1000                      _decHR 003C  
                    _uniHR 003E             __CFG_BOREN$OFF 0000                      pclath 000A  
                    utoa@c 0056                      utoa@v 0054                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07E4  
             __end_of_main 07E4               __end_of_itoa 0FDA               __end_of_utoa 037F  
                I2C_INIT@c 0054                     ??_main 006A                     ??_itoa 007D  
                   ??_utoa 007C                     ?_SETUP 0070          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___awdiv@dividend 0072                     _ANSELH 0189                     _SONICO 004B  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
  __size_of_inicializacion 001F                     _SSPCON 0014                     _SSPBUF 0013  
           __CFG_PWRTE$OFF 0000        __size_of_UART_WRITE 000C          __end_of_UART_INIT 0240  
                ??___aldiv 0078                  ??___awdiv 0074                  ??___awmod 0074  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 0074  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_lcd_cmd 0072                  ??_lcd_lat 0070                     _strcat 0077  
                ??_lcd_dwr 0072                  ??_lcd_msg 0075                  ?_I2C_INIT 0054  
           UART_WRITE@data 0070    __end_of__initialization 07FC              __end_of_SETUP 0F95  
           __pcstackCOMMON 0070                 ??_I2C_INIT 0058                    ??_SETUP 0070  
       __size_of_lcd_ready 0029                 __pbssBANK0 0020                 __pbssBANK1 00A0  
               __pbssBANK3 0190                 __pmaintext 041C                    _ADC_1_A 0028  
                  _ADC_1_B 0026                    ?_strcat 0070               ??_UART_WRITE 0070  
                  _SONICOD 0030                    _SONICOU 002C                    _LUZ_1_A 0038  
                  _LUZ_1_B 0036                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _inicializacion 0F95                    _T_byte1 004A  
       __end_of_UART_WRITE 0F52          __end_of_lcd_ready 0077                    ___aldiv 037F  
                  ___awdiv 02A6                    ___awmod 0184                    ___lldiv 0240  
                  ___lwdiv 0140                    ___lwmod 0106                    __ptext1 0077  
                  __ptext2 0FDA                    __ptext3 003C                    __ptext4 0FB4  
                  __ptext5 030D                    __ptext6 0106                    __ptext7 0140  
                  __ptext8 0F95                    __ptext9 0F6E                    _lcd_cmd 0F6E  
                  _lcd_lat 0F5F                    _lcd_dwr 003C                    _lcd_msg 0FDA  
          __size_of_strcat 0029           ___awmod@dividend 0072           ___aldiv@dividend 0074  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  clrloop0 0F23                    _voltage 00BD     __end_of_inicializacion 0FB4  
     end_of_initialization 07FC                    itoa@buf 005D                    itoa@val 0058  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018           ___aldiv@quotient 0056  
         I2C_Master_Read@a 0070                    utoa@buf 0057                    utoa@val 0078  
                _UART_INIT 01DD                  _TRISCbits 0087          __size_of_I2C_INIT 0038  
          ?_inicializacion 0070                  _TXSTAbits 0098                 ?_UART_INIT 005A  
           __end_of_strcat 00A0        start_initialization 07E4          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                   ??_strcat 0071  
                ___latbits 0002              __pcstackBANK0 0054                  _decT_char 00C1  
         _I2C_Master_Start 0F2A           _I2C_Master_Write 0F3C           ___lwdiv@dividend 0072  
                 ?___aldiv 0070                   ?___awdiv 0070                   ?___awmod 0070  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0070  
              ??_UART_INIT 005E                  _lcd_ready 004E                  __pstrings 0003  
                 ?_lcd_cmd 0070                   ?_lcd_lat 0070                   ?_lcd_dwr 0070  
                 ?_lcd_msg 0073                   _I2C_INIT 00CE             __size_of_SETUP 0015  
         ___lwdiv@quotient 0075                   _CONTADOR 004D                   _CONTLUZA 0046  
                 _CONTLUZB 0044            ___aldiv@divisor 0070            ___aldiv@counter 0054  
       _analogic_digital_a 004E         _analogic_digital_b 004C                  clear_ram0 0F22  
                 _PIR1bits 000C                   _POINTERA 0190                   _POINTERB 00A5  
                _uniT_char 00C6                 _ADCA_CHARA 00D0                 _ADCB_CHARB 00CB  
               _ADCC_CHARC 00A0                 ?_lcd_ready 0070                __stringbase 0012  
         ??_inicializacion 0073        I2C_Master_Read@temp 0074              _CONTLUZA_CHAR 004F  
            _CONTLUZB_CHAR 00E9           __size_of___aldiv 009D           __size_of___awdiv 0067  
         __size_of___awmod 0059           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                   _decT_int 0020  
         __size_of_lcd_cmd 0012           __size_of_lcd_lat 000F           __size_of_lcd_dwr 0012  
         __size_of_lcd_msg 0026            _I2C_Master_Read 00A0            _I2C_Master_Wait 0F52  
               strcat@from 0070            _I2C_Master_Stop 0F33            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 004E                   __ptext11 0F5F  
                 __ptext20 0F2A                   __ptext12 0184                   __ptext21 00A0  
                 __ptext13 02A6                   __ptext22 0F52                   __ptext14 0F46  
                 __ptext23 00CE                   __ptext15 01DD                   __ptext24 0240  
                 __ptext16 037F                   __ptext17 0F80                   __ptext18 0F3C  
                 __ptext19 0F33          __CFG_BOR4V$BOR40V 0000                 _CONTD_CHAR 00DA  
               _CONTU_CHAR 00D5          UART_INIT@baudrate 005A              __size_of_main 03C8  
             _SONICOD_CHAR 00E4              __size_of_itoa 0026              __size_of_utoa 0072  
             _SONICOU_CHAR 00DF                   _uniT_int 0022                   lcd_cmd@x 0072  
                 lcd_dwr@x 0072                   lcd_msg@c 0073                ??_lcd_ready 0070  
 __end_of_I2C_Master_Start 0F33   __end_of_I2C_Master_Write 0F46                   itoa@base 005A  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 000D  
  __end_of_I2C_Master_Read 00CE    __end_of_I2C_Master_Wait 0F5F    __end_of_I2C_Master_Stop 0F3C  
                 utoa@base 007A                   strcat@cp 0073                 _LUZA_CHARA 00B4  
                 strcat@to 0072                 _LUZB_CHARB 00AF                 _UART_WRITE 0F46  
               _LUZC_CHARC 00AA           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003               ___aldiv@sign 0055                _SSPCON2bits 0091  
