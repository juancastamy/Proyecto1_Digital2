

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Mar 17 15:41:02 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008F                     	;# 
   117  0090                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0095                     	;# 
   125  0096                     	;# 
   126  0097                     	;# 
   127  0098                     	;# 
   128  0099                     	;# 
   129  009A                     	;# 
   130  009B                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  0105                     	;# 
   136  0107                     	;# 
   137  0108                     	;# 
   138  0109                     	;# 
   139  010C                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  0185                     	;# 
   145  0187                     	;# 
   146  0188                     	;# 
   147  0189                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0094                     	;# 
   202  0095                     	;# 
   203  0096                     	;# 
   204  0097                     	;# 
   205  0098                     	;# 
   206  0099                     	;# 
   207  009A                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  009F                     	;# 
   213  0105                     	;# 
   214  0107                     	;# 
   215  0108                     	;# 
   216  0109                     	;# 
   217  010C                     	;# 
   218  010C                     	;# 
   219  010D                     	;# 
   220  010E                     	;# 
   221  010F                     	;# 
   222  0185                     	;# 
   223  0187                     	;# 
   224  0188                     	;# 
   225  0189                     	;# 
   226  018C                     	;# 
   227  018D                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  000E                     	;# 
   243  000E                     	;# 
   244  000F                     	;# 
   245  0010                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001D                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  0081                     	;# 
   264  0085                     	;# 
   265  0086                     	;# 
   266  0087                     	;# 
   267  0088                     	;# 
   268  0089                     	;# 
   269  008C                     	;# 
   270  008D                     	;# 
   271  008E                     	;# 
   272  008F                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0095                     	;# 
   281  0096                     	;# 
   282  0097                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009A                     	;# 
   286  009B                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  0105                     	;# 
   292  0107                     	;# 
   293  0108                     	;# 
   294  0109                     	;# 
   295  010C                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  010E                     	;# 
   299  010F                     	;# 
   300  0185                     	;# 
   301  0187                     	;# 
   302  0188                     	;# 
   303  0189                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  008F                     	;# 
   351  0090                     	;# 
   352  0091                     	;# 
   353  0092                     	;# 
   354  0093                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0095                     	;# 
   359  0096                     	;# 
   360  0097                     	;# 
   361  0098                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009C                     	;# 
   366  009D                     	;# 
   367  009E                     	;# 
   368  009F                     	;# 
   369  0105                     	;# 
   370  0107                     	;# 
   371  0108                     	;# 
   372  0109                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0185                     	;# 
   379  0187                     	;# 
   380  0188                     	;# 
   381  0189                     	;# 
   382  018C                     	;# 
   383  018D                     	;# 
   384  0000                     	;# 
   385  0001                     	;# 
   386  0002                     	;# 
   387  0003                     	;# 
   388  0004                     	;# 
   389  0005                     	;# 
   390  0006                     	;# 
   391  0007                     	;# 
   392  0008                     	;# 
   393  0009                     	;# 
   394  000A                     	;# 
   395  000B                     	;# 
   396  000C                     	;# 
   397  000D                     	;# 
   398  000E                     	;# 
   399  000E                     	;# 
   400  000F                     	;# 
   401  0010                     	;# 
   402  0011                     	;# 
   403  0012                     	;# 
   404  0013                     	;# 
   405  0014                     	;# 
   406  0015                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0017                     	;# 
   410  0018                     	;# 
   411  0019                     	;# 
   412  001A                     	;# 
   413  001B                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001D                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  0081                     	;# 
   420  0085                     	;# 
   421  0086                     	;# 
   422  0087                     	;# 
   423  0088                     	;# 
   424  0089                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0105                     	;# 
   448  0107                     	;# 
   449  0108                     	;# 
   450  0109                     	;# 
   451  010C                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  010E                     	;# 
   455  010F                     	;# 
   456  0185                     	;# 
   457  0187                     	;# 
   458  0188                     	;# 
   459  0189                     	;# 
   460  018C                     	;# 
   461  018D                     	;# 
   462  0019                     _TXREG	set	25
   463  001A                     _RCREG	set	26
   464  000C                     _PIR1bits	set	12
   465  0018                     _RCSTAbits	set	24
   466  0013                     _SSPBUF	set	19
   467  0014                     _SSPCON	set	20
   468  0009                     _PORTE	set	9
   469  0008                     _PORTD	set	8
   470  0007                     _PORTC	set	7
   471  0006                     _PORTB	set	6
   472  0005                     _PORTA	set	5
   473  0063                     _SSPIF	set	99
   474  005E                     _PEIE	set	94
   475  005F                     _GIE	set	95
   476  0047                     _RD7	set	71
   477  0046                     _RD6	set	70
   478  0045                     _RD5	set	69
   479  0028                     _RA0	set	40
   480  0098                     _TXSTAbits	set	152
   481  0099                     _SPBRG	set	153
   482  0091                     _SSPCON2bits	set	145
   483  0087                     _TRISCbits	set	135
   484  0094                     _SSPSTAT	set	148
   485  0093                     _SSPADD	set	147
   486  0091                     _SSPCON2	set	145
   487  0089                     _TRISE	set	137
   488  0088                     _TRISD	set	136
   489  0087                     _TRISC	set	135
   490  0086                     _TRISB	set	134
   491  0085                     _TRISA	set	133
   492  0463                     _SSPIE	set	1123
   493  043C                     _TRISC4	set	1084
   494  043B                     _TRISC3	set	1083
   495  048B                     _RCEN	set	1163
   496  0189                     _ANSELH	set	393
   497  0188                     _ANSEL	set	392
   498                           
   499                           	psect	strings
   500  0003                     __pstrings:	
   501  0003                     stringtab:	
   502  0003                     __stringtab:	
   503                           
   504                           ;	String table - string pointers are 1 byte each
   505  0003  1BFF               	btfsc	btemp+1,7
   506  0004  280D               	ljmp	stringcode
   507  0005  1383               	bcf	3,7
   508  0006  187F               	btfsc	btemp+1,0
   509  0007  1783               	bsf	3,7
   510  0008  0800               	movf	0,w
   511  0009  0A84               	incf	4,f
   512  000A  1903               	skipnz
   513  000B  0AFF               	incf	btemp+1,f
   514  000C  0008               	return
   515  000D                     stringcode:	
   516  000D                     stringdir:	
   517  000D  3000               	movlw	high stringdir
   518  000E  008A               	movwf	10
   519  000F  0804               	movf	4,w
   520  0010  0A84               	incf	4,f
   521  0011  0782               	addwf	2,f
   522  0012                     __stringbase:	
   523  0012  3400               	retlw	0
   524  0013                     __end_of__stringtab:	
   525  0013                     STR_6:	
   526  0013  3420               	retlw	32	;' '
   527  0014  3446               	retlw	70	;'F'
   528  0015  3455               	retlw	85	;'U'
   529  0016  3445               	retlw	69	;'E'
   530  0017  3452               	retlw	82	;'R'
   531  0018  345A               	retlw	90	;'Z'
   532  0019  3441               	retlw	65	;'A'
   533  001A  3420               	retlw	32	;' '
   534  001B  3455               	retlw	85	;'U'
   535  001C  344C               	retlw	76	;'L'
   536  001D  3454               	retlw	84	;'T'
   537  001E  3452               	retlw	82	;'R'
   538  001F  3441               	retlw	65	;'A'
   539  0020  3420               	retlw	32	;' '
   540  0021  3420               	retlw	32	;' '
   541  0022  3420               	retlw	32	;' '
   542  0023  3400               	retlw	0
   543  0024                     STR_1:	
   544  0024  3454               	retlw	84	;'T'
   545  0025  3445               	retlw	69	;'E'
   546  0026  344D               	retlw	77	;'M'
   547  0027  3450               	retlw	80	;'P'
   548  0028  3420               	retlw	32	;' '
   549  0029  3443               	retlw	67	;'C'
   550  002A  3441               	retlw	65	;'A'
   551  002B  3452               	retlw	82	;'R'
   552  002C  3452               	retlw	82	;'R'
   553  002D  344F               	retlw	79	;'O'
   554  002E  3453               	retlw	83	;'S'
   555  002F  3420               	retlw	32	;' '
   556  0030  344C               	retlw	76	;'L'
   557  0031  3455               	retlw	85	;'U'
   558  0032  345A               	retlw	90	;'Z'
   559  0033  3420               	retlw	32	;' '
   560  0034  3400               	retlw	0
   561  0035                     STR_9:	
   562  0035  3420               	retlw	32	;' '
   563  0036  3420               	retlw	32	;' '
   564  0037  3420               	retlw	32	;' '
   565  0038  3420               	retlw	32	;' '
   566  0039  3420               	retlw	32	;' '
   567  003A  3420               	retlw	32	;' '
   568  003B  3400               	retlw	0
   569  003A                     
   570                           ; #config settings
   571  0000                     
   572                           	psect	cinit
   573  07E4                     start_initialization:	
   574  07E4                     __initialization:	
   575                           
   576                           ; Clear objects allocated to BANK0
   577  07E4  1383               	bcf	3,7	;select IRP bank0
   578  07E5  3020               	movlw	low __pbssBANK0
   579  07E6  0084               	movwf	4
   580  07E7  3054               	movlw	low (__pbssBANK0+52)
   581  07E8  120A  158A  271B  120A  118A  	fcall	clear_ram0
   582                           
   583                           ; Clear objects allocated to BANK1
   584  07ED  30A0               	movlw	low __pbssBANK1
   585  07EE  0084               	movwf	4
   586  07EF  30EE               	movlw	low (__pbssBANK1+78)
   587  07F0  120A  158A  271B  120A  118A  	fcall	clear_ram0
   588                           
   589                           ; Clear objects allocated to BANK3
   590  07F5  1683               	bsf	3,5	;RP0=1, select bank3
   591  07F6  1703               	bsf	3,6	;RP1=1, select bank3
   592  07F7  0190               	clrf	__pbssBANK3& (0+127)
   593  07F8  0191               	clrf	(__pbssBANK3+1)& (0+127)
   594  07F9  0192               	clrf	(__pbssBANK3+2)& (0+127)
   595  07FA  0193               	clrf	(__pbssBANK3+3)& (0+127)
   596  07FB  0194               	clrf	(__pbssBANK3+4)& (0+127)
   597  07FC                     end_of_initialization:	
   598                           ;End of C runtime variable initialization code
   599                           
   600  07FC                     __end_of__initialization:	
   601  07FC  0183               	clrf	3
   602  07FD  120A  118A  2BFB   	ljmp	_main	;jump to C main() function
   603                           
   604                           	psect	bssBANK0
   605  0020                     __pbssBANK0:	
   606  0020                     _decT_int:	
   607  0020                     	ds	2
   608  0022                     _uniT_int:	
   609  0022                     	ds	2
   610  0024                     _ADC_A:	
   611  0024                     	ds	2
   612  0026                     _ADC_1_B:	
   613  0026                     	ds	2
   614  0028                     _ADC_1_A:	
   615  0028                     	ds	2
   616  002A                     _DC1:	
   617  002A                     	ds	2
   618  002C                     _SONICOU:	
   619  002C                     	ds	2
   620  002E                     _CONTU:	
   621  002E                     	ds	2
   622  0030                     _SONICOD:	
   623  0030                     	ds	2
   624  0032                     _CONTD:	
   625  0032                     	ds	2
   626  0034                     _LUZ_A:	
   627  0034                     	ds	2
   628  0036                     _LUZ_1_B:	
   629  0036                     	ds	2
   630  0038                     _LUZ_1_A:	
   631  0038                     	ds	2
   632  003A                     _DC2:	
   633  003A                     	ds	2
   634  003C                     _decHR:	
   635  003C                     	ds	2
   636  003E                     _uniHR:	
   637  003E                     	ds	2
   638  0040                     _decT:	
   639  0040                     	ds	2
   640  0042                     _uniT:	
   641  0042                     	ds	2
   642  0044                     _CONTLUZB:	
   643  0044                     	ds	2
   644  0046                     _CONTLUZA:	
   645  0046                     	ds	2
   646  0048                     _S1:	
   647  0048                     	ds	1
   648  0049                     _S0:	
   649  0049                     	ds	1
   650  004A                     _T_byte1:	
   651  004A                     	ds	1
   652  004B                     _SONICO:	
   653  004B                     	ds	1
   654  004C                     _analogic_digital_b:	
   655  004C                     	ds	1
   656  004D                     _CONTADOR:	
   657  004D                     	ds	1
   658  004E                     _analogic_digital_a:	
   659  004E                     	ds	1
   660  004F                     _CONTLUZA_CHAR:	
   661  004F                     	ds	5
   662                           
   663                           	psect	bssBANK1
   664  00A0                     __pbssBANK1:	
   665  00A0                     _ADCC_CHARC:	
   666  00A0                     	ds	5
   667  00A5                     _POINTERB:	
   668  00A5                     	ds	5
   669  00AA                     _LUZC_CHARC:	
   670  00AA                     	ds	5
   671  00AF                     _LUZB_CHARB:	
   672  00AF                     	ds	5
   673  00B4                     _LUZA_CHARA:	
   674  00B4                     	ds	5
   675  00B9                     _luz:	
   676  00B9                     	ds	4
   677  00BD                     _voltage:	
   678  00BD                     	ds	4
   679  00C1                     _decT_char:	
   680  00C1                     	ds	5
   681  00C6                     _uniT_char:	
   682  00C6                     	ds	5
   683  00CB                     _ADCB_CHARB:	
   684  00CB                     	ds	5
   685  00D0                     _ADCA_CHARA:	
   686  00D0                     	ds	5
   687  00D5                     _CONTU_CHAR:	
   688  00D5                     	ds	5
   689  00DA                     _CONTD_CHAR:	
   690  00DA                     	ds	5
   691  00DF                     _SONICOU_CHAR:	
   692  00DF                     	ds	5
   693  00E4                     _SONICOD_CHAR:	
   694  00E4                     	ds	5
   695  00E9                     _CONTLUZB_CHAR:	
   696  00E9                     	ds	5
   697                           
   698                           	psect	bssBANK3
   699  0190                     __pbssBANK3:	
   700  0190                     _POINTERA:	
   701  0190                     	ds	5
   702                           
   703                           	psect	clrtext
   704  0F1B                     clear_ram0:	
   705                           ;	Called with FSR containing the base address, and
   706                           ;	W with the last address+1
   707                           
   708  0F1B  0064               	clrwdt	;clear the watchdog before getting into this loop
   709  0F1C                     clrloop0:	
   710  0F1C  0180               	clrf	0	;clear RAM location pointed to by FSR
   711  0F1D  0A84               	incf	4,f	;increment pointer
   712  0F1E  0604               	xorwf	4,w	;XOR with final address
   713  0F1F  1903               	btfsc	3,2	;have we reached the end yet?
   714  0F20  3400               	retlw	0	;all done for this memory range, return
   715  0F21  0604               	xorwf	4,w	;XOR again to restore value
   716  0F22  2F1C               	goto	clrloop0	;do the next byte
   717                           
   718                           	psect	cstackCOMMON
   719  0070                     __pcstackCOMMON:	
   720  0070                     ?_SETUP:	
   721  0070                     ??_SETUP:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?_I2C_Master_Start:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ??_I2C_Master_Start:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ?_I2C_Master_Write:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?_I2C_Master_Stop:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ??_I2C_Master_Stop:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ?_UART_WRITE:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ??_UART_WRITE:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_strcat:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_lcd_cmd:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_lcd_ready:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_lcd_ready:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_lcd_lat:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ??_lcd_lat:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_main:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     ?_lcd_dwr:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     ?_I2C_Master_Wait:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ??_I2C_Master_Wait:	
   773                           ; 1 bytes @ 0x0
   774                           
   775  0070                     ?_I2C_Master_Read:	
   776                           ; 1 bytes @ 0x0
   777                           
   778  0070                     ?___awdiv:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ?___awmod:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ?___lwdiv:	
   785                           ; 2 bytes @ 0x0
   786                           
   787  0070                     ?___lwmod:	
   788                           ; 2 bytes @ 0x0
   789                           
   790  0070                     ?___lldiv:	
   791                           ; 2 bytes @ 0x0
   792                           
   793  0070                     ?___aldiv:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     UART_WRITE@data:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0070                     strcat@from:	
   800                           ; 1 bytes @ 0x0
   801                           
   802  0070                     I2C_Master_Write@d:	
   803                           ; 1 bytes @ 0x0
   804                           
   805  0070                     I2C_Master_Read@a:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0070                     ___awdiv@divisor:	
   809                           ; 2 bytes @ 0x0
   810                           
   811  0070                     ___awmod@divisor:	
   812                           ; 2 bytes @ 0x0
   813                           
   814  0070                     ___lwdiv@divisor:	
   815                           ; 2 bytes @ 0x0
   816                           
   817  0070                     ___lwmod@divisor:	
   818                           ; 2 bytes @ 0x0
   819                           
   820  0070                     ___lldiv@divisor:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0070                     ___aldiv@divisor:	
   824                           ; 4 bytes @ 0x0
   825                           
   826                           
   827                           ; 4 bytes @ 0x0
   828  0070                     	ds	1
   829  0071                     ??_strcat:	
   830                           
   831                           ; 1 bytes @ 0x1
   832  0071                     	ds	1
   833  0072                     ??_I2C_Master_Write:	
   834  0072                     ??_I2C_Master_Read:	
   835                           ; 1 bytes @ 0x2
   836                           
   837  0072                     ??_lcd_cmd:	
   838                           ; 1 bytes @ 0x2
   839                           
   840  0072                     ??_lcd_dwr:	
   841                           ; 1 bytes @ 0x2
   842                           
   843  0072                     lcd_cmd@x:	
   844                           ; 1 bytes @ 0x2
   845                           
   846  0072                     lcd_dwr@x:	
   847                           ; 1 bytes @ 0x2
   848                           
   849  0072                     strcat@to:	
   850                           ; 1 bytes @ 0x2
   851                           
   852  0072                     ___awdiv@dividend:	
   853                           ; 1 bytes @ 0x2
   854                           
   855  0072                     ___awmod@dividend:	
   856                           ; 2 bytes @ 0x2
   857                           
   858  0072                     ___lwdiv@dividend:	
   859                           ; 2 bytes @ 0x2
   860                           
   861  0072                     ___lwmod@dividend:	
   862                           ; 2 bytes @ 0x2
   863                           
   864                           
   865                           ; 2 bytes @ 0x2
   866  0072                     	ds	1
   867  0073                     ?_lcd_msg:	
   868  0073                     strcat@cp:	
   869                           ; 1 bytes @ 0x3
   870                           
   871  0073                     lcd_msg@c:	
   872                           ; 1 bytes @ 0x3
   873                           
   874                           
   875                           ; 2 bytes @ 0x3
   876  0073                     	ds	1
   877  0074                     ??___awdiv:	
   878  0074                     ??___awmod:	
   879                           ; 1 bytes @ 0x4
   880                           
   881  0074                     ??___lwdiv:	
   882                           ; 1 bytes @ 0x4
   883                           
   884  0074                     ??___lwmod:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     I2C_Master_Read@temp:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     ___lldiv@dividend:	
   891                           ; 2 bytes @ 0x4
   892                           
   893  0074                     ___aldiv@dividend:	
   894                           ; 4 bytes @ 0x4
   895                           
   896                           
   897                           ; 4 bytes @ 0x4
   898  0074                     	ds	1
   899  0075                     ??_lcd_msg:	
   900  0075                     ___awdiv@counter:	
   901                           ; 1 bytes @ 0x5
   902                           
   903  0075                     ___awmod@counter:	
   904                           ; 1 bytes @ 0x5
   905                           
   906  0075                     ___lwmod@counter:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     ___lwdiv@quotient:	
   910                           ; 1 bytes @ 0x5
   911                           
   912                           
   913                           ; 2 bytes @ 0x5
   914  0075                     	ds	1
   915  0076                     ___awdiv@sign:	
   916  0076                     ___awmod@sign:	
   917                           ; 1 bytes @ 0x6
   918                           
   919                           
   920                           ; 1 bytes @ 0x6
   921  0076                     	ds	1
   922  0077                     ___lwdiv@counter:	
   923  0077                     ___awdiv@quotient:	
   924                           ; 1 bytes @ 0x7
   925                           
   926                           
   927                           ; 2 bytes @ 0x7
   928  0077                     	ds	1
   929  0078                     ?_utoa:	
   930  0078                     ??___lldiv:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0078                     ??___aldiv:	
   934                           ; 1 bytes @ 0x8
   935                           
   936  0078                     utoa@val:	
   937                           ; 1 bytes @ 0x8
   938                           
   939                           
   940                           ; 2 bytes @ 0x8
   941  0078                     	ds	1
   942  0079                     ___lldiv@quotient:	
   943                           
   944                           ; 4 bytes @ 0x9
   945  0079                     	ds	1
   946  007A                     utoa@base:	
   947                           
   948                           ; 2 bytes @ 0xA
   949  007A                     	ds	2
   950  007C                     ??_utoa:	
   951                           
   952                           ; 1 bytes @ 0xC
   953  007C                     	ds	1
   954  007D                     ??_itoa:	
   955  007D                     ___lldiv@counter:	
   956                           ; 1 bytes @ 0xD
   957                           
   958                           
   959                           ; 1 bytes @ 0xD
   960  007D                     	ds	1
   961                           
   962                           	psect	cstackBANK0
   963  0054                     __pcstackBANK0:	
   964  0054                     ?_I2C_INIT:	
   965  0054                     ___aldiv@counter:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0054                     utoa@v:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0054                     I2C_INIT@c:	
   972                           ; 2 bytes @ 0x0
   973                           
   974                           
   975                           ; 4 bytes @ 0x0
   976  0054                     	ds	1
   977  0055                     ___aldiv@sign:	
   978                           
   979                           ; 1 bytes @ 0x1
   980  0055                     	ds	1
   981  0056                     utoa@c:	
   982  0056                     ___aldiv@quotient:	
   983                           ; 1 bytes @ 0x2
   984                           
   985                           
   986                           ; 4 bytes @ 0x2
   987  0056                     	ds	1
   988  0057                     utoa@buf:	
   989                           
   990                           ; 1 bytes @ 0x3
   991  0057                     	ds	1
   992  0058                     ??_I2C_INIT:	
   993  0058                     ?_itoa:	
   994                           ; 1 bytes @ 0x4
   995                           
   996  0058                     itoa@val:	
   997                           ; 1 bytes @ 0x4
   998                           
   999                           
  1000                           ; 2 bytes @ 0x4
  1001  0058                     	ds	2
  1002  005A                     ?_UART_INIT:	
  1003  005A                     itoa@base:	
  1004                           ; 1 bytes @ 0x6
  1005                           
  1006  005A                     UART_INIT@baudrate:	
  1007                           ; 2 bytes @ 0x6
  1008                           
  1009                           
  1010                           ; 4 bytes @ 0x6
  1011  005A                     	ds	3
  1012  005D                     itoa@buf:	
  1013                           
  1014                           ; 1 bytes @ 0x9
  1015  005D                     	ds	1
  1016  005E                     ??_UART_INIT:	
  1017                           
  1018                           ; 1 bytes @ 0xA
  1019  005E                     	ds	12
  1020  006A                     ??_main:	
  1021                           
  1022                           ; 1 bytes @ 0x16
  1023  006A                     	ds	3
  1024                           
  1025                           	psect	maintext
  1026  03FB                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 95 in file "MASTERR_I2C.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : B00/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          0       3       0       0       0
  1049 ;;      Totals:         0       3       0       0       0
  1050 ;;Total ram usage:        3 bytes
  1051 ;; Hardware stack levels required when called:    3
  1052 ;; This function calls:
  1053 ;;		_I2C_INIT
  1054 ;;		_I2C_Master_Read
  1055 ;;		_I2C_Master_Start
  1056 ;;		_I2C_Master_Stop
  1057 ;;		_I2C_Master_Write
  1058 ;;		_SETUP
  1059 ;;		_UART_INIT
  1060 ;;		_UART_WRITE
  1061 ;;		___awdiv
  1062 ;;		___awmod
  1063 ;;		_itoa
  1064 ;;		_lcd_cmd
  1065 ;;		_lcd_msg
  1066 ;;		_strcat
  1067 ;; This function is called by:
  1068 ;;		Startup code after reset
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _main
  1074  03FB                     _main:	
  1075  03FB                     l1825:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1078                           
  1079                           
  1080                           ;MASTERR_I2C.c: 96:     SETUP();
  1081  03FB  120A  118A  2041  120A  118A  	fcall	_SETUP
  1082                           
  1083                           ;MASTERR_I2C.c: 97:     I2C_INIT(100000);
  1084  0400  3000               	movlw	0
  1085  0401  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0402  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0403  00D7               	movwf	I2C_INIT@c+3
  1088  0404  3001               	movlw	1
  1089  0405  00D6               	movwf	I2C_INIT@c+2
  1090  0406  3086               	movlw	134
  1091  0407  00D5               	movwf	I2C_INIT@c+1
  1092  0408  30A0               	movlw	160
  1093  0409  00D4               	movwf	I2C_INIT@c
  1094  040A  120A  118A  20AD  120A  118A  	fcall	_I2C_INIT
  1095                           
  1096                           ;MASTERR_I2C.c: 98:     UART_INIT(9600);
  1097  040F  3000               	movlw	0
  1098  0410  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0411  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0412  00DD               	movwf	UART_INIT@baudrate+3
  1101  0413  3000               	movlw	0
  1102  0414  00DC               	movwf	UART_INIT@baudrate+2
  1103  0415  3025               	movlw	37
  1104  0416  00DB               	movwf	UART_INIT@baudrate+1
  1105  0417  3080               	movlw	128
  1106  0418  00DA               	movwf	UART_INIT@baudrate
  1107  0419  120A  118A  21BC  120A  118A  	fcall	_UART_INIT
  1108  041E                     l149:	
  1109                           ;MASTERR_I2C.c: 100:     while(1){
  1110                           
  1111                           
  1112                           ;MASTERR_I2C.c: 102:         I2C_Master_Start();
  1113  041E  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Start
  1114                           
  1115                           ;MASTERR_I2C.c: 103:         I2C_Master_Write(0x31);
  1116  0423  3031               	movlw	49
  1117  0424  00F0               	movwf	I2C_Master_Write@d
  1118  0425  3000               	movlw	0
  1119  0426  00F1               	movwf	I2C_Master_Write@d+1
  1120  0427  120A  158A  2735  120A  118A  	fcall	_I2C_Master_Write
  1121                           
  1122                           ;MASTERR_I2C.c: 104:         analogic_digital_b = I2C_Master_Read(0);
  1123  042C  3000               	movlw	0
  1124  042D  00F0               	movwf	I2C_Master_Read@a
  1125  042E  00F1               	movwf	I2C_Master_Read@a+1
  1126  042F  120A  118A  207F  120A  118A  	fcall	_I2C_Master_Read
  1127  0434  0870               	movf	?_I2C_Master_Read,w
  1128  0435  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0436  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0437  00EA               	movwf	??_main
  1131  0438  086A               	movf	??_main,w
  1132  0439  00CC               	movwf	_analogic_digital_b
  1133                           
  1134                           ;MASTERR_I2C.c: 105:         I2C_Master_Stop();
  1135  043A  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Stop
  1136  043F                     l1827:	
  1137                           
  1138                           ;MASTERR_I2C.c: 106:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1139  043F  3002               	movlw	2
  1140  0440  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0441  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0442  00EC               	movwf	??_main+2
  1143  0443  3004               	movlw	4
  1144  0444  00EB               	movwf	??_main+1
  1145  0445  30B9               	movlw	185
  1146  0446  00EA               	movwf	??_main
  1147  0447                     u1407:	
  1148  0447  0BEA               	decfsz	??_main,f
  1149  0448  2C47               	goto	u1407
  1150  0449  0BEB               	decfsz	??_main+1,f
  1151  044A  2C47               	goto	u1407
  1152  044B  0BEC               	decfsz	??_main+2,f
  1153  044C  2C47               	goto	u1407
  1154  044D  2C4E               	nop2
  1155  044E                     l1829:	
  1156                           
  1157                           ;MASTERR_I2C.c: 107:         UART_WRITE(analogic_digital_b);
  1158  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1159  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0450  084C               	movf	_analogic_digital_b,w
  1161  0451  120A  158A  273F  120A  118A  	fcall	_UART_WRITE
  1162                           
  1163                           ;MASTERR_I2C.c: 108:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1164  0456  3002               	movlw	2
  1165  0457  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0458  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0459  00EC               	movwf	??_main+2
  1168  045A  3004               	movlw	4
  1169  045B  00EB               	movwf	??_main+1
  1170  045C  30B9               	movlw	185
  1171  045D  00EA               	movwf	??_main
  1172  045E                     u1417:	
  1173  045E  0BEA               	decfsz	??_main,f
  1174  045F  2C5E               	goto	u1417
  1175  0460  0BEB               	decfsz	??_main+1,f
  1176  0461  2C5E               	goto	u1417
  1177  0462  0BEC               	decfsz	??_main+2,f
  1178  0463  2C5E               	goto	u1417
  1179  0464  2C65               	nop2
  1180  0465                     l1831:	
  1181                           
  1182                           ;MASTERR_I2C.c: 110:         CONTLUZA = analogic_digital_b/10;
  1183  0465  300A               	movlw	10
  1184  0466  00F0               	movwf	___awdiv@divisor
  1185  0467  3000               	movlw	0
  1186  0468  00F1               	movwf	___awdiv@divisor+1
  1187  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1188  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1189  046B  084C               	movf	_analogic_digital_b,w
  1190  046C  00EA               	movwf	??_main
  1191  046D  01EB               	clrf	??_main+1
  1192  046E  086A               	movf	??_main,w
  1193  046F  00F2               	movwf	___awdiv@dividend
  1194  0470  086B               	movf	??_main+1,w
  1195  0471  00F3               	movwf	___awdiv@dividend+1
  1196  0472  120A  118A  2285  120A  118A  	fcall	___awdiv
  1197  0477  0871               	movf	?___awdiv+1,w
  1198  0478  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0479  1303               	bcf	3,6	;RP1=0, select bank0
  1200  047A  00C7               	movwf	_CONTLUZA+1
  1201  047B  0870               	movf	?___awdiv,w
  1202  047C  00C6               	movwf	_CONTLUZA
  1203  047D                     l1833:	
  1204                           
  1205                           ;MASTERR_I2C.c: 111:         itoa(CONTLUZA_CHAR,CONTLUZA,10);
  1206  047D  0847               	movf	_CONTLUZA+1,w
  1207  047E  00D9               	movwf	itoa@val+1
  1208  047F  0846               	movf	_CONTLUZA,w
  1209  0480  00D8               	movwf	itoa@val
  1210  0481  300A               	movlw	10
  1211  0482  00DA               	movwf	itoa@base
  1212  0483  3000               	movlw	0
  1213  0484  00DB               	movwf	itoa@base+1
  1214  0485  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1215  0486  120A  158A  278B  120A  118A  	fcall	_itoa
  1216  048B                     l1835:	
  1217                           
  1218                           ;MASTERR_I2C.c: 112:         CONTLUZB = analogic_digital_b%10;
  1219  048B  300A               	movlw	10
  1220  048C  00F0               	movwf	___awmod@divisor
  1221  048D  3000               	movlw	0
  1222  048E  00F1               	movwf	___awmod@divisor+1
  1223  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0491  084C               	movf	_analogic_digital_b,w
  1226  0492  00EA               	movwf	??_main
  1227  0493  01EB               	clrf	??_main+1
  1228  0494  086A               	movf	??_main,w
  1229  0495  00F2               	movwf	___awmod@dividend
  1230  0496  086B               	movf	??_main+1,w
  1231  0497  00F3               	movwf	___awmod@dividend+1
  1232  0498  120A  118A  2163  120A  118A  	fcall	___awmod
  1233  049D  0871               	movf	?___awmod+1,w
  1234  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1235  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1236  04A0  00C5               	movwf	_CONTLUZB+1
  1237  04A1  0870               	movf	?___awmod,w
  1238  04A2  00C4               	movwf	_CONTLUZB
  1239  04A3                     l1837:	
  1240                           
  1241                           ;MASTERR_I2C.c: 113:         itoa(CONTLUZB_CHAR,CONTLUZB,10);
  1242  04A3  0845               	movf	_CONTLUZB+1,w
  1243  04A4  00D9               	movwf	itoa@val+1
  1244  04A5  0844               	movf	_CONTLUZB,w
  1245  04A6  00D8               	movwf	itoa@val
  1246  04A7  300A               	movlw	10
  1247  04A8  00DA               	movwf	itoa@base
  1248  04A9  3000               	movlw	0
  1249  04AA  00DB               	movwf	itoa@base+1
  1250  04AB  30E9               	movlw	(low (_CONTLUZB_CHAR| 0))& (0+255)
  1251  04AC  120A  158A  278B  120A  118A  	fcall	_itoa
  1252  04B1                     l1839:	
  1253                           
  1254                           ;MASTERR_I2C.c: 114:         strcat(CONTLUZA_CHAR,CONTLUZB_CHAR);
  1255  04B1  30E9               	movlw	(low (_CONTLUZB_CHAR| 0))& (0+255)
  1256  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1257  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1258  04B4  00EA               	movwf	??_main
  1259  04B5  086A               	movf	??_main,w
  1260  04B6  00F0               	movwf	strcat@from
  1261  04B7  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1262  04B8  120A  118A  2056  120A  118A  	fcall	_strcat
  1263  04BD                     l1841:	
  1264                           
  1265                           ;MASTERR_I2C.c: 117:         I2C_Master_Start();
  1266  04BD  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Start
  1267  04C2                     l1843:	
  1268                           
  1269                           ;MASTERR_I2C.c: 118:         I2C_Master_Write(0x31);
  1270  04C2  3031               	movlw	49
  1271  04C3  00F0               	movwf	I2C_Master_Write@d
  1272  04C4  3000               	movlw	0
  1273  04C5  00F1               	movwf	I2C_Master_Write@d+1
  1274  04C6  120A  158A  2735  120A  118A  	fcall	_I2C_Master_Write
  1275  04CB                     l1845:	
  1276                           
  1277                           ;MASTERR_I2C.c: 119:         T_byte1 = I2C_Master_Read(0);
  1278  04CB  3000               	movlw	0
  1279  04CC  00F0               	movwf	I2C_Master_Read@a
  1280  04CD  00F1               	movwf	I2C_Master_Read@a+1
  1281  04CE  120A  118A  207F  120A  118A  	fcall	_I2C_Master_Read
  1282  04D3  0870               	movf	?_I2C_Master_Read,w
  1283  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1284  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1285  04D6  00EA               	movwf	??_main
  1286  04D7  086A               	movf	??_main,w
  1287  04D8  00CA               	movwf	_T_byte1
  1288  04D9                     l1847:	
  1289                           
  1290                           ;MASTERR_I2C.c: 120:         I2C_Master_Stop();
  1291  04D9  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Stop
  1292  04DE                     l1849:	
  1293                           
  1294                           ;MASTERR_I2C.c: 121:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1295  04DE  3002               	movlw	2
  1296  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1297  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1298  04E1  00EC               	movwf	??_main+2
  1299  04E2  3004               	movlw	4
  1300  04E3  00EB               	movwf	??_main+1
  1301  04E4  30B9               	movlw	185
  1302  04E5  00EA               	movwf	??_main
  1303  04E6                     u1427:	
  1304  04E6  0BEA               	decfsz	??_main,f
  1305  04E7  2CE6               	goto	u1427
  1306  04E8  0BEB               	decfsz	??_main+1,f
  1307  04E9  2CE6               	goto	u1427
  1308  04EA  0BEC               	decfsz	??_main+2,f
  1309  04EB  2CE6               	goto	u1427
  1310  04EC  2CED               	nop2
  1311  04ED                     l1851:	
  1312                           
  1313                           ;MASTERR_I2C.c: 122:         UART_WRITE(T_byte1);
  1314  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1315  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1316  04EF  084A               	movf	_T_byte1,w
  1317  04F0  120A  158A  273F  120A  118A  	fcall	_UART_WRITE
  1318  04F5                     l1853:	
  1319                           
  1320                           ;MASTERR_I2C.c: 123:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1321  04F5  3002               	movlw	2
  1322  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  1323  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  1324  04F8  00EC               	movwf	??_main+2
  1325  04F9  3004               	movlw	4
  1326  04FA  00EB               	movwf	??_main+1
  1327  04FB  30B9               	movlw	185
  1328  04FC  00EA               	movwf	??_main
  1329  04FD                     u1437:	
  1330  04FD  0BEA               	decfsz	??_main,f
  1331  04FE  2CFD               	goto	u1437
  1332  04FF  0BEB               	decfsz	??_main+1,f
  1333  0500  2CFD               	goto	u1437
  1334  0501  0BEC               	decfsz	??_main+2,f
  1335  0502  2CFD               	goto	u1437
  1336  0503  2D04               	nop2
  1337  0504                     l1855:	
  1338                           
  1339                           ;MASTERR_I2C.c: 125:         decT = T_byte1/10;
  1340  0504  300A               	movlw	10
  1341  0505  00F0               	movwf	___awdiv@divisor
  1342  0506  3000               	movlw	0
  1343  0507  00F1               	movwf	___awdiv@divisor+1
  1344  0508  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0509  1303               	bcf	3,6	;RP1=0, select bank0
  1346  050A  084A               	movf	_T_byte1,w
  1347  050B  00EA               	movwf	??_main
  1348  050C  01EB               	clrf	??_main+1
  1349  050D  086A               	movf	??_main,w
  1350  050E  00F2               	movwf	___awdiv@dividend
  1351  050F  086B               	movf	??_main+1,w
  1352  0510  00F3               	movwf	___awdiv@dividend+1
  1353  0511  120A  118A  2285  120A  118A  	fcall	___awdiv
  1354  0516  0871               	movf	?___awdiv+1,w
  1355  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0519  00C1               	movwf	_decT+1
  1358  051A  0870               	movf	?___awdiv,w
  1359  051B  00C0               	movwf	_decT
  1360  051C                     l1857:	
  1361                           
  1362                           ;MASTERR_I2C.c: 126:         itoa(decT_char,decT,10);
  1363  051C  0841               	movf	_decT+1,w
  1364  051D  00D9               	movwf	itoa@val+1
  1365  051E  0840               	movf	_decT,w
  1366  051F  00D8               	movwf	itoa@val
  1367  0520  300A               	movlw	10
  1368  0521  00DA               	movwf	itoa@base
  1369  0522  3000               	movlw	0
  1370  0523  00DB               	movwf	itoa@base+1
  1371  0524  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1372  0525  120A  158A  278B  120A  118A  	fcall	_itoa
  1373  052A                     l1859:	
  1374                           
  1375                           ;MASTERR_I2C.c: 127:         uniT = T_byte1%10;
  1376  052A  300A               	movlw	10
  1377  052B  00F0               	movwf	___awmod@divisor
  1378  052C  3000               	movlw	0
  1379  052D  00F1               	movwf	___awmod@divisor+1
  1380  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1381  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0530  084A               	movf	_T_byte1,w
  1383  0531  00EA               	movwf	??_main
  1384  0532  01EB               	clrf	??_main+1
  1385  0533  086A               	movf	??_main,w
  1386  0534  00F2               	movwf	___awmod@dividend
  1387  0535  086B               	movf	??_main+1,w
  1388  0536  00F3               	movwf	___awmod@dividend+1
  1389  0537  120A  118A  2163  120A  118A  	fcall	___awmod
  1390  053C  0871               	movf	?___awmod+1,w
  1391  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1392  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1393  053F  00C3               	movwf	_uniT+1
  1394  0540  0870               	movf	?___awmod,w
  1395  0541  00C2               	movwf	_uniT
  1396  0542                     l1861:	
  1397                           
  1398                           ;MASTERR_I2C.c: 128:         itoa(uniT_char,uniT ,10);
  1399  0542  0843               	movf	_uniT+1,w
  1400  0543  00D9               	movwf	itoa@val+1
  1401  0544  0842               	movf	_uniT,w
  1402  0545  00D8               	movwf	itoa@val
  1403  0546  300A               	movlw	10
  1404  0547  00DA               	movwf	itoa@base
  1405  0548  3000               	movlw	0
  1406  0549  00DB               	movwf	itoa@base+1
  1407  054A  30C6               	movlw	(low (_uniT_char| 0))& (0+255)
  1408  054B  120A  158A  278B  120A  118A  	fcall	_itoa
  1409  0550                     l1863:	
  1410                           
  1411                           ;MASTERR_I2C.c: 129:         strcat(decT_char,uniT_char);
  1412  0550  30C6               	movlw	(low (_uniT_char| 0))& (0+255)
  1413  0551  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0552  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0553  00EA               	movwf	??_main
  1416  0554  086A               	movf	??_main,w
  1417  0555  00F0               	movwf	strcat@from
  1418  0556  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1419  0557  120A  118A  2056  120A  118A  	fcall	_strcat
  1420  055C                     l1865:	
  1421                           
  1422                           ;MASTERR_I2C.c: 132:         I2C_Master_Start();
  1423  055C  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Start
  1424  0561                     l1867:	
  1425                           
  1426                           ;MASTERR_I2C.c: 133:         I2C_Master_Write(0x11);
  1427  0561  3011               	movlw	17
  1428  0562  00F0               	movwf	I2C_Master_Write@d
  1429  0563  3000               	movlw	0
  1430  0564  00F1               	movwf	I2C_Master_Write@d+1
  1431  0565  120A  158A  2735  120A  118A  	fcall	_I2C_Master_Write
  1432  056A                     l1869:	
  1433                           
  1434                           ;MASTERR_I2C.c: 134:         CONTADOR = I2C_Master_Read(0);
  1435  056A  3000               	movlw	0
  1436  056B  00F0               	movwf	I2C_Master_Read@a
  1437  056C  00F1               	movwf	I2C_Master_Read@a+1
  1438  056D  120A  118A  207F  120A  118A  	fcall	_I2C_Master_Read
  1439  0572  0870               	movf	?_I2C_Master_Read,w
  1440  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1441  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1442  0575  00EA               	movwf	??_main
  1443  0576  086A               	movf	??_main,w
  1444  0577  00CD               	movwf	_CONTADOR
  1445  0578                     l1871:	
  1446                           
  1447                           ;MASTERR_I2C.c: 135:         I2C_Master_Stop();
  1448  0578  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Stop
  1449  057D                     l1873:	
  1450                           
  1451                           ;MASTERR_I2C.c: 136:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1452  057D  3002               	movlw	2
  1453  057E  1283               	bcf	3,5	;RP0=0, select bank0
  1454  057F  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0580  00EC               	movwf	??_main+2
  1456  0581  3004               	movlw	4
  1457  0582  00EB               	movwf	??_main+1
  1458  0583  30B9               	movlw	185
  1459  0584  00EA               	movwf	??_main
  1460  0585                     u1447:	
  1461  0585  0BEA               	decfsz	??_main,f
  1462  0586  2D85               	goto	u1447
  1463  0587  0BEB               	decfsz	??_main+1,f
  1464  0588  2D85               	goto	u1447
  1465  0589  0BEC               	decfsz	??_main+2,f
  1466  058A  2D85               	goto	u1447
  1467  058B  2D8C               	nop2
  1468                           
  1469                           ;MASTERR_I2C.c: 137:         UART_WRITE(CONTADOR);
  1470  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1471  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1472  058E  084D               	movf	_CONTADOR,w
  1473  058F  120A  158A  273F  120A  118A  	fcall	_UART_WRITE
  1474  0594                     l1875:	
  1475                           
  1476                           ;MASTERR_I2C.c: 138:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1477  0594  3002               	movlw	2
  1478  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0597  00EC               	movwf	??_main+2
  1481  0598  3004               	movlw	4
  1482  0599  00EB               	movwf	??_main+1
  1483  059A  30B9               	movlw	185
  1484  059B  00EA               	movwf	??_main
  1485  059C                     u1457:	
  1486  059C  0BEA               	decfsz	??_main,f
  1487  059D  2D9C               	goto	u1457
  1488  059E  0BEB               	decfsz	??_main+1,f
  1489  059F  2D9C               	goto	u1457
  1490  05A0  0BEC               	decfsz	??_main+2,f
  1491  05A1  2D9C               	goto	u1457
  1492  05A2  2DA3               	nop2
  1493  05A3                     l1877:	
  1494                           
  1495                           ;MASTERR_I2C.c: 140:         CONTD = CONTADOR/10;
  1496  05A3  300A               	movlw	10
  1497  05A4  00F0               	movwf	___awdiv@divisor
  1498  05A5  3000               	movlw	0
  1499  05A6  00F1               	movwf	___awdiv@divisor+1
  1500  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1501  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1502  05A9  084D               	movf	_CONTADOR,w
  1503  05AA  00EA               	movwf	??_main
  1504  05AB  01EB               	clrf	??_main+1
  1505  05AC  086A               	movf	??_main,w
  1506  05AD  00F2               	movwf	___awdiv@dividend
  1507  05AE  086B               	movf	??_main+1,w
  1508  05AF  00F3               	movwf	___awdiv@dividend+1
  1509  05B0  120A  118A  2285  120A  118A  	fcall	___awdiv
  1510  05B5  0871               	movf	?___awdiv+1,w
  1511  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1512  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1513  05B8  00B3               	movwf	_CONTD+1
  1514  05B9  0870               	movf	?___awdiv,w
  1515  05BA  00B2               	movwf	_CONTD
  1516  05BB                     l1879:	
  1517                           
  1518                           ;MASTERR_I2C.c: 141:         itoa(CONTD_CHAR,CONTD,10);
  1519  05BB  0833               	movf	_CONTD+1,w
  1520  05BC  00D9               	movwf	itoa@val+1
  1521  05BD  0832               	movf	_CONTD,w
  1522  05BE  00D8               	movwf	itoa@val
  1523  05BF  300A               	movlw	10
  1524  05C0  00DA               	movwf	itoa@base
  1525  05C1  3000               	movlw	0
  1526  05C2  00DB               	movwf	itoa@base+1
  1527  05C3  30DA               	movlw	(low (_CONTD_CHAR| 0))& (0+255)
  1528  05C4  120A  158A  278B  120A  118A  	fcall	_itoa
  1529  05C9                     l1881:	
  1530                           
  1531                           ;MASTERR_I2C.c: 142:         CONTU = CONTADOR%10;
  1532  05C9  300A               	movlw	10
  1533  05CA  00F0               	movwf	___awmod@divisor
  1534  05CB  3000               	movlw	0
  1535  05CC  00F1               	movwf	___awmod@divisor+1
  1536  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1537  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1538  05CF  084D               	movf	_CONTADOR,w
  1539  05D0  00EA               	movwf	??_main
  1540  05D1  01EB               	clrf	??_main+1
  1541  05D2  086A               	movf	??_main,w
  1542  05D3  00F2               	movwf	___awmod@dividend
  1543  05D4  086B               	movf	??_main+1,w
  1544  05D5  00F3               	movwf	___awmod@dividend+1
  1545  05D6  120A  118A  2163  120A  118A  	fcall	___awmod
  1546  05DB  0871               	movf	?___awmod+1,w
  1547  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1548  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1549  05DE  00AF               	movwf	_CONTU+1
  1550  05DF  0870               	movf	?___awmod,w
  1551  05E0  00AE               	movwf	_CONTU
  1552  05E1                     l1883:	
  1553                           
  1554                           ;MASTERR_I2C.c: 143:         itoa(CONTU_CHAR,CONTU,10);
  1555  05E1  082F               	movf	_CONTU+1,w
  1556  05E2  00D9               	movwf	itoa@val+1
  1557  05E3  082E               	movf	_CONTU,w
  1558  05E4  00D8               	movwf	itoa@val
  1559  05E5  300A               	movlw	10
  1560  05E6  00DA               	movwf	itoa@base
  1561  05E7  3000               	movlw	0
  1562  05E8  00DB               	movwf	itoa@base+1
  1563  05E9  30D5               	movlw	(low (_CONTU_CHAR| 0))& (0+255)
  1564  05EA  120A  158A  278B  120A  118A  	fcall	_itoa
  1565  05EF                     l1885:	
  1566                           
  1567                           ;MASTERR_I2C.c: 146:         I2C_Master_Start();
  1568  05EF  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Start
  1569  05F4                     l1887:	
  1570                           
  1571                           ;MASTERR_I2C.c: 147:         I2C_Master_Write(0x21);
  1572  05F4  3021               	movlw	33
  1573  05F5  00F0               	movwf	I2C_Master_Write@d
  1574  05F6  3000               	movlw	0
  1575  05F7  00F1               	movwf	I2C_Master_Write@d+1
  1576  05F8  120A  158A  2735  120A  118A  	fcall	_I2C_Master_Write
  1577  05FD                     l1889:	
  1578                           
  1579                           ;MASTERR_I2C.c: 148:         analogic_digital_a = I2C_Master_Read(0);
  1580  05FD  3000               	movlw	0
  1581  05FE  00F0               	movwf	I2C_Master_Read@a
  1582  05FF  00F1               	movwf	I2C_Master_Read@a+1
  1583  0600  120A  118A  207F  120A  118A  	fcall	_I2C_Master_Read
  1584  0605  0870               	movf	?_I2C_Master_Read,w
  1585  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0608  00EA               	movwf	??_main
  1588  0609  086A               	movf	??_main,w
  1589  060A  00CE               	movwf	_analogic_digital_a
  1590  060B                     l1891:	
  1591                           
  1592                           ;MASTERR_I2C.c: 149:         I2C_Master_Stop();
  1593  060B  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Stop
  1594  0610                     l1893:	
  1595                           
  1596                           ;MASTERR_I2C.c: 150:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1597  0610  3002               	movlw	2
  1598  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0613  00EC               	movwf	??_main+2
  1601  0614  3004               	movlw	4
  1602  0615  00EB               	movwf	??_main+1
  1603  0616  30B9               	movlw	185
  1604  0617  00EA               	movwf	??_main
  1605  0618                     u1467:	
  1606  0618  0BEA               	decfsz	??_main,f
  1607  0619  2E18               	goto	u1467
  1608  061A  0BEB               	decfsz	??_main+1,f
  1609  061B  2E18               	goto	u1467
  1610  061C  0BEC               	decfsz	??_main+2,f
  1611  061D  2E18               	goto	u1467
  1612  061E  2E1F               	nop2
  1613                           
  1614                           ;MASTERR_I2C.c: 151:         UART_WRITE(analogic_digital_a);
  1615  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1616  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1617  0621  084E               	movf	_analogic_digital_a,w
  1618  0622  120A  158A  273F  120A  118A  	fcall	_UART_WRITE
  1619  0627                     l1895:	
  1620                           
  1621                           ;MASTERR_I2C.c: 152:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1622  0627  3002               	movlw	2
  1623  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1625  062A  00EC               	movwf	??_main+2
  1626  062B  3004               	movlw	4
  1627  062C  00EB               	movwf	??_main+1
  1628  062D  30B9               	movlw	185
  1629  062E  00EA               	movwf	??_main
  1630  062F                     u1477:	
  1631  062F  0BEA               	decfsz	??_main,f
  1632  0630  2E2F               	goto	u1477
  1633  0631  0BEB               	decfsz	??_main+1,f
  1634  0632  2E2F               	goto	u1477
  1635  0633  0BEC               	decfsz	??_main+2,f
  1636  0634  2E2F               	goto	u1477
  1637  0635  2E36               	nop2
  1638  0636                     l1897:	
  1639                           
  1640                           ;MASTERR_I2C.c: 154:         DC1 = analogic_digital_a/10;
  1641  0636  300A               	movlw	10
  1642  0637  00F0               	movwf	___awdiv@divisor
  1643  0638  3000               	movlw	0
  1644  0639  00F1               	movwf	___awdiv@divisor+1
  1645  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1646  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1647  063C  084E               	movf	_analogic_digital_a,w
  1648  063D  00EA               	movwf	??_main
  1649  063E  01EB               	clrf	??_main+1
  1650  063F  086A               	movf	??_main,w
  1651  0640  00F2               	movwf	___awdiv@dividend
  1652  0641  086B               	movf	??_main+1,w
  1653  0642  00F3               	movwf	___awdiv@dividend+1
  1654  0643  120A  118A  2285  120A  118A  	fcall	___awdiv
  1655  0648  0871               	movf	?___awdiv+1,w
  1656  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1657  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1658  064B  00AB               	movwf	_DC1+1
  1659  064C  0870               	movf	?___awdiv,w
  1660  064D  00AA               	movwf	_DC1
  1661  064E                     l1899:	
  1662                           
  1663                           ;MASTERR_I2C.c: 155:         itoa(ADCA_CHARA,DC1,10);
  1664  064E  082B               	movf	_DC1+1,w
  1665  064F  00D9               	movwf	itoa@val+1
  1666  0650  082A               	movf	_DC1,w
  1667  0651  00D8               	movwf	itoa@val
  1668  0652  300A               	movlw	10
  1669  0653  00DA               	movwf	itoa@base
  1670  0654  3000               	movlw	0
  1671  0655  00DB               	movwf	itoa@base+1
  1672  0656  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1673  0657  120A  158A  278B  120A  118A  	fcall	_itoa
  1674  065C                     l1901:	
  1675                           
  1676                           ;MASTERR_I2C.c: 156:         DC2 = analogic_digital_a%10;
  1677  065C  300A               	movlw	10
  1678  065D  00F0               	movwf	___awmod@divisor
  1679  065E  3000               	movlw	0
  1680  065F  00F1               	movwf	___awmod@divisor+1
  1681  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0662  084E               	movf	_analogic_digital_a,w
  1684  0663  00EA               	movwf	??_main
  1685  0664  01EB               	clrf	??_main+1
  1686  0665  086A               	movf	??_main,w
  1687  0666  00F2               	movwf	___awmod@dividend
  1688  0667  086B               	movf	??_main+1,w
  1689  0668  00F3               	movwf	___awmod@dividend+1
  1690  0669  120A  118A  2163  120A  118A  	fcall	___awmod
  1691  066E  0871               	movf	?___awmod+1,w
  1692  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0671  00BB               	movwf	_DC2+1
  1695  0672  0870               	movf	?___awmod,w
  1696  0673  00BA               	movwf	_DC2
  1697  0674                     l1903:	
  1698                           
  1699                           ;MASTERR_I2C.c: 157:         itoa(ADCB_CHARB,DC2,10);
  1700  0674  083B               	movf	_DC2+1,w
  1701  0675  00D9               	movwf	itoa@val+1
  1702  0676  083A               	movf	_DC2,w
  1703  0677  00D8               	movwf	itoa@val
  1704  0678  300A               	movlw	10
  1705  0679  00DA               	movwf	itoa@base
  1706  067A  3000               	movlw	0
  1707  067B  00DB               	movwf	itoa@base+1
  1708  067C  30CB               	movlw	(low (_ADCB_CHARB| 0))& (0+255)
  1709  067D  120A  158A  278B  120A  118A  	fcall	_itoa
  1710  0682                     l1905:	
  1711                           
  1712                           ;MASTERR_I2C.c: 158:         strcat(ADCA_CHARA,ADCB_CHARB);
  1713  0682  30CB               	movlw	(low (_ADCB_CHARB| 0))& (0+255)
  1714  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0685  00EA               	movwf	??_main
  1717  0686  086A               	movf	??_main,w
  1718  0687  00F0               	movwf	strcat@from
  1719  0688  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1720  0689  120A  118A  2056  120A  118A  	fcall	_strcat
  1721  068E                     l1907:	
  1722                           
  1723                           ;MASTERR_I2C.c: 161:         I2C_Master_Start();
  1724  068E  120A  158A  2723  120A  118A  	fcall	_I2C_Master_Start
  1725  0693                     l1909:	
  1726                           
  1727                           ;MASTERR_I2C.c: 162:         I2C_Master_Write(0x21);
  1728  0693  3021               	movlw	33
  1729  0694  00F0               	movwf	I2C_Master_Write@d
  1730  0695  3000               	movlw	0
  1731  0696  00F1               	movwf	I2C_Master_Write@d+1
  1732  0697  120A  158A  2735  120A  118A  	fcall	_I2C_Master_Write
  1733  069C                     l1911:	
  1734                           
  1735                           ;MASTERR_I2C.c: 163:         SONICO = I2C_Master_Read(0);
  1736  069C  3000               	movlw	0
  1737  069D  00F0               	movwf	I2C_Master_Read@a
  1738  069E  00F1               	movwf	I2C_Master_Read@a+1
  1739  069F  120A  118A  207F  120A  118A  	fcall	_I2C_Master_Read
  1740  06A4  0870               	movf	?_I2C_Master_Read,w
  1741  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1742  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1743  06A7  00EA               	movwf	??_main
  1744  06A8  086A               	movf	??_main,w
  1745  06A9  00CB               	movwf	_SONICO
  1746  06AA                     l1913:	
  1747                           
  1748                           ;MASTERR_I2C.c: 164:         I2C_Master_Stop();
  1749  06AA  120A  158A  272C  120A  118A  	fcall	_I2C_Master_Stop
  1750  06AF                     l1915:	
  1751                           
  1752                           ;MASTERR_I2C.c: 165:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1753  06AF  3002               	movlw	2
  1754  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1755  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1756  06B2  00EC               	movwf	??_main+2
  1757  06B3  3004               	movlw	4
  1758  06B4  00EB               	movwf	??_main+1
  1759  06B5  30B9               	movlw	185
  1760  06B6  00EA               	movwf	??_main
  1761  06B7                     u1487:	
  1762  06B7  0BEA               	decfsz	??_main,f
  1763  06B8  2EB7               	goto	u1487
  1764  06B9  0BEB               	decfsz	??_main+1,f
  1765  06BA  2EB7               	goto	u1487
  1766  06BB  0BEC               	decfsz	??_main+2,f
  1767  06BC  2EB7               	goto	u1487
  1768  06BD  2EBE               	nop2
  1769  06BE                     l1917:	
  1770                           
  1771                           ;MASTERR_I2C.c: 166:         UART_WRITE(SONICO);
  1772  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1773  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1774  06C0  084B               	movf	_SONICO,w
  1775  06C1  120A  158A  273F  120A  118A  	fcall	_UART_WRITE
  1776  06C6                     l1919:	
  1777                           
  1778                           ;MASTERR_I2C.c: 167:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1779  06C6  3002               	movlw	2
  1780  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1781  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1782  06C9  00EC               	movwf	??_main+2
  1783  06CA  3004               	movlw	4
  1784  06CB  00EB               	movwf	??_main+1
  1785  06CC  30B9               	movlw	185
  1786  06CD  00EA               	movwf	??_main
  1787  06CE                     u1497:	
  1788  06CE  0BEA               	decfsz	??_main,f
  1789  06CF  2ECE               	goto	u1497
  1790  06D0  0BEB               	decfsz	??_main+1,f
  1791  06D1  2ECE               	goto	u1497
  1792  06D2  0BEC               	decfsz	??_main+2,f
  1793  06D3  2ECE               	goto	u1497
  1794  06D4  2ED5               	nop2
  1795  06D5                     l1921:	
  1796                           
  1797                           ;MASTERR_I2C.c: 169:         SONICOD = SONICO/10;
  1798  06D5  300A               	movlw	10
  1799  06D6  00F0               	movwf	___awdiv@divisor
  1800  06D7  3000               	movlw	0
  1801  06D8  00F1               	movwf	___awdiv@divisor+1
  1802  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1803  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1804  06DB  084B               	movf	_SONICO,w
  1805  06DC  00EA               	movwf	??_main
  1806  06DD  01EB               	clrf	??_main+1
  1807  06DE  086A               	movf	??_main,w
  1808  06DF  00F2               	movwf	___awdiv@dividend
  1809  06E0  086B               	movf	??_main+1,w
  1810  06E1  00F3               	movwf	___awdiv@dividend+1
  1811  06E2  120A  118A  2285  120A  118A  	fcall	___awdiv
  1812  06E7  0871               	movf	?___awdiv+1,w
  1813  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1814  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1815  06EA  00B1               	movwf	_SONICOD+1
  1816  06EB  0870               	movf	?___awdiv,w
  1817  06EC  00B0               	movwf	_SONICOD
  1818  06ED                     l1923:	
  1819                           
  1820                           ;MASTERR_I2C.c: 170:         itoa(SONICOD_CHAR,SONICOD,10);
  1821  06ED  0831               	movf	_SONICOD+1,w
  1822  06EE  00D9               	movwf	itoa@val+1
  1823  06EF  0830               	movf	_SONICOD,w
  1824  06F0  00D8               	movwf	itoa@val
  1825  06F1  300A               	movlw	10
  1826  06F2  00DA               	movwf	itoa@base
  1827  06F3  3000               	movlw	0
  1828  06F4  00DB               	movwf	itoa@base+1
  1829  06F5  30E4               	movlw	(low (_SONICOD_CHAR| 0))& (0+255)
  1830  06F6  120A  158A  278B  120A  118A  	fcall	_itoa
  1831  06FB                     l1925:	
  1832                           
  1833                           ;MASTERR_I2C.c: 171:         SONICOU = SONICO%10;
  1834  06FB  300A               	movlw	10
  1835  06FC  00F0               	movwf	___awmod@divisor
  1836  06FD  3000               	movlw	0
  1837  06FE  00F1               	movwf	___awmod@divisor+1
  1838  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0700  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0701  084B               	movf	_SONICO,w
  1841  0702  00EA               	movwf	??_main
  1842  0703  01EB               	clrf	??_main+1
  1843  0704  086A               	movf	??_main,w
  1844  0705  00F2               	movwf	___awmod@dividend
  1845  0706  086B               	movf	??_main+1,w
  1846  0707  00F3               	movwf	___awmod@dividend+1
  1847  0708  120A  118A  2163  120A  118A  	fcall	___awmod
  1848  070D  0871               	movf	?___awmod+1,w
  1849  070E  1283               	bcf	3,5	;RP0=0, select bank0
  1850  070F  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0710  00AD               	movwf	_SONICOU+1
  1852  0711  0870               	movf	?___awmod,w
  1853  0712  00AC               	movwf	_SONICOU
  1854  0713                     l1927:	
  1855                           
  1856                           ;MASTERR_I2C.c: 172:         itoa(SONICOU_CHAR,SONICOU,10);
  1857  0713  082D               	movf	_SONICOU+1,w
  1858  0714  00D9               	movwf	itoa@val+1
  1859  0715  082C               	movf	_SONICOU,w
  1860  0716  00D8               	movwf	itoa@val
  1861  0717  300A               	movlw	10
  1862  0718  00DA               	movwf	itoa@base
  1863  0719  3000               	movlw	0
  1864  071A  00DB               	movwf	itoa@base+1
  1865  071B  30DF               	movlw	(low (_SONICOU_CHAR| 0))& (0+255)
  1866  071C  120A  158A  278B  120A  118A  	fcall	_itoa
  1867  0721                     l1929:	
  1868                           
  1869                           ;MASTERR_I2C.c: 176:         if(RA0==0){
  1870  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0723  1805               	btfsc	5,0	;volatile
  1873  0724  2F26               	goto	u1361
  1874  0725  2F27               	goto	u1360
  1875  0726                     u1361:	
  1876  0726  2F89               	goto	l1957
  1877  0727                     u1360:	
  1878  0727                     l1931:	
  1879                           
  1880                           ;MASTERR_I2C.c: 177:             if(S0==1){
  1881  0727  0349               	decf	_S0,w
  1882  0728  1D03               	btfss	3,2
  1883  0729  2F2B               	goto	u1371
  1884  072A  2F2C               	goto	u1370
  1885  072B                     u1371:	
  1886  072B  2F35               	goto	l1937
  1887  072C                     u1370:	
  1888  072C                     l1933:	
  1889                           
  1890                           ;MASTERR_I2C.c: 178:             lcd_cmd(0x01);
  1891  072C  3001               	movlw	1
  1892  072D  120A  158A  2767  120A  118A  	fcall	_lcd_cmd
  1893  0732                     l1935:	
  1894                           
  1895                           ;MASTERR_I2C.c: 179:             S0=0;
  1896  0732  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0733  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0734  01C9               	clrf	_S0
  1899  0735                     l1937:	
  1900                           
  1901                           ;MASTERR_I2C.c: 181:             lcd_cmd(0x80);
  1902  0735  3080               	movlw	128
  1903  0736  120A  158A  2767  120A  118A  	fcall	_lcd_cmd
  1904  073B                     l1939:	
  1905                           
  1906                           ;MASTERR_I2C.c: 182:             lcd_msg("TEMP CARROS LUZ ");
  1907  073B  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1908  073C  00F3               	movwf	lcd_msg@c
  1909  073D  3080               	movlw	128
  1910  073E  00F4               	movwf	lcd_msg@c+1
  1911  073F  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1912  0744                     l1941:	
  1913                           
  1914                           ;MASTERR_I2C.c: 183:             lcd_cmd(0xC0);
  1915  0744  30C0               	movlw	192
  1916  0745  120A  158A  2767  120A  118A  	fcall	_lcd_cmd
  1917  074A                     l1943:	
  1918                           
  1919                           ;MASTERR_I2C.c: 184:             lcd_msg(" ");
  1920  074A  3028               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1921  074B  00F3               	movwf	lcd_msg@c
  1922  074C  3080               	movlw	128
  1923  074D  00F4               	movwf	lcd_msg@c+1
  1924  074E  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1925  0753                     l1945:	
  1926                           
  1927                           ;MASTERR_I2C.c: 185:             lcd_msg(decT_char);
  1928  0753  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1929  0754  00F3               	movwf	lcd_msg@c
  1930  0755  3000               	movlw	0
  1931  0756  00F4               	movwf	lcd_msg@c+1
  1932  0757  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1933  075C                     l1947:	
  1934                           
  1935                           ;MASTERR_I2C.c: 186:             lcd_msg("    ");
  1936  075C  3025               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1937  075D  00F3               	movwf	lcd_msg@c
  1938  075E  3080               	movlw	128
  1939  075F  00F4               	movwf	lcd_msg@c+1
  1940  0760  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1941  0765                     l1949:	
  1942                           
  1943                           ;MASTERR_I2C.c: 187:             lcd_msg(CONTU_CHAR);
  1944  0765  30D5               	movlw	(low (_CONTU_CHAR| 0))& (0+255)
  1945  0766  00F3               	movwf	lcd_msg@c
  1946  0767  3000               	movlw	0
  1947  0768  00F4               	movwf	lcd_msg@c+1
  1948  0769  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1949  076E                     l1951:	
  1950                           
  1951                           ;MASTERR_I2C.c: 188:             lcd_msg("    ");
  1952  076E  3025               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1953  076F  00F3               	movwf	lcd_msg@c
  1954  0770  3080               	movlw	128
  1955  0771  00F4               	movwf	lcd_msg@c+1
  1956  0772  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1957  0777                     l1953:	
  1958                           
  1959                           ;MASTERR_I2C.c: 189:             lcd_msg(CONTLUZA_CHAR);
  1960  0777  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1961  0778  00F3               	movwf	lcd_msg@c
  1962  0779  3000               	movlw	0
  1963  077A  00F4               	movwf	lcd_msg@c+1
  1964  077B  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1965  0780                     l1955:	
  1966                           
  1967                           ;MASTERR_I2C.c: 190:             lcd_msg(" ");
  1968  0780  3028               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1969  0781  00F3               	movwf	lcd_msg@c
  1970  0782  3080               	movlw	128
  1971  0783  00F4               	movwf	lcd_msg@c+1
  1972  0784  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  1973  0789                     l1957:	
  1974                           
  1975                           ;MASTERR_I2C.c: 193:         if(RA0 == 1){
  1976  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1977  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1978  078B  1C05               	btfss	5,0	;volatile
  1979  078C  2F8E               	goto	u1381
  1980  078D  2F8F               	goto	u1380
  1981  078E                     u1381:	
  1982  078E  2C1E               	goto	l149
  1983  078F                     u1380:	
  1984  078F                     l1959:	
  1985                           
  1986                           ;MASTERR_I2C.c: 194:             if(S0==0){
  1987  078F  0849               	movf	_S0,w
  1988  0790  1D03               	btfss	3,2
  1989  0791  2F93               	goto	u1391
  1990  0792  2F94               	goto	u1390
  1991  0793                     u1391:	
  1992  0793  2F9E               	goto	l153
  1993  0794                     u1390:	
  1994  0794                     l1961:	
  1995                           
  1996                           ;MASTERR_I2C.c: 195:             lcd_cmd(0x01);
  1997  0794  3001               	movlw	1
  1998  0795  120A  158A  2767  120A  118A  	fcall	_lcd_cmd
  1999  079A                     l1963:	
  2000                           
  2001                           ;MASTERR_I2C.c: 196:             S0=1;
  2002  079A  1283               	bcf	3,5	;RP0=0, select bank0
  2003  079B  1303               	bcf	3,6	;RP1=0, select bank0
  2004  079C  01C9               	clrf	_S0
  2005  079D  0AC9               	incf	_S0,f
  2006  079E                     l153:	
  2007                           ;MASTERR_I2C.c: 197:             }
  2008                           
  2009                           
  2010                           ;MASTERR_I2C.c: 198:             lcd_cmd(0x80);
  2011  079E  3080               	movlw	128
  2012  079F  120A  158A  2767  120A  118A  	fcall	_lcd_cmd
  2013  07A4                     l1965:	
  2014                           
  2015                           ;MASTERR_I2C.c: 199:             lcd_msg(" FUERZA ULTRA   ");
  2016  07A4  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2017  07A5  00F3               	movwf	lcd_msg@c
  2018  07A6  3080               	movlw	128
  2019  07A7  00F4               	movwf	lcd_msg@c+1
  2020  07A8  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  2021  07AD                     l1967:	
  2022                           
  2023                           ;MASTERR_I2C.c: 200:             lcd_cmd(0xC0);
  2024  07AD  30C0               	movlw	192
  2025  07AE  120A  158A  2767  120A  118A  	fcall	_lcd_cmd
  2026                           
  2027                           ;MASTERR_I2C.c: 201:             lcd_msg("  ");
  2028  07B3  3027               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  2029  07B4  00F3               	movwf	lcd_msg@c
  2030  07B5  3080               	movlw	128
  2031  07B6  00F4               	movwf	lcd_msg@c+1
  2032  07B7  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  2033                           
  2034                           ;MASTERR_I2C.c: 202:             lcd_msg(ADCA_CHARA);
  2035  07BC  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  2036  07BD  00F3               	movwf	lcd_msg@c
  2037  07BE  3000               	movlw	0
  2038  07BF  00F4               	movwf	lcd_msg@c+1
  2039  07C0  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  2040                           
  2041                           ;MASTERR_I2C.c: 203:             lcd_msg("     ");
  2042  07C5  3024               	movlw	(low (((STR_9+1)-__stringbase)| (0+32768)))& (0+255)
  2043  07C6  00F3               	movwf	lcd_msg@c
  2044  07C7  3080               	movlw	128
  2045  07C8  00F4               	movwf	lcd_msg@c+1
  2046  07C9  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  2047                           
  2048                           ;MASTERR_I2C.c: 204:             lcd_msg(SONICOU_CHAR);
  2049  07CE  30DF               	movlw	(low (_SONICOU_CHAR| 0))& (0+255)
  2050  07CF  00F3               	movwf	lcd_msg@c
  2051  07D0  3000               	movlw	0
  2052  07D1  00F4               	movwf	lcd_msg@c+1
  2053  07D2  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  2054                           
  2055                           ;MASTERR_I2C.c: 205:             lcd_msg("      ");
  2056  07D7  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2057  07D8  00F3               	movwf	lcd_msg@c
  2058  07D9  3080               	movlw	128
  2059  07DA  00F4               	movwf	lcd_msg@c+1
  2060  07DB  120A  158A  27B1  120A  118A  	fcall	_lcd_msg
  2061  07E0  2C1E               	goto	l149
  2062  07E1  120A  118A  2800   	ljmp	start
  2063  07E4                     __end_of_main:	
  2064                           
  2065                           	psect	text1
  2066  0056                     __ptext1:	
  2067 ;; *************** function _strcat *****************
  2068 ;; Defined at:
  2069 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  to              1    wreg     PTR unsigned char 
  2072 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2073 ;;  from            1    0[COMMON] PTR const unsigned char 
  2074 ;;		 -> ADCB_CHARB(5), uniT_char(5), CONTLUZB_CHAR(5), 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  to              1    2[COMMON] PTR unsigned char 
  2077 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2078 ;;  cp              1    3[COMMON] PTR unsigned char 
  2079 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      PTR unsigned char 
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         1       0       0       0       0
  2090 ;;      Locals:         2       0       0       0       0
  2091 ;;      Temps:          1       0       0       0       0
  2092 ;;      Totals:         4       0       0       0       0
  2093 ;;Total ram usage:        4 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _strcat
  2104  0056                     _strcat:	
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2108                           ;strcat@to stored from wreg
  2109  0056  00F2               	movwf	strcat@to
  2110  0057                     l1713:	
  2111  0057  0872               	movf	strcat@to,w
  2112  0058  00F1               	movwf	??_strcat
  2113  0059  0871               	movf	??_strcat,w
  2114  005A  00F3               	movwf	strcat@cp
  2115  005B  2860               	goto	l1717
  2116  005C                     l1715:	
  2117  005C  3001               	movlw	1
  2118  005D  00F1               	movwf	??_strcat
  2119  005E  0871               	movf	??_strcat,w
  2120  005F  07F3               	addwf	strcat@cp,f
  2121  0060                     l1717:	
  2122  0060  0873               	movf	strcat@cp,w
  2123  0061  0084               	movwf	4
  2124  0062  1383               	bcf	3,7	;select IRP bank0
  2125  0063  0800               	movf	0,w
  2126  0064  1D03               	btfss	3,2
  2127  0065  2867               	goto	u1141
  2128  0066  2868               	goto	u1140
  2129  0067                     u1141:	
  2130  0067  285C               	goto	l1715
  2131  0068                     u1140:	
  2132  0068  2871               	goto	l1721
  2133  0069                     l1719:	
  2134  0069  3001               	movlw	1
  2135  006A  00F1               	movwf	??_strcat
  2136  006B  0871               	movf	??_strcat,w
  2137  006C  07F3               	addwf	strcat@cp,f
  2138  006D  3001               	movlw	1
  2139  006E  00F1               	movwf	??_strcat
  2140  006F  0871               	movf	??_strcat,w
  2141  0070  07F0               	addwf	strcat@from,f
  2142  0071                     l1721:	
  2143  0071  0870               	movf	strcat@from,w
  2144  0072  0084               	movwf	4
  2145  0073  0800               	movf	0,w
  2146  0074  00F1               	movwf	??_strcat
  2147  0075  0873               	movf	strcat@cp,w
  2148  0076  0084               	movwf	4
  2149  0077  0871               	movf	??_strcat,w
  2150  0078  0080               	movwf	0
  2151  0079  0800               	movf	0,w
  2152  007A  1D03               	btfss	3,2
  2153  007B  287D               	goto	u1151
  2154  007C  287E               	goto	u1150
  2155  007D                     u1151:	
  2156  007D  2869               	goto	l1719
  2157  007E                     u1150:	
  2158  007E                     l829:	
  2159  007E  0008               	return
  2160  007F                     __end_of_strcat:	
  2161                           
  2162                           	psect	text2
  2163  0FB1                     __ptext2:	
  2164 ;; *************** function _lcd_msg *****************
  2165 ;; Defined at:
  2166 ;;		line 60 in file "PANTALLALCD.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  c               2    3[COMMON] PTR unsigned char 
  2169 ;;		 -> STR_9(7), STR_8(6), STR_7(3), STR_6(17), 
  2170 ;;		 -> STR_5(2), STR_4(5), STR_3(5), STR_2(2), 
  2171 ;;		 -> STR_1(17), SONICOU_CHAR(5), ADCA_CHARA(5), CONTU_CHAR(5), 
  2172 ;;		 -> decT_char(5), CONTLUZA_CHAR(5), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         2       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0
  2186 ;;      Temps:          0       0       0       0       0
  2187 ;;      Totals:         2       0       0       0       0
  2188 ;;Total ram usage:        2 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    2
  2191 ;; This function calls:
  2192 ;;		_lcd_dwr
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _lcd_msg
  2200  0FB1                     _lcd_msg:	
  2201  0FB1                     l1735:	
  2202                           ;incstack = 0
  2203                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2204                           
  2205                           
  2206                           ;PANTALLALCD.c: 61:     while(*c != 0)
  2207  0FB1  2FC6               	goto	l1741
  2208  0FB2                     l1737:	
  2209                           
  2210                           ;PANTALLALCD.c: 62:         lcd_dwr(*c++);
  2211  0FB2  0874               	movf	lcd_msg@c+1,w
  2212  0FB3  00FF               	movwf	btemp+1
  2213  0FB4  0873               	movf	lcd_msg@c,w
  2214  0FB5  0084               	movwf	4
  2215  0FB6  120A  118A  2003  120A  158A  	fcall	stringtab
  2216  0FBB  120A  158A  2779  120A  158A  	fcall	_lcd_dwr
  2217  0FC0                     l1739:	
  2218  0FC0  3001               	movlw	1
  2219  0FC1  07F3               	addwf	lcd_msg@c,f
  2220  0FC2  1803               	skipnc
  2221  0FC3  0AF4               	incf	lcd_msg@c+1,f
  2222  0FC4  3000               	movlw	0
  2223  0FC5  07F4               	addwf	lcd_msg@c+1,f
  2224  0FC6                     l1741:	
  2225                           
  2226                           ;PANTALLALCD.c: 61:     while(*c != 0)
  2227  0FC6  0874               	movf	lcd_msg@c+1,w
  2228  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  2229  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  2230  0FC9  00FF               	movwf	btemp+1
  2231  0FCA  0873               	movf	lcd_msg@c,w
  2232  0FCB  0084               	movwf	4
  2233  0FCC  120A  118A  2003  120A  158A  	fcall	stringtab
  2234  0FD1  3A00               	xorlw	0
  2235  0FD2  1D03               	skipz
  2236  0FD3  2FD5               	goto	u1161
  2237  0FD4  2FD6               	goto	u1160
  2238  0FD5                     u1161:	
  2239  0FD5  2FB2               	goto	l1737
  2240  0FD6                     u1160:	
  2241  0FD6                     l193:	
  2242  0FD6  0008               	return
  2243  0FD7                     __end_of_lcd_msg:	
  2244                           
  2245                           	psect	text3
  2246  0F79                     __ptext3:	
  2247 ;; *************** function _lcd_dwr *****************
  2248 ;; Defined at:
  2249 ;;		line 51 in file "PANTALLALCD.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  x               1    wreg     unsigned char 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  x               1    2[COMMON] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, pclath, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         0       0       0       0       0
  2264 ;;      Locals:         1       0       0       0       0
  2265 ;;      Temps:          0       0       0       0       0
  2266 ;;      Totals:         1       0       0       0       0
  2267 ;;Total ram usage:        1 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; Hardware stack levels required when called:    1
  2270 ;; This function calls:
  2271 ;;		_lcd_lat
  2272 ;;		_lcd_ready
  2273 ;; This function is called by:
  2274 ;;		_lcd_msg
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           
  2279                           ;psect for function _lcd_dwr
  2280  0F79                     _lcd_dwr:	
  2281                           
  2282                           ;incstack = 0
  2283                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
  2284                           ;lcd_dwr@x stored from wreg
  2285  0F79  00F2               	movwf	lcd_dwr@x
  2286  0F7A                     l1521:	
  2287                           
  2288                           ;PANTALLALCD.c: 52:     lcd_ready();
  2289  0F7A  120A  158A  27D7  120A  158A  	fcall	_lcd_ready
  2290  0F7F                     l1523:	
  2291                           
  2292                           ;PANTALLALCD.c: 53:     PORTB = x;
  2293  0F7F  0872               	movf	lcd_dwr@x,w
  2294  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0F82  0086               	movwf	6	;volatile
  2297  0F83                     l1525:	
  2298                           
  2299                           ;PANTALLALCD.c: 54:     RD5 = 1;
  2300  0F83  1688               	bsf	8,5	;volatile
  2301  0F84                     l1527:	
  2302                           
  2303                           ;PANTALLALCD.c: 55:     RD6 = 0;
  2304  0F84  1308               	bcf	8,6	;volatile
  2305  0F85                     l1529:	
  2306                           
  2307                           ;PANTALLALCD.c: 56:     lcd_lat();
  2308  0F85  120A  158A  2758  120A  158A  	fcall	_lcd_lat
  2309  0F8A                     l187:	
  2310  0F8A  0008               	return
  2311  0F8B                     __end_of_lcd_dwr:	
  2312                           
  2313                           	psect	text4
  2314  0F67                     __ptext4:	
  2315 ;; *************** function _lcd_cmd *****************
  2316 ;; Defined at:
  2317 ;;		line 18 in file "PANTALLALCD.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  x               1    wreg     unsigned char 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  x               1    2[COMMON] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      void 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0, pclath, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         0       0       0       0       0
  2332 ;;      Locals:         1       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0
  2334 ;;      Totals:         1       0       0       0       0
  2335 ;;Total ram usage:        1 bytes
  2336 ;; Hardware stack levels used:    1
  2337 ;; Hardware stack levels required when called:    1
  2338 ;; This function calls:
  2339 ;;		_lcd_lat
  2340 ;;		_lcd_ready
  2341 ;; This function is called by:
  2342 ;;		_main
  2343 ;;		_inicializacion
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _lcd_cmd
  2349  0F67                     _lcd_cmd:	
  2350                           
  2351                           ;incstack = 0
  2352                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2353                           ;lcd_cmd@x stored from wreg
  2354  0F67  00F2               	movwf	lcd_cmd@x
  2355  0F68                     l1723:	
  2356                           
  2357                           ;PANTALLALCD.c: 19:     lcd_ready();
  2358  0F68  120A  158A  27D7  120A  158A  	fcall	_lcd_ready
  2359  0F6D                     l1725:	
  2360                           
  2361                           ;PANTALLALCD.c: 20:     PORTB = x;
  2362  0F6D  0872               	movf	lcd_cmd@x,w
  2363  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0F70  0086               	movwf	6	;volatile
  2366  0F71                     l1727:	
  2367                           
  2368                           ;PANTALLALCD.c: 21:     RD5 = 0;
  2369  0F71  1288               	bcf	8,5	;volatile
  2370  0F72                     l1729:	
  2371                           
  2372                           ;PANTALLALCD.c: 22:     RD6 = 0;
  2373  0F72  1308               	bcf	8,6	;volatile
  2374  0F73                     l1731:	
  2375                           
  2376                           ;PANTALLALCD.c: 23:     lcd_lat();
  2377  0F73  120A  158A  2758  120A  158A  	fcall	_lcd_lat
  2378  0F78                     l176:	
  2379  0F78  0008               	return
  2380  0F79                     __end_of_lcd_cmd:	
  2381                           
  2382                           	psect	text5
  2383  0FD7                     __ptext5:	
  2384 ;; *************** function _lcd_ready *****************
  2385 ;; Defined at:
  2386 ;;		line 33 in file "PANTALLALCD.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2400 ;;      Params:         0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0
  2402 ;;      Temps:          2       0       0       0       0
  2403 ;;      Totals:         2       0       0       0       0
  2404 ;;Total ram usage:        2 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_lcd_cmd
  2410 ;;		_lcd_dwr
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           
  2415                           ;psect for function _lcd_ready
  2416  0FD7                     _lcd_ready:	
  2417  0FD7                     l1445:	
  2418                           ;incstack = 0
  2419                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
  2420                           
  2421                           
  2422                           ;PANTALLALCD.c: 34:     PORTB = 0xFF;
  2423  0FD7  30FF               	movlw	255
  2424  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0FDA  0086               	movwf	6	;volatile
  2427  0FDB                     l1447:	
  2428                           
  2429                           ;PANTALLALCD.c: 35:     PORTB &= 0x80;
  2430  0FDB  3080               	movlw	128
  2431  0FDC  00F0               	movwf	??_lcd_ready
  2432  0FDD  0870               	movf	??_lcd_ready,w
  2433  0FDE  0586               	andwf	6,f	;volatile
  2434  0FDF                     l1449:	
  2435                           
  2436                           ;PANTALLALCD.c: 36:     RD5 = 0;
  2437  0FDF  1288               	bcf	8,5	;volatile
  2438  0FE0                     l1451:	
  2439                           
  2440                           ;PANTALLALCD.c: 37:     RD6 = 1;
  2441  0FE0  1708               	bsf	8,6	;volatile
  2442  0FE1                     l1453:	
  2443                           
  2444                           ;PANTALLALCD.c: 38:     RD7 = 0;
  2445  0FE1  1388               	bcf	8,7	;volatile
  2446  0FE2                     l1455:	
  2447                           
  2448                           ;PANTALLALCD.c: 39:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2449  0FE2  304E               	movlw	78
  2450  0FE3  00F1               	movwf	??_lcd_ready+1
  2451  0FE4  30EB               	movlw	235
  2452  0FE5  00F0               	movwf	??_lcd_ready
  2453  0FE6                     u1507:	
  2454  0FE6  0BF0               	decfsz	??_lcd_ready,f
  2455  0FE7  2FE6               	goto	u1507
  2456  0FE8  0BF1               	decfsz	??_lcd_ready+1,f
  2457  0FE9  2FE6               	goto	u1507
  2458  0FEA                     l1457:	
  2459                           
  2460                           ;PANTALLALCD.c: 40:     RD7 = 1;
  2461  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0FEC  1788               	bsf	8,7	;volatile
  2464                           
  2465                           ;PANTALLALCD.c: 41:     if (PORTB == 0x80){
  2466  0FED  3080               	movlw	128
  2467  0FEE  0606               	xorwf	6,w	;volatile
  2468  0FEF  1D03               	btfss	3,2
  2469  0FF0  2FF2               	goto	u711
  2470  0FF1  2FF3               	goto	u710
  2471  0FF2                     u711:	
  2472  0FF2  2FFF               	goto	l184
  2473  0FF3                     u710:	
  2474  0FF3                     l1459:	
  2475                           
  2476                           ;PANTALLALCD.c: 42:     RD7 = 0;
  2477  0FF3  1388               	bcf	8,7	;volatile
  2478  0FF4                     l1461:	
  2479                           
  2480                           ;PANTALLALCD.c: 43:     _delay((unsigned long)((30)*(8000000/4000.0)));
  2481  0FF4  304E               	movlw	78
  2482  0FF5  00F1               	movwf	??_lcd_ready+1
  2483  0FF6  30EB               	movlw	235
  2484  0FF7  00F0               	movwf	??_lcd_ready
  2485  0FF8                     u1517:	
  2486  0FF8  0BF0               	decfsz	??_lcd_ready,f
  2487  0FF9  2FF8               	goto	u1517
  2488  0FFA  0BF1               	decfsz	??_lcd_ready+1,f
  2489  0FFB  2FF8               	goto	u1517
  2490  0FFC                     l1463:	
  2491                           
  2492                           ;PANTALLALCD.c: 44:     RD7 = 1;
  2493  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0FFE  1788               	bsf	8,7	;volatile
  2496  0FFF                     l184:	
  2497                           ;PANTALLALCD.c: 45:     }
  2498                           
  2499  0FFF  0008               	return
  2500  1000                     __end_of_lcd_ready:	
  2501                           
  2502                           	psect	text6
  2503  0F58                     __ptext6:	
  2504 ;; *************** function _lcd_lat *****************
  2505 ;; Defined at:
  2506 ;;		line 27 in file "PANTALLALCD.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;		None
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;		None
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       0       0       0       0
  2521 ;;      Locals:         0       0       0       0       0
  2522 ;;      Temps:          2       0       0       0       0
  2523 ;;      Totals:         2       0       0       0       0
  2524 ;;Total ram usage:        2 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_lcd_cmd
  2530 ;;		_lcd_dwr
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _lcd_lat
  2536  0F58                     _lcd_lat:	
  2537  0F58                     l1465:	
  2538                           ;incstack = 0
  2539                           ; Regs used in _lcd_lat: [wreg]
  2540                           
  2541                           
  2542                           ;PANTALLALCD.c: 28:     RD7 = 1;
  2543  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0F5A  1788               	bsf	8,7	;volatile
  2546  0F5B                     l1467:	
  2547                           
  2548                           ;PANTALLALCD.c: 29:    _delay((unsigned long)((30)*(8000000/4000.0)));
  2549  0F5B  304E               	movlw	78
  2550  0F5C  00F1               	movwf	??_lcd_lat+1
  2551  0F5D  30EB               	movlw	235
  2552  0F5E  00F0               	movwf	??_lcd_lat
  2553  0F5F                     u1527:	
  2554  0F5F  0BF0               	decfsz	??_lcd_lat,f
  2555  0F60  2F5F               	goto	u1527
  2556  0F61  0BF1               	decfsz	??_lcd_lat+1,f
  2557  0F62  2F5F               	goto	u1527
  2558  0F63                     l1469:	
  2559                           
  2560                           ;PANTALLALCD.c: 30:    RD7 = 0;
  2561  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  2562  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  2563  0F65  1388               	bcf	8,7	;volatile
  2564  0F66                     l179:	
  2565  0F66  0008               	return
  2566  0F67                     __end_of_lcd_lat:	
  2567                           
  2568                           	psect	text7
  2569  0F8B                     __ptext7:	
  2570 ;; *************** function _itoa *****************
  2571 ;; Defined at:
  2572 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  2573 ;; Parameters:    Size  Location     Type
  2574 ;;  buf             1    wreg     PTR unsigned char 
  2575 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2576 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2577 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2578 ;;  val             2    4[BANK0 ] int 
  2579 ;;  base            2    6[BANK0 ] int 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2582 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2583 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2584 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2585 ;;  cp              1    0        PTR unsigned char 
  2586 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2587 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2588 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      PTR unsigned char 
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2598 ;;      Params:         0       4       0       0       0
  2599 ;;      Locals:         0       2       0       0       0
  2600 ;;      Temps:          1       0       0       0       0
  2601 ;;      Totals:         1       6       0       0       0
  2602 ;;Total ram usage:        7 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    2
  2605 ;; This function calls:
  2606 ;;		_utoa
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _itoa
  2614  0F8B                     _itoa:	
  2615                           
  2616                           ;incstack = 0
  2617                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2618                           ;itoa@buf stored from wreg
  2619  0F8B  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0F8C  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0F8D  00DD               	movwf	itoa@buf
  2622  0F8E                     l1699:	
  2623  0F8E                     l1701:	
  2624  0F8E  1FD9               	btfss	itoa@val+1,7
  2625  0F8F  2F91               	goto	u1131
  2626  0F90  2F92               	goto	u1130
  2627  0F91                     u1131:	
  2628  0F91  2FA2               	goto	l1709
  2629  0F92                     u1130:	
  2630  0F92                     l1703:	
  2631  0F92  302D               	movlw	45
  2632  0F93  00FD               	movwf	??_itoa
  2633  0F94  085D               	movf	itoa@buf,w
  2634  0F95  0084               	movwf	4
  2635  0F96  087D               	movf	??_itoa,w
  2636  0F97  1383               	bcf	3,7	;select IRP bank0
  2637  0F98  0080               	movwf	0
  2638  0F99                     l1705:	
  2639  0F99  3001               	movlw	1
  2640  0F9A  00FD               	movwf	??_itoa
  2641  0F9B  087D               	movf	??_itoa,w
  2642  0F9C  07DD               	addwf	itoa@buf,f
  2643  0F9D                     l1707:	
  2644  0F9D  09D8               	comf	itoa@val,f
  2645  0F9E  09D9               	comf	itoa@val+1,f
  2646  0F9F  0AD8               	incf	itoa@val,f
  2647  0FA0  1903               	skipnz
  2648  0FA1  0AD9               	incf	itoa@val+1,f
  2649  0FA2                     l1709:	
  2650  0FA2  0859               	movf	itoa@val+1,w
  2651  0FA3  00F9               	movwf	utoa@val+1
  2652  0FA4  0858               	movf	itoa@val,w
  2653  0FA5  00F8               	movwf	utoa@val
  2654  0FA6  085B               	movf	itoa@base+1,w
  2655  0FA7  00FB               	movwf	utoa@base+1
  2656  0FA8  085A               	movf	itoa@base,w
  2657  0FA9  00FA               	movwf	utoa@base
  2658  0FAA  085D               	movf	itoa@buf,w
  2659  0FAB  120A  118A  22EC  120A  158A  	fcall	_utoa
  2660  0FB0                     l812:	
  2661  0FB0  0008               	return
  2662  0FB1                     __end_of_itoa:	
  2663                           
  2664                           	psect	text8
  2665  02EC                     __ptext8:	
  2666 ;; *************** function _utoa *****************
  2667 ;; Defined at:
  2668 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  buf             1    wreg     PTR unsigned char 
  2671 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2672 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2673 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2674 ;;  val             2    8[COMMON] unsigned int 
  2675 ;;  base            2   10[COMMON] int 
  2676 ;; Auto vars:     Size  Location     Type
  2677 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2678 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2679 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2680 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2681 ;;  v               2    0[BANK0 ] unsigned int 
  2682 ;;  c               1    2[BANK0 ] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      PTR unsigned char 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         4       0       0       0       0
  2693 ;;      Locals:         0       4       0       0       0
  2694 ;;      Temps:          1       0       0       0       0
  2695 ;;      Totals:         5       4       0       0       0
  2696 ;;Total ram usage:        9 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    1
  2699 ;; This function calls:
  2700 ;;		___lwdiv
  2701 ;;		___lwmod
  2702 ;; This function is called by:
  2703 ;;		_itoa
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           
  2708                           ;psect for function _utoa
  2709  02EC                     _utoa:	
  2710                           
  2711                           ;incstack = 0
  2712                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2713                           ;utoa@buf stored from wreg
  2714  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2715  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2716  02EE  00D7               	movwf	utoa@buf
  2717  02EF                     l1601:	
  2718  02EF  0879               	movf	utoa@val+1,w
  2719  02F0  00D5               	movwf	utoa@v+1
  2720  02F1  0878               	movf	utoa@val,w
  2721  02F2  00D4               	movwf	utoa@v
  2722  02F3                     l1603:	
  2723  02F3  087B               	movf	utoa@base+1,w
  2724  02F4  00F1               	movwf	___lwdiv@divisor+1
  2725  02F5  087A               	movf	utoa@base,w
  2726  02F6  00F0               	movwf	___lwdiv@divisor
  2727  02F7  0855               	movf	utoa@v+1,w
  2728  02F8  00F3               	movwf	___lwdiv@dividend+1
  2729  02F9  0854               	movf	utoa@v,w
  2730  02FA  00F2               	movwf	___lwdiv@dividend
  2731  02FB  120A  118A  211F  120A  118A  	fcall	___lwdiv
  2732  0300  0871               	movf	?___lwdiv+1,w
  2733  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0303  00D5               	movwf	utoa@v+1
  2736  0304  0870               	movf	?___lwdiv,w
  2737  0305  00D4               	movwf	utoa@v
  2738  0306                     l1605:	
  2739  0306  3001               	movlw	1
  2740  0307  00FC               	movwf	??_utoa
  2741  0308  087C               	movf	??_utoa,w
  2742  0309  07D7               	addwf	utoa@buf,f
  2743  030A                     l1607:	
  2744  030A  0854               	movf	utoa@v,w
  2745  030B  0455               	iorwf	utoa@v+1,w
  2746  030C  1D03               	btfss	3,2
  2747  030D  2B0F               	goto	u1041
  2748  030E  2B10               	goto	u1040
  2749  030F                     u1041:	
  2750  030F  2AF3               	goto	l1603
  2751  0310                     u1040:	
  2752  0310                     l1609:	
  2753  0310  0857               	movf	utoa@buf,w
  2754  0311  0084               	movwf	4
  2755  0312  1383               	bcf	3,7	;select IRP bank0
  2756  0313  0180               	clrf	0
  2757  0314                     l1611:	
  2758  0314  3001               	movlw	1
  2759  0315  02D7               	subwf	utoa@buf,f
  2760  0316                     l1613:	
  2761  0316  087B               	movf	utoa@base+1,w
  2762  0317  00F1               	movwf	___lwmod@divisor+1
  2763  0318  087A               	movf	utoa@base,w
  2764  0319  00F0               	movwf	___lwmod@divisor
  2765  031A  0879               	movf	utoa@val+1,w
  2766  031B  00F3               	movwf	___lwmod@dividend+1
  2767  031C  0878               	movf	utoa@val,w
  2768  031D  00F2               	movwf	___lwmod@dividend
  2769  031E  120A  118A  20E5  120A  118A  	fcall	___lwmod
  2770  0323  0870               	movf	?___lwmod,w
  2771  0324  00FC               	movwf	??_utoa
  2772  0325  087C               	movf	??_utoa,w
  2773  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0327  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0328  00D6               	movwf	utoa@c
  2776  0329                     l1615:	
  2777  0329  087B               	movf	utoa@base+1,w
  2778  032A  00F1               	movwf	___lwdiv@divisor+1
  2779  032B  087A               	movf	utoa@base,w
  2780  032C  00F0               	movwf	___lwdiv@divisor
  2781  032D  0879               	movf	utoa@val+1,w
  2782  032E  00F3               	movwf	___lwdiv@dividend+1
  2783  032F  0878               	movf	utoa@val,w
  2784  0330  00F2               	movwf	___lwdiv@dividend
  2785  0331  120A  118A  211F  120A  118A  	fcall	___lwdiv
  2786  0336  0871               	movf	?___lwdiv+1,w
  2787  0337  00F9               	movwf	utoa@val+1
  2788  0338  0870               	movf	?___lwdiv,w
  2789  0339  00F8               	movwf	utoa@val
  2790  033A                     l1617:	
  2791  033A  300A               	movlw	10
  2792  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2793  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2794  033D  0256               	subwf	utoa@c,w
  2795  033E  1C03               	skipc
  2796  033F  2B41               	goto	u1051
  2797  0340  2B42               	goto	u1050
  2798  0341                     u1051:	
  2799  0341  2B46               	goto	l818
  2800  0342                     u1050:	
  2801  0342                     l1619:	
  2802  0342  3007               	movlw	7
  2803  0343  00FC               	movwf	??_utoa
  2804  0344  087C               	movf	??_utoa,w
  2805  0345  07D6               	addwf	utoa@c,f
  2806  0346                     l818:	
  2807  0346  3030               	movlw	48
  2808  0347  00FC               	movwf	??_utoa
  2809  0348  087C               	movf	??_utoa,w
  2810  0349  07D6               	addwf	utoa@c,f
  2811  034A                     l1621:	
  2812  034A  0856               	movf	utoa@c,w
  2813  034B  00FC               	movwf	??_utoa
  2814  034C  0857               	movf	utoa@buf,w
  2815  034D  0084               	movwf	4
  2816  034E  087C               	movf	??_utoa,w
  2817  034F  1383               	bcf	3,7	;select IRP bank0
  2818  0350  0080               	movwf	0
  2819  0351                     l1623:	
  2820  0351  3001               	movlw	1
  2821  0352  02D7               	subwf	utoa@buf,f
  2822  0353                     l1625:	
  2823  0353  0878               	movf	utoa@val,w
  2824  0354  0479               	iorwf	utoa@val+1,w
  2825  0355  1D03               	btfss	3,2
  2826  0356  2B58               	goto	u1061
  2827  0357  2B59               	goto	u1060
  2828  0358                     u1061:	
  2829  0358  2B16               	goto	l1613
  2830  0359                     u1060:	
  2831  0359                     l1627:	
  2832                           
  2833                           ;	Return value of _utoa is never used
  2834  0359  3001               	movlw	1
  2835  035A  00FC               	movwf	??_utoa
  2836  035B  087C               	movf	??_utoa,w
  2837  035C  07D7               	addwf	utoa@buf,f
  2838  035D                     l820:	
  2839  035D  0008               	return
  2840  035E                     __end_of_utoa:	
  2841                           
  2842                           	psect	text9
  2843  00E5                     __ptext9:	
  2844 ;; *************** function ___lwmod *****************
  2845 ;; Defined at:
  2846 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  divisor         2    0[COMMON] unsigned int 
  2849 ;;  dividend        2    2[COMMON] unsigned int 
  2850 ;; Auto vars:     Size  Location     Type
  2851 ;;  counter         1    5[COMMON] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2    0[COMMON] unsigned int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2861 ;;      Params:         4       0       0       0       0
  2862 ;;      Locals:         1       0       0       0       0
  2863 ;;      Temps:          1       0       0       0       0
  2864 ;;      Totals:         6       0       0       0       0
  2865 ;;Total ram usage:        6 bytes
  2866 ;; Hardware stack levels used:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_utoa
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function ___lwmod
  2876  00E5                     ___lwmod:	
  2877  00E5                     l1499:	
  2878                           ;incstack = 0
  2879                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2880                           
  2881  00E5  0870               	movf	___lwmod@divisor,w
  2882  00E6  0471               	iorwf	___lwmod@divisor+1,w
  2883  00E7  1903               	btfsc	3,2
  2884  00E8  28EA               	goto	u791
  2885  00E9  28EB               	goto	u790
  2886  00EA                     u791:	
  2887  00EA  291A               	goto	l1517
  2888  00EB                     u790:	
  2889  00EB                     l1501:	
  2890  00EB  01F5               	clrf	___lwmod@counter
  2891  00EC  0AF5               	incf	___lwmod@counter,f
  2892  00ED  28F9               	goto	l1507
  2893  00EE                     l1503:	
  2894  00EE  3001               	movlw	1
  2895  00EF                     u805:	
  2896  00EF  1003               	clrc
  2897  00F0  0DF0               	rlf	___lwmod@divisor,f
  2898  00F1  0DF1               	rlf	___lwmod@divisor+1,f
  2899  00F2  3EFF               	addlw	-1
  2900  00F3  1D03               	skipz
  2901  00F4  28EF               	goto	u805
  2902  00F5                     l1505:	
  2903  00F5  3001               	movlw	1
  2904  00F6  00F4               	movwf	??___lwmod
  2905  00F7  0874               	movf	??___lwmod,w
  2906  00F8  07F5               	addwf	___lwmod@counter,f
  2907  00F9                     l1507:	
  2908  00F9  1FF1               	btfss	___lwmod@divisor+1,7
  2909  00FA  28FC               	goto	u811
  2910  00FB  28FD               	goto	u810
  2911  00FC                     u811:	
  2912  00FC  28EE               	goto	l1503
  2913  00FD                     u810:	
  2914  00FD                     l1509:	
  2915  00FD  0871               	movf	___lwmod@divisor+1,w
  2916  00FE  0273               	subwf	___lwmod@dividend+1,w
  2917  00FF  1D03               	skipz
  2918  0100  2903               	goto	u825
  2919  0101  0870               	movf	___lwmod@divisor,w
  2920  0102  0272               	subwf	___lwmod@dividend,w
  2921  0103                     u825:	
  2922  0103  1C03               	skipc
  2923  0104  2906               	goto	u821
  2924  0105  2907               	goto	u820
  2925  0106                     u821:	
  2926  0106  290D               	goto	l1513
  2927  0107                     u820:	
  2928  0107                     l1511:	
  2929  0107  0870               	movf	___lwmod@divisor,w
  2930  0108  02F2               	subwf	___lwmod@dividend,f
  2931  0109  0871               	movf	___lwmod@divisor+1,w
  2932  010A  1C03               	skipc
  2933  010B  03F3               	decf	___lwmod@dividend+1,f
  2934  010C  02F3               	subwf	___lwmod@dividend+1,f
  2935  010D                     l1513:	
  2936  010D  3001               	movlw	1
  2937  010E                     u835:	
  2938  010E  1003               	clrc
  2939  010F  0CF1               	rrf	___lwmod@divisor+1,f
  2940  0110  0CF0               	rrf	___lwmod@divisor,f
  2941  0111  3EFF               	addlw	-1
  2942  0112  1D03               	skipz
  2943  0113  290E               	goto	u835
  2944  0114                     l1515:	
  2945  0114  3001               	movlw	1
  2946  0115  02F5               	subwf	___lwmod@counter,f
  2947  0116  1D03               	btfss	3,2
  2948  0117  2919               	goto	u841
  2949  0118  291A               	goto	u840
  2950  0119                     u841:	
  2951  0119  28FD               	goto	l1509
  2952  011A                     u840:	
  2953  011A                     l1517:	
  2954  011A  0873               	movf	___lwmod@dividend+1,w
  2955  011B  00F1               	movwf	?___lwmod+1
  2956  011C  0872               	movf	___lwmod@dividend,w
  2957  011D  00F0               	movwf	?___lwmod
  2958  011E                     l646:	
  2959  011E  0008               	return
  2960  011F                     __end_of___lwmod:	
  2961                           
  2962                           	psect	text10
  2963  011F                     __ptext10:	
  2964 ;; *************** function ___lwdiv *****************
  2965 ;; Defined at:
  2966 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;  divisor         2    0[COMMON] unsigned int 
  2969 ;;  dividend        2    2[COMMON] unsigned int 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  quotient        2    5[COMMON] unsigned int 
  2972 ;;  counter         1    7[COMMON] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  2    0[COMMON] unsigned int 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2, status,0
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         4       0       0       0       0
  2983 ;;      Locals:         3       0       0       0       0
  2984 ;;      Temps:          1       0       0       0       0
  2985 ;;      Totals:         8       0       0       0       0
  2986 ;;Total ram usage:        8 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_utoa
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           
  2996                           ;psect for function ___lwdiv
  2997  011F                     ___lwdiv:	
  2998  011F                     l1473:	
  2999                           ;incstack = 0
  3000                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3001                           
  3002  011F  01F5               	clrf	___lwdiv@quotient
  3003  0120  01F6               	clrf	___lwdiv@quotient+1
  3004  0121                     l1475:	
  3005  0121  0870               	movf	___lwdiv@divisor,w
  3006  0122  0471               	iorwf	___lwdiv@divisor+1,w
  3007  0123  1903               	btfsc	3,2
  3008  0124  2926               	goto	u721
  3009  0125  2927               	goto	u720
  3010  0126                     u721:	
  3011  0126  295E               	goto	l1495
  3012  0127                     u720:	
  3013  0127                     l1477:	
  3014  0127  01F7               	clrf	___lwdiv@counter
  3015  0128  0AF7               	incf	___lwdiv@counter,f
  3016  0129  2935               	goto	l1483
  3017  012A                     l1479:	
  3018  012A  3001               	movlw	1
  3019  012B                     u735:	
  3020  012B  1003               	clrc
  3021  012C  0DF0               	rlf	___lwdiv@divisor,f
  3022  012D  0DF1               	rlf	___lwdiv@divisor+1,f
  3023  012E  3EFF               	addlw	-1
  3024  012F  1D03               	skipz
  3025  0130  292B               	goto	u735
  3026  0131                     l1481:	
  3027  0131  3001               	movlw	1
  3028  0132  00F4               	movwf	??___lwdiv
  3029  0133  0874               	movf	??___lwdiv,w
  3030  0134  07F7               	addwf	___lwdiv@counter,f
  3031  0135                     l1483:	
  3032  0135  1FF1               	btfss	___lwdiv@divisor+1,7
  3033  0136  2938               	goto	u741
  3034  0137  2939               	goto	u740
  3035  0138                     u741:	
  3036  0138  292A               	goto	l1479
  3037  0139                     u740:	
  3038  0139                     l1485:	
  3039  0139  3001               	movlw	1
  3040  013A                     u755:	
  3041  013A  1003               	clrc
  3042  013B  0DF5               	rlf	___lwdiv@quotient,f
  3043  013C  0DF6               	rlf	___lwdiv@quotient+1,f
  3044  013D  3EFF               	addlw	-1
  3045  013E  1D03               	skipz
  3046  013F  293A               	goto	u755
  3047  0140  0871               	movf	___lwdiv@divisor+1,w
  3048  0141  0273               	subwf	___lwdiv@dividend+1,w
  3049  0142  1D03               	skipz
  3050  0143  2946               	goto	u765
  3051  0144  0870               	movf	___lwdiv@divisor,w
  3052  0145  0272               	subwf	___lwdiv@dividend,w
  3053  0146                     u765:	
  3054  0146  1C03               	skipc
  3055  0147  2949               	goto	u761
  3056  0148  294A               	goto	u760
  3057  0149                     u761:	
  3058  0149  2951               	goto	l1491
  3059  014A                     u760:	
  3060  014A                     l1487:	
  3061  014A  0870               	movf	___lwdiv@divisor,w
  3062  014B  02F2               	subwf	___lwdiv@dividend,f
  3063  014C  0871               	movf	___lwdiv@divisor+1,w
  3064  014D  1C03               	skipc
  3065  014E  03F3               	decf	___lwdiv@dividend+1,f
  3066  014F  02F3               	subwf	___lwdiv@dividend+1,f
  3067  0150                     l1489:	
  3068  0150  1475               	bsf	___lwdiv@quotient,0
  3069  0151                     l1491:	
  3070  0151  3001               	movlw	1
  3071  0152                     u775:	
  3072  0152  1003               	clrc
  3073  0153  0CF1               	rrf	___lwdiv@divisor+1,f
  3074  0154  0CF0               	rrf	___lwdiv@divisor,f
  3075  0155  3EFF               	addlw	-1
  3076  0156  1D03               	skipz
  3077  0157  2952               	goto	u775
  3078  0158                     l1493:	
  3079  0158  3001               	movlw	1
  3080  0159  02F7               	subwf	___lwdiv@counter,f
  3081  015A  1D03               	btfss	3,2
  3082  015B  295D               	goto	u781
  3083  015C  295E               	goto	u780
  3084  015D                     u781:	
  3085  015D  2939               	goto	l1485
  3086  015E                     u780:	
  3087  015E                     l1495:	
  3088  015E  0876               	movf	___lwdiv@quotient+1,w
  3089  015F  00F1               	movwf	?___lwdiv+1
  3090  0160  0875               	movf	___lwdiv@quotient,w
  3091  0161  00F0               	movwf	?___lwdiv
  3092  0162                     l636:	
  3093  0162  0008               	return
  3094  0163                     __end_of___lwdiv:	
  3095                           
  3096                           	psect	text11
  3097  0163                     __ptext11:	
  3098 ;; *************** function ___awmod *****************
  3099 ;; Defined at:
  3100 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  divisor         2    0[COMMON] int 
  3103 ;;  dividend        2    2[COMMON] int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  sign            1    6[COMMON] unsigned char 
  3106 ;;  counter         1    5[COMMON] unsigned char 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  2    0[COMMON] int 
  3109 ;; Registers used:
  3110 ;;		wreg, status,2, status,0
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3116 ;;      Params:         4       0       0       0       0
  3117 ;;      Locals:         2       0       0       0       0
  3118 ;;      Temps:          1       0       0       0       0
  3119 ;;      Totals:         7       0       0       0       0
  3120 ;;Total ram usage:        7 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_main
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function ___awmod
  3131  0163                     ___awmod:	
  3132  0163                     l1787:	
  3133                           ;incstack = 0
  3134                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3135                           
  3136  0163  01F6               	clrf	___awmod@sign
  3137  0164                     l1789:	
  3138  0164  1FF3               	btfss	___awmod@dividend+1,7
  3139  0165  2967               	goto	u1271
  3140  0166  2968               	goto	u1270
  3141  0167                     u1271:	
  3142  0167  296F               	goto	l1795
  3143  0168                     u1270:	
  3144  0168                     l1791:	
  3145  0168  09F2               	comf	___awmod@dividend,f
  3146  0169  09F3               	comf	___awmod@dividend+1,f
  3147  016A  0AF2               	incf	___awmod@dividend,f
  3148  016B  1903               	skipnz
  3149  016C  0AF3               	incf	___awmod@dividend+1,f
  3150  016D                     l1793:	
  3151  016D  01F6               	clrf	___awmod@sign
  3152  016E  0AF6               	incf	___awmod@sign,f
  3153  016F                     l1795:	
  3154  016F  1FF1               	btfss	___awmod@divisor+1,7
  3155  0170  2972               	goto	u1281
  3156  0171  2973               	goto	u1280
  3157  0172                     u1281:	
  3158  0172  2978               	goto	l1799
  3159  0173                     u1280:	
  3160  0173                     l1797:	
  3161  0173  09F0               	comf	___awmod@divisor,f
  3162  0174  09F1               	comf	___awmod@divisor+1,f
  3163  0175  0AF0               	incf	___awmod@divisor,f
  3164  0176  1903               	skipnz
  3165  0177  0AF1               	incf	___awmod@divisor+1,f
  3166  0178                     l1799:	
  3167  0178  0870               	movf	___awmod@divisor,w
  3168  0179  0471               	iorwf	___awmod@divisor+1,w
  3169  017A  1903               	btfsc	3,2
  3170  017B  297D               	goto	u1291
  3171  017C  297E               	goto	u1290
  3172  017D                     u1291:	
  3173  017D  29AD               	goto	l1817
  3174  017E                     u1290:	
  3175  017E                     l1801:	
  3176  017E  01F5               	clrf	___awmod@counter
  3177  017F  0AF5               	incf	___awmod@counter,f
  3178  0180  298C               	goto	l1807
  3179  0181                     l1803:	
  3180  0181  3001               	movlw	1
  3181  0182                     u1305:	
  3182  0182  1003               	clrc
  3183  0183  0DF0               	rlf	___awmod@divisor,f
  3184  0184  0DF1               	rlf	___awmod@divisor+1,f
  3185  0185  3EFF               	addlw	-1
  3186  0186  1D03               	skipz
  3187  0187  2982               	goto	u1305
  3188  0188                     l1805:	
  3189  0188  3001               	movlw	1
  3190  0189  00F4               	movwf	??___awmod
  3191  018A  0874               	movf	??___awmod,w
  3192  018B  07F5               	addwf	___awmod@counter,f
  3193  018C                     l1807:	
  3194  018C  1FF1               	btfss	___awmod@divisor+1,7
  3195  018D  298F               	goto	u1311
  3196  018E  2990               	goto	u1310
  3197  018F                     u1311:	
  3198  018F  2981               	goto	l1803
  3199  0190                     u1310:	
  3200  0190                     l1809:	
  3201  0190  0871               	movf	___awmod@divisor+1,w
  3202  0191  0273               	subwf	___awmod@dividend+1,w
  3203  0192  1D03               	skipz
  3204  0193  2996               	goto	u1325
  3205  0194  0870               	movf	___awmod@divisor,w
  3206  0195  0272               	subwf	___awmod@dividend,w
  3207  0196                     u1325:	
  3208  0196  1C03               	skipc
  3209  0197  2999               	goto	u1321
  3210  0198  299A               	goto	u1320
  3211  0199                     u1321:	
  3212  0199  29A0               	goto	l1813
  3213  019A                     u1320:	
  3214  019A                     l1811:	
  3215  019A  0870               	movf	___awmod@divisor,w
  3216  019B  02F2               	subwf	___awmod@dividend,f
  3217  019C  0871               	movf	___awmod@divisor+1,w
  3218  019D  1C03               	skipc
  3219  019E  03F3               	decf	___awmod@dividend+1,f
  3220  019F  02F3               	subwf	___awmod@dividend+1,f
  3221  01A0                     l1813:	
  3222  01A0  3001               	movlw	1
  3223  01A1                     u1335:	
  3224  01A1  1003               	clrc
  3225  01A2  0CF1               	rrf	___awmod@divisor+1,f
  3226  01A3  0CF0               	rrf	___awmod@divisor,f
  3227  01A4  3EFF               	addlw	-1
  3228  01A5  1D03               	skipz
  3229  01A6  29A1               	goto	u1335
  3230  01A7                     l1815:	
  3231  01A7  3001               	movlw	1
  3232  01A8  02F5               	subwf	___awmod@counter,f
  3233  01A9  1D03               	btfss	3,2
  3234  01AA  29AC               	goto	u1341
  3235  01AB  29AD               	goto	u1340
  3236  01AC                     u1341:	
  3237  01AC  2990               	goto	l1809
  3238  01AD                     u1340:	
  3239  01AD                     l1817:	
  3240  01AD  0876               	movf	___awmod@sign,w
  3241  01AE  1903               	btfsc	3,2
  3242  01AF  29B1               	goto	u1351
  3243  01B0  29B2               	goto	u1350
  3244  01B1                     u1351:	
  3245  01B1  29B7               	goto	l1821
  3246  01B2                     u1350:	
  3247  01B2                     l1819:	
  3248  01B2  09F2               	comf	___awmod@dividend,f
  3249  01B3  09F3               	comf	___awmod@dividend+1,f
  3250  01B4  0AF2               	incf	___awmod@dividend,f
  3251  01B5  1903               	skipnz
  3252  01B6  0AF3               	incf	___awmod@dividend+1,f
  3253  01B7                     l1821:	
  3254  01B7  0873               	movf	___awmod@dividend+1,w
  3255  01B8  00F1               	movwf	?___awmod+1
  3256  01B9  0872               	movf	___awmod@dividend,w
  3257  01BA  00F0               	movwf	?___awmod
  3258  01BB                     l530:	
  3259  01BB  0008               	return
  3260  01BC                     __end_of___awmod:	
  3261                           
  3262                           	psect	text12
  3263  0285                     __ptext12:	
  3264 ;; *************** function ___awdiv *****************
  3265 ;; Defined at:
  3266 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  divisor         2    0[COMMON] int 
  3269 ;;  dividend        2    2[COMMON] int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  quotient        2    7[COMMON] int 
  3272 ;;  sign            1    6[COMMON] unsigned char 
  3273 ;;  counter         1    5[COMMON] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  2    0[COMMON] int 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         4       0       0       0       0
  3284 ;;      Locals:         4       0       0       0       0
  3285 ;;      Temps:          1       0       0       0       0
  3286 ;;      Totals:         9       0       0       0       0
  3287 ;;Total ram usage:        9 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function ___awdiv
  3298  0285                     ___awdiv:	
  3299  0285                     l1743:	
  3300                           ;incstack = 0
  3301                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3302                           
  3303  0285  01F6               	clrf	___awdiv@sign
  3304  0286                     l1745:	
  3305  0286  1FF1               	btfss	___awdiv@divisor+1,7
  3306  0287  2A89               	goto	u1171
  3307  0288  2A8A               	goto	u1170
  3308  0289                     u1171:	
  3309  0289  2A91               	goto	l1751
  3310  028A                     u1170:	
  3311  028A                     l1747:	
  3312  028A  09F0               	comf	___awdiv@divisor,f
  3313  028B  09F1               	comf	___awdiv@divisor+1,f
  3314  028C  0AF0               	incf	___awdiv@divisor,f
  3315  028D  1903               	skipnz
  3316  028E  0AF1               	incf	___awdiv@divisor+1,f
  3317  028F                     l1749:	
  3318  028F  01F6               	clrf	___awdiv@sign
  3319  0290  0AF6               	incf	___awdiv@sign,f
  3320  0291                     l1751:	
  3321  0291  1FF3               	btfss	___awdiv@dividend+1,7
  3322  0292  2A94               	goto	u1181
  3323  0293  2A95               	goto	u1180
  3324  0294                     u1181:	
  3325  0294  2A9E               	goto	l1757
  3326  0295                     u1180:	
  3327  0295                     l1753:	
  3328  0295  09F2               	comf	___awdiv@dividend,f
  3329  0296  09F3               	comf	___awdiv@dividend+1,f
  3330  0297  0AF2               	incf	___awdiv@dividend,f
  3331  0298  1903               	skipnz
  3332  0299  0AF3               	incf	___awdiv@dividend+1,f
  3333  029A                     l1755:	
  3334  029A  3001               	movlw	1
  3335  029B  00F4               	movwf	??___awdiv
  3336  029C  0874               	movf	??___awdiv,w
  3337  029D  06F6               	xorwf	___awdiv@sign,f
  3338  029E                     l1757:	
  3339  029E  01F7               	clrf	___awdiv@quotient
  3340  029F  01F8               	clrf	___awdiv@quotient+1
  3341  02A0                     l1759:	
  3342  02A0  0870               	movf	___awdiv@divisor,w
  3343  02A1  0471               	iorwf	___awdiv@divisor+1,w
  3344  02A2  1903               	btfsc	3,2
  3345  02A3  2AA5               	goto	u1191
  3346  02A4  2AA6               	goto	u1190
  3347  02A5                     u1191:	
  3348  02A5  2ADD               	goto	l1779
  3349  02A6                     u1190:	
  3350  02A6                     l1761:	
  3351  02A6  01F5               	clrf	___awdiv@counter
  3352  02A7  0AF5               	incf	___awdiv@counter,f
  3353  02A8  2AB4               	goto	l1767
  3354  02A9                     l1763:	
  3355  02A9  3001               	movlw	1
  3356  02AA                     u1205:	
  3357  02AA  1003               	clrc
  3358  02AB  0DF0               	rlf	___awdiv@divisor,f
  3359  02AC  0DF1               	rlf	___awdiv@divisor+1,f
  3360  02AD  3EFF               	addlw	-1
  3361  02AE  1D03               	skipz
  3362  02AF  2AAA               	goto	u1205
  3363  02B0                     l1765:	
  3364  02B0  3001               	movlw	1
  3365  02B1  00F4               	movwf	??___awdiv
  3366  02B2  0874               	movf	??___awdiv,w
  3367  02B3  07F5               	addwf	___awdiv@counter,f
  3368  02B4                     l1767:	
  3369  02B4  1FF1               	btfss	___awdiv@divisor+1,7
  3370  02B5  2AB7               	goto	u1211
  3371  02B6  2AB8               	goto	u1210
  3372  02B7                     u1211:	
  3373  02B7  2AA9               	goto	l1763
  3374  02B8                     u1210:	
  3375  02B8                     l1769:	
  3376  02B8  3001               	movlw	1
  3377  02B9                     u1225:	
  3378  02B9  1003               	clrc
  3379  02BA  0DF7               	rlf	___awdiv@quotient,f
  3380  02BB  0DF8               	rlf	___awdiv@quotient+1,f
  3381  02BC  3EFF               	addlw	-1
  3382  02BD  1D03               	skipz
  3383  02BE  2AB9               	goto	u1225
  3384  02BF  0871               	movf	___awdiv@divisor+1,w
  3385  02C0  0273               	subwf	___awdiv@dividend+1,w
  3386  02C1  1D03               	skipz
  3387  02C2  2AC5               	goto	u1235
  3388  02C3  0870               	movf	___awdiv@divisor,w
  3389  02C4  0272               	subwf	___awdiv@dividend,w
  3390  02C5                     u1235:	
  3391  02C5  1C03               	skipc
  3392  02C6  2AC8               	goto	u1231
  3393  02C7  2AC9               	goto	u1230
  3394  02C8                     u1231:	
  3395  02C8  2AD0               	goto	l1775
  3396  02C9                     u1230:	
  3397  02C9                     l1771:	
  3398  02C9  0870               	movf	___awdiv@divisor,w
  3399  02CA  02F2               	subwf	___awdiv@dividend,f
  3400  02CB  0871               	movf	___awdiv@divisor+1,w
  3401  02CC  1C03               	skipc
  3402  02CD  03F3               	decf	___awdiv@dividend+1,f
  3403  02CE  02F3               	subwf	___awdiv@dividend+1,f
  3404  02CF                     l1773:	
  3405  02CF  1477               	bsf	___awdiv@quotient,0
  3406  02D0                     l1775:	
  3407  02D0  3001               	movlw	1
  3408  02D1                     u1245:	
  3409  02D1  1003               	clrc
  3410  02D2  0CF1               	rrf	___awdiv@divisor+1,f
  3411  02D3  0CF0               	rrf	___awdiv@divisor,f
  3412  02D4  3EFF               	addlw	-1
  3413  02D5  1D03               	skipz
  3414  02D6  2AD1               	goto	u1245
  3415  02D7                     l1777:	
  3416  02D7  3001               	movlw	1
  3417  02D8  02F5               	subwf	___awdiv@counter,f
  3418  02D9  1D03               	btfss	3,2
  3419  02DA  2ADC               	goto	u1251
  3420  02DB  2ADD               	goto	u1250
  3421  02DC                     u1251:	
  3422  02DC  2AB8               	goto	l1769
  3423  02DD                     u1250:	
  3424  02DD                     l1779:	
  3425  02DD  0876               	movf	___awdiv@sign,w
  3426  02DE  1903               	btfsc	3,2
  3427  02DF  2AE1               	goto	u1261
  3428  02E0  2AE2               	goto	u1260
  3429  02E1                     u1261:	
  3430  02E1  2AE7               	goto	l1783
  3431  02E2                     u1260:	
  3432  02E2                     l1781:	
  3433  02E2  09F7               	comf	___awdiv@quotient,f
  3434  02E3  09F8               	comf	___awdiv@quotient+1,f
  3435  02E4  0AF7               	incf	___awdiv@quotient,f
  3436  02E5  1903               	skipnz
  3437  02E6  0AF8               	incf	___awdiv@quotient+1,f
  3438  02E7                     l1783:	
  3439  02E7  0878               	movf	___awdiv@quotient+1,w
  3440  02E8  00F1               	movwf	?___awdiv+1
  3441  02E9  0877               	movf	___awdiv@quotient,w
  3442  02EA  00F0               	movwf	?___awdiv
  3443  02EB                     l517:	
  3444  02EB  0008               	return
  3445  02EC                     __end_of___awdiv:	
  3446                           
  3447                           	psect	text13
  3448  0F3F                     __ptext13:	
  3449 ;; *************** function _UART_WRITE *****************
  3450 ;; Defined at:
  3451 ;;		line 31 in file "UART.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  data            1    wreg     unsigned char 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  data            1    0[COMMON] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  1    wreg      void 
  3458 ;; Registers used:
  3459 ;;		wreg
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         0       0       0       0       0
  3466 ;;      Locals:         1       0       0       0       0
  3467 ;;      Temps:          0       0       0       0       0
  3468 ;;      Totals:         1       0       0       0       0
  3469 ;;Total ram usage:        1 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_main
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _UART_WRITE
  3480  0F3F                     _UART_WRITE:	
  3481                           
  3482                           ;incstack = 0
  3483                           ; Regs used in _UART_WRITE: [wreg]
  3484                           ;UART_WRITE@data stored from wreg
  3485  0F3F  00F0               	movwf	UART_WRITE@data
  3486  0F40                     l1695:	
  3487  0F40                     l275:	
  3488                           ;UART.c: 32:   while(!TXSTAbits.TRMT);
  3489                           
  3490  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  3491  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  3492  0F42  1C98               	btfss	24,1	;volatile
  3493  0F43  2F45               	goto	u1121
  3494  0F44  2F46               	goto	u1120
  3495  0F45                     u1121:	
  3496  0F45  2F40               	goto	l275
  3497  0F46                     u1120:	
  3498  0F46                     l1697:	
  3499                           
  3500                           ;UART.c: 33:   TXREG = data;
  3501  0F46  0870               	movf	UART_WRITE@data,w
  3502  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0F49  0099               	movwf	25	;volatile
  3505  0F4A                     l278:	
  3506  0F4A  0008               	return
  3507  0F4B                     __end_of_UART_WRITE:	
  3508                           
  3509                           	psect	text14
  3510  01BC                     __ptext14:	
  3511 ;; *************** function _UART_INIT *****************
  3512 ;; Defined at:
  3513 ;;		line 6 in file "UART.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  baudrate        4    6[BANK0 ] const long 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3527 ;;      Params:         0       4       0       0       0
  3528 ;;      Locals:         0       0       0       0       0
  3529 ;;      Temps:          0      12       0       0       0
  3530 ;;      Totals:         0      16       0       0       0
  3531 ;;Total ram usage:       16 bytes
  3532 ;; Hardware stack levels used:    1
  3533 ;; Hardware stack levels required when called:    1
  3534 ;; This function calls:
  3535 ;;		___aldiv
  3536 ;; This function is called by:
  3537 ;;		_main
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _UART_INIT
  3543  01BC                     _UART_INIT:	
  3544  01BC                     l1651:	
  3545                           ;incstack = 0
  3546                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  3547                           
  3548                           
  3549                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  3550  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3551  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3552  01BE  085A               	movf	UART_INIT@baudrate,w
  3553  01BF  00DE               	movwf	??_UART_INIT
  3554  01C0  085B               	movf	UART_INIT@baudrate+1,w
  3555  01C1  00DF               	movwf	??_UART_INIT+1
  3556  01C2  085C               	movf	UART_INIT@baudrate+2,w
  3557  01C3  00E0               	movwf	??_UART_INIT+2
  3558  01C4  085D               	movf	UART_INIT@baudrate+3,w
  3559  01C5  00E1               	movwf	??_UART_INIT+3
  3560  01C6  3004               	movlw	4
  3561  01C7                     u1085:	
  3562  01C7  1003               	clrc
  3563  01C8  0DDE               	rlf	??_UART_INIT,f
  3564  01C9  0DDF               	rlf	??_UART_INIT+1,f
  3565  01CA  0DE0               	rlf	??_UART_INIT+2,f
  3566  01CB  0DE1               	rlf	??_UART_INIT+3,f
  3567  01CC                     u1080:	
  3568  01CC  3EFF               	addlw	-1
  3569  01CD  1D03               	skipz
  3570  01CE  29C7               	goto	u1085
  3571  01CF  0861               	movf	??_UART_INIT+3,w
  3572  01D0  00F3               	movwf	___aldiv@divisor+3
  3573  01D1  0860               	movf	??_UART_INIT+2,w
  3574  01D2  00F2               	movwf	___aldiv@divisor+2
  3575  01D3  085F               	movf	??_UART_INIT+1,w
  3576  01D4  00F1               	movwf	___aldiv@divisor+1
  3577  01D5  085E               	movf	??_UART_INIT,w
  3578  01D6  00F0               	movwf	___aldiv@divisor
  3579  01D7  085A               	movf	UART_INIT@baudrate,w
  3580  01D8  00E2               	movwf	??_UART_INIT+4
  3581  01D9  085B               	movf	UART_INIT@baudrate+1,w
  3582  01DA  00E3               	movwf	??_UART_INIT+5
  3583  01DB  085C               	movf	UART_INIT@baudrate+2,w
  3584  01DC  00E4               	movwf	??_UART_INIT+6
  3585  01DD  085D               	movf	UART_INIT@baudrate+3,w
  3586  01DE  00E5               	movwf	??_UART_INIT+7
  3587  01DF  3004               	movlw	4
  3588  01E0                     u1095:	
  3589  01E0  1003               	clrc
  3590  01E1  0DE2               	rlf	??_UART_INIT+4,f
  3591  01E2  0DE3               	rlf	??_UART_INIT+5,f
  3592  01E3  0DE4               	rlf	??_UART_INIT+6,f
  3593  01E4  0DE5               	rlf	??_UART_INIT+7,f
  3594  01E5                     u1090:	
  3595  01E5  3EFF               	addlw	-1
  3596  01E6  1D03               	skipz
  3597  01E7  29E0               	goto	u1095
  3598  01E8  3000               	movlw	0
  3599  01E9  00E6               	movwf	??_UART_INIT+8
  3600  01EA  3012               	movlw	18
  3601  01EB  00E7               	movwf	??_UART_INIT+9
  3602  01EC  307A               	movlw	122
  3603  01ED  00E8               	movwf	??_UART_INIT+10
  3604  01EE  3000               	movlw	0
  3605  01EF  00E9               	movwf	??_UART_INIT+11
  3606  01F0  0862               	movf	??_UART_INIT+4,w
  3607  01F1  02E6               	subwf	??_UART_INIT+8,f
  3608  01F2  0863               	movf	??_UART_INIT+5,w
  3609  01F3  1C03               	skipc
  3610  01F4  0F63               	incfsz	??_UART_INIT+5,w
  3611  01F5  29F7               	goto	u1101
  3612  01F6  29F8               	goto	u1102
  3613  01F7                     u1101:	
  3614  01F7  02E7               	subwf	??_UART_INIT+9,f
  3615  01F8                     u1102:	
  3616  01F8  0864               	movf	??_UART_INIT+6,w
  3617  01F9  1C03               	skipc
  3618  01FA  0F64               	incfsz	??_UART_INIT+6,w
  3619  01FB  29FD               	goto	u1103
  3620  01FC  29FE               	goto	u1104
  3621  01FD                     u1103:	
  3622  01FD  02E8               	subwf	??_UART_INIT+10,f
  3623  01FE                     u1104:	
  3624  01FE  0865               	movf	??_UART_INIT+7,w
  3625  01FF  1C03               	skipc
  3626  0200  0F65               	incfsz	??_UART_INIT+7,w
  3627  0201  2A03               	goto	u1105
  3628  0202  2A04               	goto	u1106
  3629  0203                     u1105:	
  3630  0203  02E9               	subwf	??_UART_INIT+11,f
  3631  0204                     u1106:	
  3632  0204  0869               	movf	??_UART_INIT+11,w
  3633  0205  00F7               	movwf	___aldiv@dividend+3
  3634  0206  0868               	movf	??_UART_INIT+10,w
  3635  0207  00F6               	movwf	___aldiv@dividend+2
  3636  0208  0867               	movf	??_UART_INIT+9,w
  3637  0209  00F5               	movwf	___aldiv@dividend+1
  3638  020A  0866               	movf	??_UART_INIT+8,w
  3639  020B  00F4               	movwf	___aldiv@dividend
  3640  020C  120A  118A  235E  120A  118A  	fcall	___aldiv
  3641  0211  0870               	movf	?___aldiv,w
  3642  0212  1683               	bsf	3,5	;RP0=1, select bank1
  3643  0213  1303               	bcf	3,6	;RP1=0, select bank1
  3644  0214  0099               	movwf	25	;volatile
  3645  0215                     l1653:	
  3646                           
  3647                           ;UART.c: 8:     TXSTAbits.BRGH = 1;
  3648  0215  1518               	bsf	24,2	;volatile
  3649  0216                     l1655:	
  3650                           
  3651                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  3652  0216  1698               	bsf	24,5	;volatile
  3653  0217                     l1657:	
  3654                           
  3655                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  3656  0217  1218               	bcf	24,4	;volatile
  3657  0218                     l1659:	
  3658                           
  3659                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  3660  0218  1318               	bcf	24,6	;volatile
  3661  0219                     l1661:	
  3662                           
  3663                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  3664  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3665  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3666  021B  1618               	bsf	24,4	;volatile
  3667  021C                     l1663:	
  3668                           
  3669                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  3670  021C  1798               	bsf	24,7	;volatile
  3671  021D                     l1665:	
  3672                           
  3673                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  3674  021D  1318               	bcf	24,6	;volatile
  3675  021E                     l268:	
  3676  021E  0008               	return
  3677  021F                     __end_of_UART_INIT:	
  3678                           
  3679                           	psect	text15
  3680  035E                     __ptext15:	
  3681 ;; *************** function ___aldiv *****************
  3682 ;; Defined at:
  3683 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3684 ;; Parameters:    Size  Location     Type
  3685 ;;  divisor         4    0[COMMON] long 
  3686 ;;  dividend        4    4[COMMON] long 
  3687 ;; Auto vars:     Size  Location     Type
  3688 ;;  quotient        4    2[BANK0 ] long 
  3689 ;;  sign            1    1[BANK0 ] unsigned char 
  3690 ;;  counter         1    0[BANK0 ] unsigned char 
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  4    0[COMMON] long 
  3693 ;; Registers used:
  3694 ;;		wreg, status,2, status,0
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 0/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3700 ;;      Params:         8       0       0       0       0
  3701 ;;      Locals:         0       6       0       0       0
  3702 ;;      Temps:          1       0       0       0       0
  3703 ;;      Totals:         9       6       0       0       0
  3704 ;;Total ram usage:       15 bytes
  3705 ;; Hardware stack levels used:    1
  3706 ;; This function calls:
  3707 ;;		Nothing
  3708 ;; This function is called by:
  3709 ;;		_UART_INIT
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           
  3714                           ;psect for function ___aldiv
  3715  035E                     ___aldiv:	
  3716  035E                     l1561:	
  3717                           ;incstack = 0
  3718                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3719                           
  3720  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3721  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0360  01D5               	clrf	___aldiv@sign
  3723  0361                     l1563:	
  3724  0361  1FF3               	btfss	___aldiv@divisor+3,7
  3725  0362  2B64               	goto	u941
  3726  0363  2B65               	goto	u940
  3727  0364                     u941:	
  3728  0364  2B72               	goto	l429
  3729  0365                     u940:	
  3730  0365                     l1565:	
  3731  0365  09F0               	comf	___aldiv@divisor,f
  3732  0366  09F1               	comf	___aldiv@divisor+1,f
  3733  0367  09F2               	comf	___aldiv@divisor+2,f
  3734  0368  09F3               	comf	___aldiv@divisor+3,f
  3735  0369  0AF0               	incf	___aldiv@divisor,f
  3736  036A  1903               	skipnz
  3737  036B  0AF1               	incf	___aldiv@divisor+1,f
  3738  036C  1903               	skipnz
  3739  036D  0AF2               	incf	___aldiv@divisor+2,f
  3740  036E  1903               	skipnz
  3741  036F  0AF3               	incf	___aldiv@divisor+3,f
  3742  0370  01D5               	clrf	___aldiv@sign
  3743  0371  0AD5               	incf	___aldiv@sign,f
  3744  0372                     l429:	
  3745  0372  1FF7               	btfss	___aldiv@dividend+3,7
  3746  0373  2B75               	goto	u951
  3747  0374  2B76               	goto	u950
  3748  0375                     u951:	
  3749  0375  2B85               	goto	l1571
  3750  0376                     u950:	
  3751  0376                     l1567:	
  3752  0376  09F4               	comf	___aldiv@dividend,f
  3753  0377  09F5               	comf	___aldiv@dividend+1,f
  3754  0378  09F6               	comf	___aldiv@dividend+2,f
  3755  0379  09F7               	comf	___aldiv@dividend+3,f
  3756  037A  0AF4               	incf	___aldiv@dividend,f
  3757  037B  1903               	skipnz
  3758  037C  0AF5               	incf	___aldiv@dividend+1,f
  3759  037D  1903               	skipnz
  3760  037E  0AF6               	incf	___aldiv@dividend+2,f
  3761  037F  1903               	skipnz
  3762  0380  0AF7               	incf	___aldiv@dividend+3,f
  3763  0381                     l1569:	
  3764  0381  3001               	movlw	1
  3765  0382  00F8               	movwf	??___aldiv
  3766  0383  0878               	movf	??___aldiv,w
  3767  0384  06D5               	xorwf	___aldiv@sign,f
  3768  0385                     l1571:	
  3769  0385  3000               	movlw	0
  3770  0386  00D9               	movwf	___aldiv@quotient+3
  3771  0387  3000               	movlw	0
  3772  0388  00D8               	movwf	___aldiv@quotient+2
  3773  0389  3000               	movlw	0
  3774  038A  00D7               	movwf	___aldiv@quotient+1
  3775  038B  3000               	movlw	0
  3776  038C  00D6               	movwf	___aldiv@quotient
  3777  038D                     l1573:	
  3778  038D  0873               	movf	___aldiv@divisor+3,w
  3779  038E  0472               	iorwf	___aldiv@divisor+2,w
  3780  038F  0471               	iorwf	___aldiv@divisor+1,w
  3781  0390  0470               	iorwf	___aldiv@divisor,w
  3782  0391  1903               	skipnz
  3783  0392  2B94               	goto	u961
  3784  0393  2B95               	goto	u960
  3785  0394                     u961:	
  3786  0394  2BE2               	goto	l1593
  3787  0395                     u960:	
  3788  0395                     l1575:	
  3789  0395  01D4               	clrf	___aldiv@counter
  3790  0396  0AD4               	incf	___aldiv@counter,f
  3791  0397  2BA5               	goto	l1579
  3792  0398                     l1577:	
  3793  0398  3001               	movlw	1
  3794  0399  00F8               	movwf	??___aldiv
  3795  039A                     u975:	
  3796  039A  1003               	clrc
  3797  039B  0DF0               	rlf	___aldiv@divisor,f
  3798  039C  0DF1               	rlf	___aldiv@divisor+1,f
  3799  039D  0DF2               	rlf	___aldiv@divisor+2,f
  3800  039E  0DF3               	rlf	___aldiv@divisor+3,f
  3801  039F  0BF8               	decfsz	??___aldiv,f
  3802  03A0  2B9A               	goto	u975
  3803  03A1  3001               	movlw	1
  3804  03A2  00F8               	movwf	??___aldiv
  3805  03A3  0878               	movf	??___aldiv,w
  3806  03A4  07D4               	addwf	___aldiv@counter,f
  3807  03A5                     l1579:	
  3808  03A5  1FF3               	btfss	___aldiv@divisor+3,7
  3809  03A6  2BA8               	goto	u981
  3810  03A7  2BA9               	goto	u980
  3811  03A8                     u981:	
  3812  03A8  2B98               	goto	l1577
  3813  03A9                     u980:	
  3814  03A9                     l1581:	
  3815  03A9  3001               	movlw	1
  3816  03AA  00F8               	movwf	??___aldiv
  3817  03AB                     u995:	
  3818  03AB  1003               	clrc
  3819  03AC  0DD6               	rlf	___aldiv@quotient,f
  3820  03AD  0DD7               	rlf	___aldiv@quotient+1,f
  3821  03AE  0DD8               	rlf	___aldiv@quotient+2,f
  3822  03AF  0DD9               	rlf	___aldiv@quotient+3,f
  3823  03B0  0BF8               	decfsz	??___aldiv,f
  3824  03B1  2BAB               	goto	u995
  3825  03B2                     l1583:	
  3826  03B2  0873               	movf	___aldiv@divisor+3,w
  3827  03B3  0277               	subwf	___aldiv@dividend+3,w
  3828  03B4  1D03               	skipz
  3829  03B5  2BC0               	goto	u1005
  3830  03B6  0872               	movf	___aldiv@divisor+2,w
  3831  03B7  0276               	subwf	___aldiv@dividend+2,w
  3832  03B8  1D03               	skipz
  3833  03B9  2BC0               	goto	u1005
  3834  03BA  0871               	movf	___aldiv@divisor+1,w
  3835  03BB  0275               	subwf	___aldiv@dividend+1,w
  3836  03BC  1D03               	skipz
  3837  03BD  2BC0               	goto	u1005
  3838  03BE  0870               	movf	___aldiv@divisor,w
  3839  03BF  0274               	subwf	___aldiv@dividend,w
  3840  03C0                     u1005:	
  3841  03C0  1C03               	skipc
  3842  03C1  2BC3               	goto	u1001
  3843  03C2  2BC4               	goto	u1000
  3844  03C3                     u1001:	
  3845  03C3  2BD3               	goto	l1589
  3846  03C4                     u1000:	
  3847  03C4                     l1585:	
  3848  03C4  0870               	movf	___aldiv@divisor,w
  3849  03C5  02F4               	subwf	___aldiv@dividend,f
  3850  03C6  0871               	movf	___aldiv@divisor+1,w
  3851  03C7  1C03               	skipc
  3852  03C8  0F71               	incfsz	___aldiv@divisor+1,w
  3853  03C9  02F5               	subwf	___aldiv@dividend+1,f
  3854  03CA  0872               	movf	___aldiv@divisor+2,w
  3855  03CB  1C03               	skipc
  3856  03CC  0F72               	incfsz	___aldiv@divisor+2,w
  3857  03CD  02F6               	subwf	___aldiv@dividend+2,f
  3858  03CE  0873               	movf	___aldiv@divisor+3,w
  3859  03CF  1C03               	skipc
  3860  03D0  0F73               	incfsz	___aldiv@divisor+3,w
  3861  03D1  02F7               	subwf	___aldiv@dividend+3,f
  3862  03D2                     l1587:	
  3863  03D2  1456               	bsf	___aldiv@quotient,0
  3864  03D3                     l1589:	
  3865  03D3  3001               	movlw	1
  3866  03D4                     u1015:	
  3867  03D4  1003               	clrc
  3868  03D5  0CF3               	rrf	___aldiv@divisor+3,f
  3869  03D6  0CF2               	rrf	___aldiv@divisor+2,f
  3870  03D7  0CF1               	rrf	___aldiv@divisor+1,f
  3871  03D8  0CF0               	rrf	___aldiv@divisor,f
  3872  03D9  3EFF               	addlw	-1
  3873  03DA  1D03               	skipz
  3874  03DB  2BD4               	goto	u1015
  3875  03DC                     l1591:	
  3876  03DC  3001               	movlw	1
  3877  03DD  02D4               	subwf	___aldiv@counter,f
  3878  03DE  1D03               	btfss	3,2
  3879  03DF  2BE1               	goto	u1021
  3880  03E0  2BE2               	goto	u1020
  3881  03E1                     u1021:	
  3882  03E1  2BA9               	goto	l1581
  3883  03E2                     u1020:	
  3884  03E2                     l1593:	
  3885  03E2  0855               	movf	___aldiv@sign,w
  3886  03E3  1903               	btfsc	3,2
  3887  03E4  2BE6               	goto	u1031
  3888  03E5  2BE7               	goto	u1030
  3889  03E6                     u1031:	
  3890  03E6  2BF2               	goto	l1597
  3891  03E7                     u1030:	
  3892  03E7                     l1595:	
  3893  03E7  09D6               	comf	___aldiv@quotient,f
  3894  03E8  09D7               	comf	___aldiv@quotient+1,f
  3895  03E9  09D8               	comf	___aldiv@quotient+2,f
  3896  03EA  09D9               	comf	___aldiv@quotient+3,f
  3897  03EB  0AD6               	incf	___aldiv@quotient,f
  3898  03EC  1903               	skipnz
  3899  03ED  0AD7               	incf	___aldiv@quotient+1,f
  3900  03EE  1903               	skipnz
  3901  03EF  0AD8               	incf	___aldiv@quotient+2,f
  3902  03F0  1903               	skipnz
  3903  03F1  0AD9               	incf	___aldiv@quotient+3,f
  3904  03F2                     l1597:	
  3905  03F2  0859               	movf	___aldiv@quotient+3,w
  3906  03F3  00F3               	movwf	?___aldiv+3
  3907  03F4  0858               	movf	___aldiv@quotient+2,w
  3908  03F5  00F2               	movwf	?___aldiv+2
  3909  03F6  0857               	movf	___aldiv@quotient+1,w
  3910  03F7  00F1               	movwf	?___aldiv+1
  3911  03F8  0856               	movf	___aldiv@quotient,w
  3912  03F9  00F0               	movwf	?___aldiv
  3913  03FA                     l439:	
  3914  03FA  0008               	return
  3915  03FB                     __end_of___aldiv:	
  3916                           
  3917                           	psect	text16
  3918  0041                     __ptext16:	
  3919 ;; *************** function _SETUP *****************
  3920 ;; Defined at:
  3921 ;;		line 210 in file "MASTERR_I2C.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;		None
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       0       0       0       0
  3936 ;;      Locals:         0       0       0       0       0
  3937 ;;      Temps:          0       0       0       0       0
  3938 ;;      Totals:         0       0       0       0       0
  3939 ;;Total ram usage:        0 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function _SETUP
  3950  0041                     _SETUP:	
  3951  0041                     l1631:	
  3952                           ;incstack = 0
  3953                           ; Regs used in _SETUP: [wreg+status,2]
  3954                           
  3955                           
  3956                           ;MASTERR_I2C.c: 211:     TRISA=0b00000001;
  3957  0041  3001               	movlw	1
  3958  0042  1683               	bsf	3,5	;RP0=1, select bank1
  3959  0043  1303               	bcf	3,6	;RP1=0, select bank1
  3960  0044  0085               	movwf	5	;volatile
  3961  0045                     l1633:	
  3962                           
  3963                           ;MASTERR_I2C.c: 212:     TRISB=0;
  3964  0045  0186               	clrf	6	;volatile
  3965  0046                     l1635:	
  3966                           
  3967                           ;MASTERR_I2C.c: 213:     TRISC=0b000011000;
  3968  0046  3018               	movlw	24
  3969  0047  0087               	movwf	7	;volatile
  3970                           
  3971                           ;MASTERR_I2C.c: 214:     TRISD=0;
  3972  0048  0188               	clrf	8	;volatile
  3973                           
  3974                           ;MASTERR_I2C.c: 215:     TRISE=0;
  3975  0049  0189               	clrf	9	;volatile
  3976                           
  3977                           ;MASTERR_I2C.c: 216:     ANSEL = 0b00000000;
  3978  004A  1683               	bsf	3,5	;RP0=1, select bank3
  3979  004B  1703               	bsf	3,6	;RP1=1, select bank3
  3980  004C  0188               	clrf	8	;volatile
  3981                           
  3982                           ;MASTERR_I2C.c: 217:     ANSELH =0b00000000;
  3983  004D  0189               	clrf	9	;volatile
  3984                           
  3985                           ;MASTERR_I2C.c: 218:     PORTA=0;
  3986  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3987  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0050  0185               	clrf	5	;volatile
  3989                           
  3990                           ;MASTERR_I2C.c: 219:     PORTB=0;
  3991  0051  0186               	clrf	6	;volatile
  3992                           
  3993                           ;MASTERR_I2C.c: 220:     PORTC=0;
  3994  0052  0187               	clrf	7	;volatile
  3995                           
  3996                           ;MASTERR_I2C.c: 221:     PORTD=0;
  3997  0053  0188               	clrf	8	;volatile
  3998                           
  3999                           ;MASTERR_I2C.c: 222:     PORTE=0;
  4000  0054  0189               	clrf	9	;volatile
  4001  0055                     l159:	
  4002  0055  0008               	return
  4003  0056                     __end_of_SETUP:	
  4004                           
  4005                           	psect	text17
  4006  0F35                     __ptext17:	
  4007 ;; *************** function _I2C_Master_Write *****************
  4008 ;; Defined at:
  4009 ;;		line 44 in file "I2C.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  d               2    0[COMMON] unsigned int 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;		None
  4014 ;; Return value:  Size  Location     Type
  4015 ;;                  1    wreg      void 
  4016 ;; Registers used:
  4017 ;;		wreg, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4023 ;;      Params:         2       0       0       0       0
  4024 ;;      Locals:         0       0       0       0       0
  4025 ;;      Temps:          0       0       0       0       0
  4026 ;;      Totals:         2       0       0       0       0
  4027 ;;Total ram usage:        2 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    1
  4030 ;; This function calls:
  4031 ;;		_I2C_Master_Wait
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           
  4038                           ;psect for function _I2C_Master_Write
  4039  0F35                     _I2C_Master_Write:	
  4040  0F35                     l1671:	
  4041                           ;incstack = 0
  4042                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4043                           
  4044                           
  4045                           ;I2C.c: 45:     I2C_Master_Wait();
  4046  0F35  120A  158A  274B  120A  158A  	fcall	_I2C_Master_Wait
  4047  0F3A                     l1673:	
  4048                           
  4049                           ;I2C.c: 46:     SSPBUF = d;
  4050  0F3A  0870               	movf	I2C_Master_Write@d,w
  4051  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4052  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4053  0F3D  0093               	movwf	19	;volatile
  4054  0F3E                     l245:	
  4055  0F3E  0008               	return
  4056  0F3F                     __end_of_I2C_Master_Write:	
  4057                           
  4058                           	psect	text18
  4059  0F2C                     __ptext18:	
  4060 ;; *************** function _I2C_Master_Stop *****************
  4061 ;; Defined at:
  4062 ;;		line 35 in file "I2C.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      void 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4076 ;;      Params:         0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    1
  4083 ;; This function calls:
  4084 ;;		_I2C_Master_Wait
  4085 ;; This function is called by:
  4086 ;;		_main
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _I2C_Master_Stop
  4092  0F2C                     _I2C_Master_Stop:	
  4093  0F2C                     l1691:	
  4094                           ;incstack = 0
  4095                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4096                           
  4097                           
  4098                           ;I2C.c: 36:     I2C_Master_Wait();
  4099  0F2C  120A  158A  274B  120A  158A  	fcall	_I2C_Master_Wait
  4100  0F31                     l1693:	
  4101                           
  4102                           ;I2C.c: 37:     SSPCON2bits.PEN = 1;
  4103  0F31  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0F32  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0F33  1511               	bsf	17,2	;volatile
  4106  0F34                     l242:	
  4107  0F34  0008               	return
  4108  0F35                     __end_of_I2C_Master_Stop:	
  4109                           
  4110                           	psect	text19
  4111  0F23                     __ptext19:	
  4112 ;; *************** function _I2C_Master_Start *****************
  4113 ;; Defined at:
  4114 ;;		line 21 in file "I2C.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, pclath, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4128 ;;      Params:         0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0
  4131 ;;      Totals:         0       0       0       0       0
  4132 ;;Total ram usage:        0 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    1
  4135 ;; This function calls:
  4136 ;;		_I2C_Master_Wait
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           
  4143                           ;psect for function _I2C_Master_Start
  4144  0F23                     _I2C_Master_Start:	
  4145  0F23                     l1667:	
  4146                           ;incstack = 0
  4147                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4148                           
  4149                           
  4150                           ;I2C.c: 22:     I2C_Master_Wait();
  4151  0F23  120A  158A  274B  120A  158A  	fcall	_I2C_Master_Wait
  4152  0F28                     l1669:	
  4153                           
  4154                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  4155  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  4156  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  4157  0F2A  1411               	bsf	17,0	;volatile
  4158  0F2B                     l236:	
  4159  0F2B  0008               	return
  4160  0F2C                     __end_of_I2C_Master_Start:	
  4161                           
  4162                           	psect	text20
  4163  007F                     __ptext20:	
  4164 ;; *************** function _I2C_Master_Read *****************
  4165 ;; Defined at:
  4166 ;;		line 52 in file "I2C.c"
  4167 ;; Parameters:    Size  Location     Type
  4168 ;;  a               2    0[COMMON] unsigned short 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  temp            2    4[COMMON] unsigned short 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  2    0[COMMON] unsigned short 
  4173 ;; Registers used:
  4174 ;;		wreg, status,2, status,0, pclath, cstack
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4180 ;;      Params:         2       0       0       0       0
  4181 ;;      Locals:         2       0       0       0       0
  4182 ;;      Temps:          2       0       0       0       0
  4183 ;;      Totals:         6       0       0       0       0
  4184 ;;Total ram usage:        6 bytes
  4185 ;; Hardware stack levels used:    1
  4186 ;; Hardware stack levels required when called:    1
  4187 ;; This function calls:
  4188 ;;		_I2C_Master_Wait
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           
  4195                           ;psect for function _I2C_Master_Read
  4196  007F                     _I2C_Master_Read:	
  4197  007F                     l1675:	
  4198                           ;incstack = 0
  4199                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4200                           
  4201                           
  4202                           ;I2C.c: 53:     unsigned short temp;;I2C.c: 54:     I2C_Master_Wait();
  4203  007F  120A  158A  274B  120A  118A  	fcall	_I2C_Master_Wait
  4204  0084                     l1677:	
  4205                           
  4206                           ;I2C.c: 55:     RCEN = 1;
  4207  0084  1683               	bsf	3,5	;RP0=1, select bank1
  4208  0085  1303               	bcf	3,6	;RP1=0, select bank1
  4209  0086  1591               	bsf	17,3	;volatile
  4210                           
  4211                           ;I2C.c: 56:     I2C_Master_Wait();
  4212  0087  120A  158A  274B  120A  118A  	fcall	_I2C_Master_Wait
  4213  008C                     l1679:	
  4214                           
  4215                           ;I2C.c: 57:     temp = SSPBUF;
  4216  008C  1283               	bcf	3,5	;RP0=0, select bank0
  4217  008D  1303               	bcf	3,6	;RP1=0, select bank0
  4218  008E  0813               	movf	19,w	;volatile
  4219  008F  00F2               	movwf	??_I2C_Master_Read
  4220  0090  01F3               	clrf	??_I2C_Master_Read+1
  4221  0091  0872               	movf	??_I2C_Master_Read,w
  4222  0092  00F4               	movwf	I2C_Master_Read@temp
  4223  0093  0873               	movf	??_I2C_Master_Read+1,w
  4224  0094  00F5               	movwf	I2C_Master_Read@temp+1
  4225  0095                     l1681:	
  4226                           
  4227                           ;I2C.c: 58:     I2C_Master_Wait();
  4228  0095  120A  158A  274B  120A  118A  	fcall	_I2C_Master_Wait
  4229  009A                     l1683:	
  4230                           
  4231                           ;I2C.c: 59:     if(a == 1){
  4232  009A  0370               	decf	I2C_Master_Read@a,w
  4233  009B  0471               	iorwf	I2C_Master_Read@a+1,w
  4234  009C  1D03               	btfss	3,2
  4235  009D  289F               	goto	u1111
  4236  009E  28A0               	goto	u1110
  4237  009F                     u1111:	
  4238  009F  28A4               	goto	l248
  4239  00A0                     u1110:	
  4240  00A0                     l1685:	
  4241                           
  4242                           ;I2C.c: 60:         SSPCON2bits.ACKDT = 0;
  4243  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  4244  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  4245  00A2  1291               	bcf	17,5	;volatile
  4246                           
  4247                           ;I2C.c: 61:     }
  4248  00A3  28A7               	goto	l249
  4249  00A4                     l248:	
  4250                           ;I2C.c: 62:     else{
  4251                           
  4252                           
  4253                           ;I2C.c: 63:         SSPCON2bits.ACKDT = 1;
  4254  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  4255  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  4256  00A6  1691               	bsf	17,5	;volatile
  4257  00A7                     l249:	
  4258                           ;I2C.c: 64:     }
  4259                           
  4260                           
  4261                           ;I2C.c: 65:     SSPCON2bits.ACKEN = 1;
  4262  00A7  1611               	bsf	17,4	;volatile
  4263  00A8                     l1687:	
  4264                           
  4265                           ;I2C.c: 66:     return temp;
  4266  00A8  0875               	movf	I2C_Master_Read@temp+1,w
  4267  00A9  00F1               	movwf	?_I2C_Master_Read+1
  4268  00AA  0874               	movf	I2C_Master_Read@temp,w
  4269  00AB  00F0               	movwf	?_I2C_Master_Read
  4270  00AC                     l250:	
  4271  00AC  0008               	return
  4272  00AD                     __end_of_I2C_Master_Read:	
  4273                           
  4274                           	psect	text21
  4275  0F4B                     __ptext21:	
  4276 ;; *************** function _I2C_Master_Wait *****************
  4277 ;; Defined at:
  4278 ;;		line 15 in file "I2C.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;		None
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      void 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4292 ;;      Params:         0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_I2C_Master_Start
  4302 ;;		_I2C_Master_Stop
  4303 ;;		_I2C_Master_Write
  4304 ;;		_I2C_Master_Read
  4305 ;;		_I2C_Master_RepeatedStart
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           
  4310                           ;psect for function _I2C_Master_Wait
  4311  0F4B                     _I2C_Master_Wait:	
  4312  0F4B                     l1533:	
  4313                           ;incstack = 0
  4314                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4315                           
  4316  0F4B                     l230:	
  4317                           ;I2C.c: 16:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4318                           
  4319  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  4320  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  4321  0F4D  1914               	btfsc	20,2	;volatile
  4322  0F4E  2F50               	goto	u851
  4323  0F4F  2F51               	goto	u850
  4324  0F50                     u851:	
  4325  0F50  2F4B               	goto	l230
  4326  0F51                     u850:	
  4327  0F51                     l1535:	
  4328  0F51  0811               	movf	17,w	;volatile
  4329  0F52  391F               	andlw	31
  4330  0F53  1D03               	btfss	3,2
  4331  0F54  2F56               	goto	u861
  4332  0F55  2F57               	goto	u860
  4333  0F56                     u861:	
  4334  0F56  2F4B               	goto	l230
  4335  0F57                     u860:	
  4336  0F57                     l233:	
  4337  0F57  0008               	return
  4338  0F58                     __end_of_I2C_Master_Wait:	
  4339                           
  4340                           	psect	text22
  4341  00AD                     __ptext22:	
  4342 ;; *************** function _I2C_INIT *****************
  4343 ;; Defined at:
  4344 ;;		line 5 in file "I2C.c"
  4345 ;; Parameters:    Size  Location     Type
  4346 ;;  c               4    0[BANK0 ] const unsigned long 
  4347 ;; Auto vars:     Size  Location     Type
  4348 ;;		None
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  1    wreg      void 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0, pclath, cstack
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4358 ;;      Params:         0       4       0       0       0
  4359 ;;      Locals:         0       0       0       0       0
  4360 ;;      Temps:          0       4       0       0       0
  4361 ;;      Totals:         0       8       0       0       0
  4362 ;;Total ram usage:        8 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; Hardware stack levels required when called:    1
  4365 ;; This function calls:
  4366 ;;		___lldiv
  4367 ;; This function is called by:
  4368 ;;		_main
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           
  4373                           ;psect for function _I2C_INIT
  4374  00AD                     _I2C_INIT:	
  4375  00AD                     l1637:	
  4376                           ;incstack = 0
  4377                           ; Regs used in _I2C_INIT: [wreg+status,2+status,0+pclath+cstack]
  4378                           
  4379                           
  4380                           ;I2C.c: 6:     SSPCON = 0b00101000;
  4381  00AD  3028               	movlw	40
  4382  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  4383  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  4384  00B0  0094               	movwf	20	;volatile
  4385  00B1                     l1639:	
  4386                           
  4387                           ;I2C.c: 7:     SSPCON2 = 0;
  4388  00B1  1683               	bsf	3,5	;RP0=1, select bank1
  4389  00B2  1303               	bcf	3,6	;RP1=0, select bank1
  4390  00B3  0191               	clrf	17	;volatile
  4391  00B4                     l1641:	
  4392                           
  4393                           ;I2C.c: 8:     SSPADD = (8000000/(4*c))-1;
  4394  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  4395  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  4396  00B6  0854               	movf	I2C_INIT@c,w
  4397  00B7  00D8               	movwf	??_I2C_INIT
  4398  00B8  0855               	movf	I2C_INIT@c+1,w
  4399  00B9  00D9               	movwf	??_I2C_INIT+1
  4400  00BA  0856               	movf	I2C_INIT@c+2,w
  4401  00BB  00DA               	movwf	??_I2C_INIT+2
  4402  00BC  0857               	movf	I2C_INIT@c+3,w
  4403  00BD  00DB               	movwf	??_I2C_INIT+3
  4404  00BE  3002               	movlw	2
  4405  00BF                     u1075:	
  4406  00BF  1003               	clrc
  4407  00C0  0DD8               	rlf	??_I2C_INIT,f
  4408  00C1  0DD9               	rlf	??_I2C_INIT+1,f
  4409  00C2  0DDA               	rlf	??_I2C_INIT+2,f
  4410  00C3  0DDB               	rlf	??_I2C_INIT+3,f
  4411  00C4                     u1070:	
  4412  00C4  3EFF               	addlw	-1
  4413  00C5  1D03               	skipz
  4414  00C6  28BF               	goto	u1075
  4415  00C7  085B               	movf	??_I2C_INIT+3,w
  4416  00C8  00F3               	movwf	___lldiv@divisor+3
  4417  00C9  085A               	movf	??_I2C_INIT+2,w
  4418  00CA  00F2               	movwf	___lldiv@divisor+2
  4419  00CB  0859               	movf	??_I2C_INIT+1,w
  4420  00CC  00F1               	movwf	___lldiv@divisor+1
  4421  00CD  0858               	movf	??_I2C_INIT,w
  4422  00CE  00F0               	movwf	___lldiv@divisor
  4423  00CF  3000               	movlw	0
  4424  00D0  00F7               	movwf	___lldiv@dividend+3
  4425  00D1  307A               	movlw	122
  4426  00D2  00F6               	movwf	___lldiv@dividend+2
  4427  00D3  3012               	movlw	18
  4428  00D4  00F5               	movwf	___lldiv@dividend+1
  4429  00D5  3000               	movlw	0
  4430  00D6  00F4               	movwf	___lldiv@dividend
  4431  00D7  120A  118A  221F  120A  118A  	fcall	___lldiv
  4432  00DC  0870               	movf	?___lldiv,w
  4433  00DD  3EFF               	addlw	255
  4434  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  4435  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  4436  00E0  0093               	movwf	19	;volatile
  4437  00E1                     l1643:	
  4438                           
  4439                           ;I2C.c: 9:     SSPSTAT = 0;
  4440  00E1  0194               	clrf	20	;volatile
  4441  00E2                     l1645:	
  4442                           
  4443                           ;I2C.c: 10:     TRISCbits.TRISC3 = 1;
  4444  00E2  1587               	bsf	7,3	;volatile
  4445  00E3                     l1647:	
  4446                           
  4447                           ;I2C.c: 11:     TRISCbits.TRISC4 = 1;
  4448  00E3  1607               	bsf	7,4	;volatile
  4449  00E4                     l227:	
  4450  00E4  0008               	return
  4451  00E5                     __end_of_I2C_INIT:	
  4452                           
  4453                           	psect	text23
  4454  021F                     __ptext23:	
  4455 ;; *************** function ___lldiv *****************
  4456 ;; Defined at:
  4457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  divisor         4    0[COMMON] unsigned long 
  4460 ;;  dividend        4    4[COMMON] unsigned long 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  quotient        4    9[COMMON] unsigned long 
  4463 ;;  counter         1   13[COMMON] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  4    0[COMMON] unsigned long 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         8       0       0       0       0
  4474 ;;      Locals:         5       0       0       0       0
  4475 ;;      Temps:          1       0       0       0       0
  4476 ;;      Totals:        14       0       0       0       0
  4477 ;;Total ram usage:       14 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_I2C_INIT
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function ___lldiv
  4488  021F                     ___lldiv:	
  4489  021F                     l1537:	
  4490                           ;incstack = 0
  4491                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4492                           
  4493  021F  3000               	movlw	0
  4494  0220  00FC               	movwf	___lldiv@quotient+3
  4495  0221  3000               	movlw	0
  4496  0222  00FB               	movwf	___lldiv@quotient+2
  4497  0223  3000               	movlw	0
  4498  0224  00FA               	movwf	___lldiv@quotient+1
  4499  0225  3000               	movlw	0
  4500  0226  00F9               	movwf	___lldiv@quotient
  4501  0227  0873               	movf	___lldiv@divisor+3,w
  4502  0228  0472               	iorwf	___lldiv@divisor+2,w
  4503  0229  0471               	iorwf	___lldiv@divisor+1,w
  4504  022A  0470               	iorwf	___lldiv@divisor,w
  4505  022B  1903               	skipnz
  4506  022C  2A2E               	goto	u871
  4507  022D  2A2F               	goto	u870
  4508  022E                     u871:	
  4509  022E  2A7C               	goto	l1557
  4510  022F                     u870:	
  4511  022F                     l1539:	
  4512  022F  01FD               	clrf	___lldiv@counter
  4513  0230  0AFD               	incf	___lldiv@counter,f
  4514  0231  2A3F               	goto	l1543
  4515  0232                     l1541:	
  4516  0232  3001               	movlw	1
  4517  0233  00F8               	movwf	??___lldiv
  4518  0234                     u885:	
  4519  0234  1003               	clrc
  4520  0235  0DF0               	rlf	___lldiv@divisor,f
  4521  0236  0DF1               	rlf	___lldiv@divisor+1,f
  4522  0237  0DF2               	rlf	___lldiv@divisor+2,f
  4523  0238  0DF3               	rlf	___lldiv@divisor+3,f
  4524  0239  0BF8               	decfsz	??___lldiv,f
  4525  023A  2A34               	goto	u885
  4526  023B  3001               	movlw	1
  4527  023C  00F8               	movwf	??___lldiv
  4528  023D  0878               	movf	??___lldiv,w
  4529  023E  07FD               	addwf	___lldiv@counter,f
  4530  023F                     l1543:	
  4531  023F  1FF3               	btfss	___lldiv@divisor+3,7
  4532  0240  2A42               	goto	u891
  4533  0241  2A43               	goto	u890
  4534  0242                     u891:	
  4535  0242  2A32               	goto	l1541
  4536  0243                     u890:	
  4537  0243                     l1545:	
  4538  0243  3001               	movlw	1
  4539  0244  00F8               	movwf	??___lldiv
  4540  0245                     u905:	
  4541  0245  1003               	clrc
  4542  0246  0DF9               	rlf	___lldiv@quotient,f
  4543  0247  0DFA               	rlf	___lldiv@quotient+1,f
  4544  0248  0DFB               	rlf	___lldiv@quotient+2,f
  4545  0249  0DFC               	rlf	___lldiv@quotient+3,f
  4546  024A  0BF8               	decfsz	??___lldiv,f
  4547  024B  2A45               	goto	u905
  4548  024C                     l1547:	
  4549  024C  0873               	movf	___lldiv@divisor+3,w
  4550  024D  0277               	subwf	___lldiv@dividend+3,w
  4551  024E  1D03               	skipz
  4552  024F  2A5A               	goto	u915
  4553  0250  0872               	movf	___lldiv@divisor+2,w
  4554  0251  0276               	subwf	___lldiv@dividend+2,w
  4555  0252  1D03               	skipz
  4556  0253  2A5A               	goto	u915
  4557  0254  0871               	movf	___lldiv@divisor+1,w
  4558  0255  0275               	subwf	___lldiv@dividend+1,w
  4559  0256  1D03               	skipz
  4560  0257  2A5A               	goto	u915
  4561  0258  0870               	movf	___lldiv@divisor,w
  4562  0259  0274               	subwf	___lldiv@dividend,w
  4563  025A                     u915:	
  4564  025A  1C03               	skipc
  4565  025B  2A5D               	goto	u911
  4566  025C  2A5E               	goto	u910
  4567  025D                     u911:	
  4568  025D  2A6D               	goto	l1553
  4569  025E                     u910:	
  4570  025E                     l1549:	
  4571  025E  0870               	movf	___lldiv@divisor,w
  4572  025F  02F4               	subwf	___lldiv@dividend,f
  4573  0260  0871               	movf	___lldiv@divisor+1,w
  4574  0261  1C03               	skipc
  4575  0262  0F71               	incfsz	___lldiv@divisor+1,w
  4576  0263  02F5               	subwf	___lldiv@dividend+1,f
  4577  0264  0872               	movf	___lldiv@divisor+2,w
  4578  0265  1C03               	skipc
  4579  0266  0F72               	incfsz	___lldiv@divisor+2,w
  4580  0267  02F6               	subwf	___lldiv@dividend+2,f
  4581  0268  0873               	movf	___lldiv@divisor+3,w
  4582  0269  1C03               	skipc
  4583  026A  0F73               	incfsz	___lldiv@divisor+3,w
  4584  026B  02F7               	subwf	___lldiv@dividend+3,f
  4585  026C                     l1551:	
  4586  026C  1479               	bsf	___lldiv@quotient,0
  4587  026D                     l1553:	
  4588  026D  3001               	movlw	1
  4589  026E                     u925:	
  4590  026E  1003               	clrc
  4591  026F  0CF3               	rrf	___lldiv@divisor+3,f
  4592  0270  0CF2               	rrf	___lldiv@divisor+2,f
  4593  0271  0CF1               	rrf	___lldiv@divisor+1,f
  4594  0272  0CF0               	rrf	___lldiv@divisor,f
  4595  0273  3EFF               	addlw	-1
  4596  0274  1D03               	skipz
  4597  0275  2A6E               	goto	u925
  4598  0276                     l1555:	
  4599  0276  3001               	movlw	1
  4600  0277  02FD               	subwf	___lldiv@counter,f
  4601  0278  1D03               	btfss	3,2
  4602  0279  2A7B               	goto	u931
  4603  027A  2A7C               	goto	u930
  4604  027B                     u931:	
  4605  027B  2A43               	goto	l1545
  4606  027C                     u930:	
  4607  027C                     l1557:	
  4608  027C  087C               	movf	___lldiv@quotient+3,w
  4609  027D  00F3               	movwf	?___lldiv+3
  4610  027E  087B               	movf	___lldiv@quotient+2,w
  4611  027F  00F2               	movwf	?___lldiv+2
  4612  0280  087A               	movf	___lldiv@quotient+1,w
  4613  0281  00F1               	movwf	?___lldiv+1
  4614  0282  0879               	movf	___lldiv@quotient,w
  4615  0283  00F0               	movwf	?___lldiv
  4616  0284                     l400:	
  4617  0284  0008               	return
  4618  0285                     __end_of___lldiv:	
  4619  007E                     btemp	set	126	;btemp
  4620  007E                     wtemp0	set	126


Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      77
    BANK1            80      0      78
    BANK3            96      0       5
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> ADCB_CHARB(BANK1[5]), uniT_char(BANK1[5]), CONTLUZB_CHAR(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[3]), STR_6(CODE[17]), 
		 -> STR_5(CODE[2]), STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), SONICOU_CHAR(BANK1[5]), ADCA_CHARA(BANK1[5]), CONTU_CHAR(BANK1[5]), 
		 -> decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _lcd_msg->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready
    _itoa->_utoa
    _utoa->___lwdiv
    _UART_INIT->___aldiv
    _I2C_INIT->___lldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _itoa->_utoa
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8804
                                             22 BANK0      3     3      0
                           _I2C_INIT
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _SETUP
                          _UART_INIT
                         _UART_WRITE
                            ___awdiv
                            ___awmod
                               _itoa
                            _lcd_cmd
                            _lcd_msg
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     425
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2    1131
                                              3 COMMON     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    3277
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1056
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     425
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_INIT                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INIT
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _SETUP
   _UART_INIT
     ___aldiv
   _UART_WRITE
   ___awdiv
   ___awmod
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_cmd
     _lcd_lat
     _lcd_ready
   _lcd_msg
     _lcd_dwr
       _lcd_lat
       _lcd_ready
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       5       9        5.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AE      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Mar 17 15:41:02 2020

                        pc 0002                __CFG_CP$OFF 0000                         _S0 0049  
                       _S1 0048               ___awdiv@sign 0076                         fsr 0004  
                      l230 0F4B                        _DC1 002A                        l400 0284  
                      _DC2 003A                        l233 0F57                        l153 079E  
                      l250 00AC                        l242 0F34                        l227 00E4  
                      l236 0F2B                        l245 0F3E                        l149 041E  
                      l159 0055                        l248 00A4                        l184 0FFF  
                      l176 0F78                        l249 00A7                        l193 0FD6  
                      l530 01BB                        l275 0F40                        l179 0F66  
                      l187 0F8A                        l268 021E                        l429 0372  
                      l517 02EB                        l278 0F4A                        l439 03FA  
                      l636 0162                        l820 035D                        l812 0FB0  
                      l646 011E                        l818 0346                        l829 007E  
                      _GIE 005F                        _RA0 0028                        _RD5 0045  
                      _RD6 0046                        _RD7 0047               __CFG_CPD$OFF 0000  
                      u710 0FF3                        u711 0FF2                        u720 0127  
                      u721 0126                        u810 00FD                        u811 00FC  
                      u740 0139                        u820 0107                        u741 0138  
                      u821 0106                        u805 00EF                        u910 025E  
                      u911 025D                        u735 012B                        u760 014A  
                      u840 011A                        u905 0245                        u761 0149  
                      u841 0119                        u825 0103                        u930 027C  
                      u850 0F51                        u931 027B                        u915 025A  
                      u851 0F50                        u755 013A                        u835 010E  
                      u860 0F57                        u940 0365                        u780 015E  
                      u925 026E                        u861 0F56                        u941 0364  
                      u781 015D                        u765 0146                        u870 022F  
                      u950 0376                        u790 00EB                        u871 022E  
                      u951 0375                        u775 0152                        u791 00EA  
                      u960 0395                        u961 0394                        u890 0243  
                      u891 0242                        u980 03A9                        u885 0234  
                      u981 03A8                        u975 039A                        u995 03AB  
                      _luz 00B9                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
                     l1501 00EB                       l1511 0107                       l1503 00EE  
                     l1513 010D                       l1505 00F5                       l1601 02EF  
                     l1521 0F7A                       l1515 0114                       l1507 00F9  
                     l1611 0314                       l1603 02F3                       l1451 0FE0  
                     l1523 0F7F                       l1541 0232                       l1533 0F4B  
                     l1509 00FD                       l1517 011A                       l1621 034A  
                     l1613 0316                       l1605 0306                       l1701 0F8E  
                     l1461 0FF4                       l1453 0FE1                       l1445 0FD7  
                     l1525 0F83                       l1551 026C                       l1543 023F  
                     l1535 0F51                       l1631 0041                       l1623 0351  
                     l1615 0329                       l1607 030A                       l1703 0F92  
                     l1463 0FFC                       l1455 0FE2                       l1447 0FDB  
                     l1527 0F84                       l1553 026D                       l1545 0243  
                     l1537 021F                       l1641 00B4                       l1633 0045  
                     l1561 035E                       l1801 017E                       l1481 0131  
                     l1473 011F                       l1625 0353                       l1617 033A  
                     l1609 0310                       l1705 0F99                       l1465 0F58  
                     l1457 0FEA                       l1449 0FDF                       l1529 0F85  
                     l1721 0071                       l1713 0057                       l1555 0276  
                     l1547 024C                       l1539 022F                       l1643 00E1  
                     l1635 0046                       l1571 0385                       l1563 0361  
                     l1651 01BC                       l1811 019A                       l1803 0181  
                     l1491 0151                       l1483 0135                       l1475 0121  
                     l1627 0359                       l1619 0342                       l1707 0F9D  
                     l1467 0F5B                       l1459 0FF3                       l1731 0F73  
                     l1723 0F68                       l1715 005C                       l1549 025E  
                     l1557 027C                       l1645 00E2                       l1637 00AD  
                     l1581 03A9                       l1573 038D                       l1565 0365  
                     l1661 0219                       l1653 0215                       l1821 01B7  
                     l1813 01A0                       l1805 0188                       l1493 0158  
                     l1485 0139                       l1477 0127                       l1709 0FA2  
                     l1469 0F63                       l1725 0F6D                       l1741 0FC6  
                     l1717 0060                       l1901 065C                       l1647 00E3  
                     l1639 00B1                       l1671 0F35                       l1591 03DC  
                     l1583 03B2                       l1575 0395                       l1567 0376  
                     l1663 021C                       l1655 0216                       l1751 0291  
                     l1743 0285                       l1815 01A7                       l1807 018C  
                     l1487 014A                       l1479 012A                       l1495 015E  
                     l1727 0F71                       l1735 0FB1                       l1719 0069  
                     l1911 069C                       l1903 0674                       l1831 0465  
                     l1681 0095                       l1673 0F3A                       l1585 03C4  
                     l1577 0398                       l1593 03E2                       l1569 0381  
                     l1665 021D                       l1657 0217                       l1761 02A6  
                     l1753 0295                       l1745 0286                       l1809 0190  
                     l1817 01AD                       l1489 0150                       l1729 0F72  
                     l1737 0FB2                       l1921 06D5                       l1913 06AA  
                     l1905 0682                       l1841 04BD                       l1833 047D  
                     l1825 03FB                       l1683 009A                       l1675 007F  
                     l1667 0F23                       l1691 0F2C                       l1595 03E7  
                     l1587 03D2                       l1579 03A5                       l1659 0218  
                     l1771 02C9                       l1763 02A9                       l1755 029A  
                     l1747 028A                       l1819 01B2                       l1499 00E5  
                     l1739 0FC0                       l1931 0727                       l1923 06ED  
                     l1915 06AF                       l1907 068E                       l1851 04ED  
                     l1843 04C2                       l1835 048B                       l1827 043F  
                     l1685 00A0                       l1677 0084                       l1669 0F28  
                     l1693 0F31                       l1597 03F2                       l1589 03D3  
                     l1781 02E2                       l1773 02CF                       l1765 02B0  
                     l1757 029E                       l1749 028F                       l1941 0744  
                     l1933 072C                       l1925 06FB                       l1917 06BE  
                     l1909 0693                       l1861 0542                       l1853 04F5  
                     l1845 04CB                       l1837 04A3                       l1829 044E  
                     l1687 00A8                       l1679 008C                       l1695 0F40  
                     l1783 02E7                       l1775 02D0                       l1767 02B4  
                     l1759 02A0                       l1791 0168                       l1951 076E  
                     l1943 074A                       l1935 0732                       l1927 0713  
                     l1919 06C6                       l1871 0578                       l1863 0550  
                     l1855 0504                       l1847 04D9                       l1839 04B1  
                     l1697 0F46                       l1777 02D7                       l1769 02B8  
                     l1793 016D                       l1961 0794                       l1953 0777  
                     l1945 0753                       l1937 0735                       l1929 0721  
                     l1881 05C9                       l1873 057D                       l1865 055C  
                     l1857 051C                       l1849 04DE                       l1779 02DD  
                     l1795 016F                       l1787 0163                       l1699 0F8E  
                     l1963 079A                       l1955 0780                       l1947 075C  
                     l1939 073B                       l1891 060B                       l1883 05E1  
                     l1875 0594                       l1867 0561                       l1859 052A  
                     l1797 0173                       l1789 0164                       l1965 07A4  
                     l1949 0765                       l1957 0789                       l1893 0610  
                     l1885 05EF                       l1877 05A3                       l1869 056A  
                     l1799 0178                       l1967 07AD                       l1959 078F  
                     l1895 0627                       l1887 05F4                       l1879 05BB  
                     l1897 0636                       l1889 05FD                       l1899 064E  
                     STR_1 0024                       STR_2 003A                       STR_3 0037  
                     STR_4 0037                       STR_5 003A                       STR_6 0013  
                     STR_7 0039                       STR_8 0036                       STR_9 0035  
                     u1000 03C4                       u1001 03C3                       u1020 03E2  
                     u1021 03E1                       u1005 03C0                       u1101 01F7  
                     u1110 00A0                       u1030 03E7                       u1102 01F8  
                     u1111 009F                       u1031 03E6                       u1015 03D4  
                     u1103 01FD                       u1104 01FE                       u1120 0F46  
                     u1040 0310                       u1105 0203                       u1121 0F45  
                     u1041 030F                       u1106 0204                       u1210 02B8  
                     u1050 0342                       u1130 0F92                       u1211 02B7  
                     u1051 0341                       u1131 0F91                       u1060 0359  
                     u1140 0068                       u1205 02AA                       u1061 0358  
                     u1141 0067                       u1070 00C4                       u1230 02C9  
                     u1310 0190                       u1150 007E                       u1231 02C8  
                     u1311 018F                       u1151 007D                       u1080 01CC  
                     u1320 019A                       u1160 0FD6                       u1225 02B9  
                     u1321 0199                       u1305 0182                       u1161 0FD5  
                     u1090 01E5                       u1250 02DD                       u1170 028A  
                     u1075 00BF                       u1251 02DC                       u1235 02C5  
                     u1171 0289                       u1260 02E2                       u1180 0295  
                     u1340 01AD                       u1085 01C7                       u1261 02E1  
                     u1245 02D1                       u1181 0294                       u1341 01AC  
                     u1325 0196                       u1190 02A6                       u1350 01B2  
                     u1270 0168                       u1095 01E0                       u1191 02A5  
                     u1351 01B1                       u1335 01A1                       u1271 0167  
                     u1407 0447                       u1280 0173                       u1360 0727  
                     u1281 0172                       u1361 0726                       u1417 045E  
                     u1290 017E                       u1370 072C                       u1291 017D  
                     u1507 0FE6                       u1371 072B                       u1427 04E6  
                     u1380 078F                       u1517 0FF8                       u1381 078E  
                     u1437 04FD                       u1390 0794                       u1527 0F5F  
                     u1391 0793                       u1447 0585                       u1457 059C  
                     u1467 0618                       u1477 062F                       u1487 06B7  
                     u1497 06CE                       _PEIE 005E                       _RCEN 048B  
             __CFG_WRT$OFF 0000           __end_of_I2C_INIT 00E5                       _decT 0040  
                     _main 03FB                       _itoa 0F8B                       _uniT 0042  
                     btemp 007E                       _utoa 02EC                       start 0000  
            __CFG_IESO$OFF 0000           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070            __end_of___aldiv 03FB                      ?_main 0070  
                    _ADC_A 0024                      ?_itoa 0058            __end_of___awdiv 02EC  
            __CFG_WDTE$OFF 0000            __end_of___awmod 01BC                      _ANSEL 0188  
          __end_of___lldiv 0285                      ?_utoa 0078            ___awdiv@divisor 0070  
                    _CONTD 0032                      _CONTU 002E            __end_of___lwdiv 0163  
          __end_of___lwmod 011F            ___awdiv@counter 0075                      _RCREG 001A  
              ?_UART_WRITE 0070                      _SETUP 0041                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _LUZ_A 0034  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019         __size_of_UART_INIT 0063  
           __CFG_FCMEN$OFF 0000            __end_of_lcd_cmd 0F79            __end_of_lcd_lat 0F67  
          __end_of_lcd_dwr 0F8B            __end_of_lcd_msg 0FD7                      _decHR 003C  
                    _uniHR 003E             __CFG_BOREN$OFF 0000                      pclath 000A  
                    utoa@c 0056                      utoa@v 0054                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07E4  
             __end_of_main 07E4               __end_of_itoa 0FB1               __end_of_utoa 035E  
                I2C_INIT@c 0054                     ??_main 006A                     ??_itoa 007D  
                   ??_utoa 007C                     ?_SETUP 0070          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___awdiv@dividend 0072                     _ANSELH 0189                     _SONICO 004B  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013             __CFG_PWRTE$OFF 0000  
      __size_of_UART_WRITE 000C          __end_of_UART_INIT 021F                  ??___aldiv 0078  
                ??___awdiv 0074                  ??___awmod 0074                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 0074           ___awdiv@quotient 0077  
          ___awmod@divisor 0070            ___awmod@counter 0075                  ??_lcd_cmd 0072  
                ??_lcd_lat 0070                     _strcat 0056                  ??_lcd_dwr 0072  
                ??_lcd_msg 0075                  ?_I2C_INIT 0054             UART_WRITE@data 0070  
  __end_of__initialization 07FC              __end_of_SETUP 0056             __pcstackCOMMON 0070  
               ??_I2C_INIT 0058                    ??_SETUP 0070         __size_of_lcd_ready 0029  
               __pbssBANK0 0020                 __pbssBANK1 00A0                 __pbssBANK3 0190  
               __pmaintext 03FB                    _ADC_1_A 0028                    _ADC_1_B 0026  
                  ?_strcat 0070               ??_UART_WRITE 0070                    _SONICOD 0030  
                  _SONICOU 002C                    _LUZ_1_A 0038                    _LUZ_1_B 0036  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
                  _T_byte1 004A         __end_of_UART_WRITE 0F4B          __end_of_lcd_ready 1000  
                  ___aldiv 035E                    ___awdiv 0285                    ___awmod 0163  
                  ___lldiv 021F                    ___lwdiv 011F                    ___lwmod 00E5  
                  __ptext1 0056                    __ptext2 0FB1                    __ptext3 0F79  
                  __ptext4 0F67                    __ptext5 0FD7                    __ptext6 0F58  
                  __ptext7 0F8B                    __ptext8 02EC                    __ptext9 00E5  
                  _lcd_cmd 0F67                    _lcd_lat 0F58                    _lcd_dwr 0F79  
                  _lcd_msg 0FB1            __size_of_strcat 0029           ___awmod@dividend 0072  
         ___aldiv@dividend 0074   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009                    clrloop0 0F1C                    _voltage 00BD  
     end_of_initialization 07FC                    itoa@buf 005D                    itoa@val 0058  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018           ___aldiv@quotient 0056  
         I2C_Master_Read@a 0070                    utoa@buf 0057                    utoa@val 0078  
                _UART_INIT 01BC                  _TRISCbits 0087          __size_of_I2C_INIT 0038  
                _TXSTAbits 0098                 ?_UART_INIT 005A             __end_of_strcat 007F  
      start_initialization 07E4          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                   ??_strcat 0071                  ___latbits 0002  
            __pcstackBANK0 0054                  _decT_char 00C1           _I2C_Master_Start 0F23  
         _I2C_Master_Write 0F35           ___lwdiv@dividend 0072                   ?___aldiv 0070  
                 ?___awdiv 0070                   ?___awmod 0070                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0070                ??_UART_INIT 005E  
                _lcd_ready 0FD7                  __pstrings 0003                   ?_lcd_cmd 0070  
                 ?_lcd_lat 0070                   ?_lcd_dwr 0070                   ?_lcd_msg 0073  
                 _I2C_INIT 00AD             __size_of_SETUP 0015           ___lwdiv@quotient 0075  
                 _CONTADOR 004D                   _CONTLUZA 0046                   _CONTLUZB 0044  
          ___aldiv@divisor 0070            ___aldiv@counter 0054         _analogic_digital_a 004E  
       _analogic_digital_b 004C                  clear_ram0 0F1B                   _PIR1bits 000C  
                 _POINTERA 0190                   _POINTERB 00A5                  _uniT_char 00C6  
               _ADCA_CHARA 00D0                 _ADCB_CHARB 00CB                 _ADCC_CHARC 00A0  
               ?_lcd_ready 0070                __stringbase 0012        I2C_Master_Read@temp 0074  
            _CONTLUZA_CHAR 004F              _CONTLUZB_CHAR 00E9           __size_of___aldiv 009D  
         __size_of___awdiv 0067           __size_of___awmod 0059           __size_of___lldiv 0066  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
                 _decT_int 0020           __size_of_lcd_cmd 0012           __size_of_lcd_lat 000F  
         __size_of_lcd_dwr 0012           __size_of_lcd_msg 0026            _I2C_Master_Read 007F  
          _I2C_Master_Wait 0F4B                 strcat@from 0070            _I2C_Master_Stop 0F2C  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077                   __ptext10 011F  
                 __ptext11 0163                   __ptext20 007F                   __ptext12 0285  
                 __ptext21 0F4B                   __ptext13 0F3F                   __ptext22 00AD  
                 __ptext14 01BC                   __ptext23 021F                   __ptext15 035E  
                 __ptext16 0041                   __ptext17 0F35                   __ptext18 0F2C  
                 __ptext19 0F23          __CFG_BOR4V$BOR40V 0000                 _CONTD_CHAR 00DA  
               _CONTU_CHAR 00D5          UART_INIT@baudrate 005A              __size_of_main 03E9  
             _SONICOD_CHAR 00E4              __size_of_itoa 0026              __size_of_utoa 0072  
             _SONICOU_CHAR 00DF                   _uniT_int 0022                   lcd_cmd@x 0072  
                 lcd_dwr@x 0072                   lcd_msg@c 0073                ??_lcd_ready 0070  
 __end_of_I2C_Master_Start 0F2C   __end_of_I2C_Master_Write 0F3F                   itoa@base 005A  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 000D  
  __end_of_I2C_Master_Read 00AD    __end_of_I2C_Master_Wait 0F58    __end_of_I2C_Master_Stop 0F35  
                 utoa@base 007A                   strcat@cp 0073                 _LUZA_CHARA 00B4  
                 strcat@to 0072                 _LUZB_CHARB 00AF                 _UART_WRITE 0F3F  
               _LUZC_CHARC 00AA           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003               ___aldiv@sign 0055                _SSPCON2bits 0091  
