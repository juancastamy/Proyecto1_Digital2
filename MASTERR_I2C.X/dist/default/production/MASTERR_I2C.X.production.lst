

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 19 21:50:04 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.10
    40                           ; Generated 31/07/2019 GMT
    41                           ; 
    42                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  0000                     	;# 
   386  0001                     	;# 
   387  0002                     	;# 
   388  0003                     	;# 
   389  0004                     	;# 
   390  0005                     	;# 
   391  0006                     	;# 
   392  0007                     	;# 
   393  0008                     	;# 
   394  0009                     	;# 
   395  000A                     	;# 
   396  000B                     	;# 
   397  000C                     	;# 
   398  000D                     	;# 
   399  000E                     	;# 
   400  000E                     	;# 
   401  000F                     	;# 
   402  0010                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001D                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  0081                     	;# 
   421  0085                     	;# 
   422  0086                     	;# 
   423  0087                     	;# 
   424  0088                     	;# 
   425  0089                     	;# 
   426  008C                     	;# 
   427  008D                     	;# 
   428  008E                     	;# 
   429  008F                     	;# 
   430  0090                     	;# 
   431  0091                     	;# 
   432  0092                     	;# 
   433  0093                     	;# 
   434  0093                     	;# 
   435  0093                     	;# 
   436  0094                     	;# 
   437  0095                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  009F                     	;# 
   448  0105                     	;# 
   449  0107                     	;# 
   450  0108                     	;# 
   451  0109                     	;# 
   452  010C                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  010F                     	;# 
   457  0185                     	;# 
   458  0187                     	;# 
   459  0188                     	;# 
   460  0189                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  0019                     _TXREG	set	25
   464  001A                     _RCREG	set	26
   465  000C                     _PIR1bits	set	12
   466  0018                     _RCSTAbits	set	24
   467  0013                     _SSPBUF	set	19
   468  0014                     _SSPCON	set	20
   469  0009                     _PORTE	set	9
   470  0008                     _PORTD	set	8
   471  0007                     _PORTC	set	7
   472  0006                     _PORTB	set	6
   473  0005                     _PORTA	set	5
   474  0063                     _SSPIF	set	99
   475  005E                     _PEIE	set	94
   476  005F                     _GIE	set	95
   477  0047                     _RD7	set	71
   478  0046                     _RD6	set	70
   479  0045                     _RD5	set	69
   480  0028                     _RA0	set	40
   481  0098                     _TXSTAbits	set	152
   482  0099                     _SPBRG	set	153
   483  0091                     _SSPCON2bits	set	145
   484  0087                     _TRISCbits	set	135
   485  0094                     _SSPSTAT	set	148
   486  0093                     _SSPADD	set	147
   487  0091                     _SSPCON2	set	145
   488  0089                     _TRISE	set	137
   489  0088                     _TRISD	set	136
   490  0087                     _TRISC	set	135
   491  0086                     _TRISB	set	134
   492  0085                     _TRISA	set	133
   493  0463                     _SSPIE	set	1123
   494  043C                     _TRISC4	set	1084
   495  043B                     _TRISC3	set	1083
   496  048B                     _RCEN	set	1163
   497  0189                     _ANSELH	set	393
   498  0188                     _ANSEL	set	392
   499                           
   500                           	psect	strings
   501  0003                     __pstrings:	
   502  0003                     stringtab:	
   503  0003                     __stringtab:	
   504                           
   505                           ;	String table - string pointers are 1 byte each
   506  0003  1BFF               	btfsc	btemp+1,7
   507  0004  280D               	ljmp	stringcode
   508  0005  1383               	bcf	3,7
   509  0006  187F               	btfsc	btemp+1,0
   510  0007  1783               	bsf	3,7
   511  0008  0800               	movf	0,w
   512  0009  0A84               	incf	4,f
   513  000A  1903               	skipnz
   514  000B  0AFF               	incf	btemp+1,f
   515  000C  0008               	return
   516  000D                     stringcode:	
   517  000D                     stringdir:	
   518  000D  3000               	movlw	high stringdir
   519  000E  008A               	movwf	10
   520  000F  0804               	movf	4,w
   521  0010  0A84               	incf	4,f
   522  0011  0782               	addwf	2,f
   523  0012                     __stringbase:	
   524  0012  3400               	retlw	0
   525  0013                     __end_of__stringtab:	
   526  0013                     STR_6:	
   527  0013  3420               	retlw	32	;' '
   528  0014  3446               	retlw	70	;'F'
   529  0015  3455               	retlw	85	;'U'
   530  0016  3445               	retlw	69	;'E'
   531  0017  3452               	retlw	82	;'R'
   532  0018  345A               	retlw	90	;'Z'
   533  0019  3441               	retlw	65	;'A'
   534  001A  3420               	retlw	32	;' '
   535  001B  3455               	retlw	85	;'U'
   536  001C  344C               	retlw	76	;'L'
   537  001D  3454               	retlw	84	;'T'
   538  001E  3452               	retlw	82	;'R'
   539  001F  3441               	retlw	65	;'A'
   540  0020  3420               	retlw	32	;' '
   541  0021  3420               	retlw	32	;' '
   542  0022  3420               	retlw	32	;' '
   543  0023  3400               	retlw	0
   544  0024                     STR_1:	
   545  0024  3454               	retlw	84	;'T'
   546  0025  3445               	retlw	69	;'E'
   547  0026  344D               	retlw	77	;'M'
   548  0027  3450               	retlw	80	;'P'
   549  0028  3420               	retlw	32	;' '
   550  0029  3443               	retlw	67	;'C'
   551  002A  3441               	retlw	65	;'A'
   552  002B  3452               	retlw	82	;'R'
   553  002C  3452               	retlw	82	;'R'
   554  002D  344F               	retlw	79	;'O'
   555  002E  3453               	retlw	83	;'S'
   556  002F  3420               	retlw	32	;' '
   557  0030  344C               	retlw	76	;'L'
   558  0031  3455               	retlw	85	;'U'
   559  0032  345A               	retlw	90	;'Z'
   560  0033  3420               	retlw	32	;' '
   561  0034  3400               	retlw	0
   562  0035                     STR_9:	
   563  0035  3420               	retlw	32	;' '
   564  0036  3420               	retlw	32	;' '
   565  0037  3420               	retlw	32	;' '
   566  0038  3420               	retlw	32	;' '
   567  0039  3420               	retlw	32	;' '
   568  003A  3420               	retlw	32	;' '
   569  003B  3400               	retlw	0
   570  003A                     
   571                           ; #config settings
   572  0000                     
   573                           	psect	cinit
   574  07E4                     start_initialization:	
   575  07E4                     __initialization:	
   576                           
   577                           ; Clear objects allocated to BANK0
   578  07E4  1383               	bcf	3,7	;select IRP bank0
   579  07E5  3020               	movlw	low __pbssBANK0
   580  07E6  0084               	movwf	4
   581  07E7  3054               	movlw	low (__pbssBANK0+52)
   582  07E8  120A  158A  2710  120A  118A  	fcall	clear_ram0
   583                           
   584                           ; Clear objects allocated to BANK1
   585  07ED  30A0               	movlw	low __pbssBANK1
   586  07EE  0084               	movwf	4
   587  07EF  30EE               	movlw	low (__pbssBANK1+78)
   588  07F0  120A  158A  2710  120A  118A  	fcall	clear_ram0
   589                           
   590                           ; Clear objects allocated to BANK3
   591  07F5  1683               	bsf	3,5	;RP0=1, select bank3
   592  07F6  1703               	bsf	3,6	;RP1=1, select bank3
   593  07F7  0190               	clrf	__pbssBANK3& (0+127)
   594  07F8  0191               	clrf	(__pbssBANK3+1)& (0+127)
   595  07F9  0192               	clrf	(__pbssBANK3+2)& (0+127)
   596  07FA  0193               	clrf	(__pbssBANK3+3)& (0+127)
   597  07FB  0194               	clrf	(__pbssBANK3+4)& (0+127)
   598  07FC                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  07FC                     __end_of__initialization:	
   602  07FC  0183               	clrf	3
   603  07FD  120A  118A  2C0F   	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssBANK0
   606  0020                     __pbssBANK0:	
   607  0020                     _decT_int:	
   608  0020                     	ds	2
   609  0022                     _uniT_int:	
   610  0022                     	ds	2
   611  0024                     _ADC_A:	
   612  0024                     	ds	2
   613  0026                     _ADC_1_B:	
   614  0026                     	ds	2
   615  0028                     _ADC_1_A:	
   616  0028                     	ds	2
   617  002A                     _DC1:	
   618  002A                     	ds	2
   619  002C                     _SONICOU:	
   620  002C                     	ds	2
   621  002E                     _CONTU:	
   622  002E                     	ds	2
   623  0030                     _SONICOD:	
   624  0030                     	ds	2
   625  0032                     _CONTD:	
   626  0032                     	ds	2
   627  0034                     _LUZ_A:	
   628  0034                     	ds	2
   629  0036                     _LUZ_1_B:	
   630  0036                     	ds	2
   631  0038                     _LUZ_1_A:	
   632  0038                     	ds	2
   633  003A                     _DC2:	
   634  003A                     	ds	2
   635  003C                     _decHR:	
   636  003C                     	ds	2
   637  003E                     _uniHR:	
   638  003E                     	ds	2
   639  0040                     _decT:	
   640  0040                     	ds	2
   641  0042                     _uniT:	
   642  0042                     	ds	2
   643  0044                     _CONTLUZB:	
   644  0044                     	ds	2
   645  0046                     _CONTLUZA:	
   646  0046                     	ds	2
   647  0048                     _S1:	
   648  0048                     	ds	1
   649  0049                     _S0:	
   650  0049                     	ds	1
   651  004A                     _T_byte1:	
   652  004A                     	ds	1
   653  004B                     _SONICO:	
   654  004B                     	ds	1
   655  004C                     _analogic_digital_b:	
   656  004C                     	ds	1
   657  004D                     _CONTADOR:	
   658  004D                     	ds	1
   659  004E                     _analogic_digital_a:	
   660  004E                     	ds	1
   661  004F                     _CONTLUZA_CHAR:	
   662  004F                     	ds	5
   663                           
   664                           	psect	bssBANK1
   665  00A0                     __pbssBANK1:	
   666  00A0                     _ADCC_CHARC:	
   667  00A0                     	ds	5
   668  00A5                     _POINTERB:	
   669  00A5                     	ds	5
   670  00AA                     _LUZC_CHARC:	
   671  00AA                     	ds	5
   672  00AF                     _LUZB_CHARB:	
   673  00AF                     	ds	5
   674  00B4                     _LUZA_CHARA:	
   675  00B4                     	ds	5
   676  00B9                     _luz:	
   677  00B9                     	ds	4
   678  00BD                     _voltage:	
   679  00BD                     	ds	4
   680  00C1                     _decT_char:	
   681  00C1                     	ds	5
   682  00C6                     _uniT_char:	
   683  00C6                     	ds	5
   684  00CB                     _ADCB_CHARB:	
   685  00CB                     	ds	5
   686  00D0                     _ADCA_CHARA:	
   687  00D0                     	ds	5
   688  00D5                     _CONTU_CHAR:	
   689  00D5                     	ds	5
   690  00DA                     _CONTD_CHAR:	
   691  00DA                     	ds	5
   692  00DF                     _SONICOU_CHAR:	
   693  00DF                     	ds	5
   694  00E4                     _SONICOD_CHAR:	
   695  00E4                     	ds	5
   696  00E9                     _CONTLUZB_CHAR:	
   697  00E9                     	ds	5
   698                           
   699                           	psect	bssBANK3
   700  0190                     __pbssBANK3:	
   701  0190                     _POINTERA:	
   702  0190                     	ds	5
   703                           
   704                           	psect	clrtext
   705  0F10                     clear_ram0:	
   706                           ;	Called with FSR containing the base address, and
   707                           ;	W with the last address+1
   708                           
   709  0F10  0064               	clrwdt	;clear the watchdog before getting into this loop
   710  0F11                     clrloop0:	
   711  0F11  0180               	clrf	0	;clear RAM location pointed to by FSR
   712  0F12  0A84               	incf	4,f	;increment pointer
   713  0F13  0604               	xorwf	4,w	;XOR with final address
   714  0F14  1903               	btfsc	3,2	;have we reached the end yet?
   715  0F15  3400               	retlw	0	;all done for this memory range, return
   716  0F16  0604               	xorwf	4,w	;XOR again to restore value
   717  0F17  2F11               	goto	clrloop0	;do the next byte
   718                           
   719                           	psect	cstackCOMMON
   720  0070                     __pcstackCOMMON:	
   721  0070                     ?_SETUP:	
   722  0070                     ??_SETUP:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ?_inicializacion:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0070                     ?_I2C_Master_Start:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0070                     ??_I2C_Master_Start:	
   732                           ; 1 bytes @ 0x0
   733                           
   734  0070                     ?_I2C_Master_Write:	
   735                           ; 1 bytes @ 0x0
   736                           
   737  0070                     ?_I2C_Master_Stop:	
   738                           ; 1 bytes @ 0x0
   739                           
   740  0070                     ??_I2C_Master_Stop:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     ?_strcat:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     ?_lcd_cmd:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ?_UART_WRITE:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ??_UART_WRITE:	
   753                           ; 1 bytes @ 0x0
   754                           
   755  0070                     ?_lcd_ready:	
   756                           ; 1 bytes @ 0x0
   757                           
   758  0070                     ??_lcd_ready:	
   759                           ; 1 bytes @ 0x0
   760                           
   761  0070                     ?_lcd_lat:	
   762                           ; 1 bytes @ 0x0
   763                           
   764  0070                     ??_lcd_lat:	
   765                           ; 1 bytes @ 0x0
   766                           
   767  0070                     ?_main:	
   768                           ; 1 bytes @ 0x0
   769                           
   770  0070                     ?_lcd_dwr:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0070                     ?_I2C_Master_Wait:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0070                     ??_I2C_Master_Wait:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0070                     ?_I2C_Master_Read:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0070                     ?___awdiv:	
   783                           ; 2 bytes @ 0x0
   784                           
   785  0070                     ?___awmod:	
   786                           ; 2 bytes @ 0x0
   787                           
   788  0070                     ?___lwdiv:	
   789                           ; 2 bytes @ 0x0
   790                           
   791  0070                     ?___lwmod:	
   792                           ; 2 bytes @ 0x0
   793                           
   794  0070                     ?___lldiv:	
   795                           ; 2 bytes @ 0x0
   796                           
   797  0070                     ?___aldiv:	
   798                           ; 4 bytes @ 0x0
   799                           
   800  0070                     UART_WRITE@data:	
   801                           ; 4 bytes @ 0x0
   802                           
   803  0070                     strcat@from:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0070                     I2C_Master_Write@d:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0070                     I2C_Master_Read@a:	
   810                           ; 2 bytes @ 0x0
   811                           
   812  0070                     ___awdiv@divisor:	
   813                           ; 2 bytes @ 0x0
   814                           
   815  0070                     ___awmod@divisor:	
   816                           ; 2 bytes @ 0x0
   817                           
   818  0070                     ___lwdiv@divisor:	
   819                           ; 2 bytes @ 0x0
   820                           
   821  0070                     ___lwmod@divisor:	
   822                           ; 2 bytes @ 0x0
   823                           
   824  0070                     ___lldiv@divisor:	
   825                           ; 2 bytes @ 0x0
   826                           
   827  0070                     ___aldiv@divisor:	
   828                           ; 4 bytes @ 0x0
   829                           
   830                           
   831                           ; 4 bytes @ 0x0
   832  0070                     	ds	1
   833  0071                     ??_strcat:	
   834                           
   835                           ; 1 bytes @ 0x1
   836  0071                     	ds	1
   837  0072                     ??_I2C_Master_Write:	
   838  0072                     ??_I2C_Master_Read:	
   839                           ; 1 bytes @ 0x2
   840                           
   841  0072                     ??_lcd_cmd:	
   842                           ; 1 bytes @ 0x2
   843                           
   844  0072                     ??_lcd_dwr:	
   845                           ; 1 bytes @ 0x2
   846                           
   847  0072                     lcd_cmd@x:	
   848                           ; 1 bytes @ 0x2
   849                           
   850  0072                     lcd_dwr@x:	
   851                           ; 1 bytes @ 0x2
   852                           
   853  0072                     strcat@to:	
   854                           ; 1 bytes @ 0x2
   855                           
   856  0072                     ___awdiv@dividend:	
   857                           ; 1 bytes @ 0x2
   858                           
   859  0072                     ___awmod@dividend:	
   860                           ; 2 bytes @ 0x2
   861                           
   862  0072                     ___lwdiv@dividend:	
   863                           ; 2 bytes @ 0x2
   864                           
   865  0072                     ___lwmod@dividend:	
   866                           ; 2 bytes @ 0x2
   867                           
   868                           
   869                           ; 2 bytes @ 0x2
   870  0072                     	ds	1
   871  0073                     ??_inicializacion:	
   872  0073                     ?_lcd_msg:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0073                     strcat@cp:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0073                     lcd_msg@c:	
   879                           ; 1 bytes @ 0x3
   880                           
   881                           
   882                           ; 2 bytes @ 0x3
   883  0073                     	ds	1
   884  0074                     ??___awdiv:	
   885  0074                     ??___awmod:	
   886                           ; 1 bytes @ 0x4
   887                           
   888  0074                     ??___lwdiv:	
   889                           ; 1 bytes @ 0x4
   890                           
   891  0074                     ??___lwmod:	
   892                           ; 1 bytes @ 0x4
   893                           
   894  0074                     I2C_Master_Read@temp:	
   895                           ; 1 bytes @ 0x4
   896                           
   897  0074                     ___lldiv@dividend:	
   898                           ; 2 bytes @ 0x4
   899                           
   900  0074                     ___aldiv@dividend:	
   901                           ; 4 bytes @ 0x4
   902                           
   903                           
   904                           ; 4 bytes @ 0x4
   905  0074                     	ds	1
   906  0075                     ??_lcd_msg:	
   907  0075                     ___awdiv@counter:	
   908                           ; 1 bytes @ 0x5
   909                           
   910  0075                     ___awmod@counter:	
   911                           ; 1 bytes @ 0x5
   912                           
   913  0075                     ___lwmod@counter:	
   914                           ; 1 bytes @ 0x5
   915                           
   916  0075                     ___lwdiv@quotient:	
   917                           ; 1 bytes @ 0x5
   918                           
   919                           
   920                           ; 2 bytes @ 0x5
   921  0075                     	ds	1
   922  0076                     ___awdiv@sign:	
   923  0076                     ___awmod@sign:	
   924                           ; 1 bytes @ 0x6
   925                           
   926                           
   927                           ; 1 bytes @ 0x6
   928  0076                     	ds	1
   929  0077                     ___lwdiv@counter:	
   930  0077                     ___awdiv@quotient:	
   931                           ; 1 bytes @ 0x7
   932                           
   933                           
   934                           ; 2 bytes @ 0x7
   935  0077                     	ds	1
   936  0078                     ?_utoa:	
   937  0078                     ??___lldiv:	
   938                           ; 1 bytes @ 0x8
   939                           
   940  0078                     ??___aldiv:	
   941                           ; 1 bytes @ 0x8
   942                           
   943  0078                     utoa@val:	
   944                           ; 1 bytes @ 0x8
   945                           
   946                           
   947                           ; 2 bytes @ 0x8
   948  0078                     	ds	1
   949  0079                     ___lldiv@quotient:	
   950                           
   951                           ; 4 bytes @ 0x9
   952  0079                     	ds	1
   953  007A                     utoa@base:	
   954                           
   955                           ; 2 bytes @ 0xA
   956  007A                     	ds	2
   957  007C                     ??_utoa:	
   958                           
   959                           ; 1 bytes @ 0xC
   960  007C                     	ds	1
   961  007D                     ??_itoa:	
   962  007D                     ___lldiv@counter:	
   963                           ; 1 bytes @ 0xD
   964                           
   965                           
   966                           ; 1 bytes @ 0xD
   967  007D                     	ds	1
   968                           
   969                           	psect	cstackBANK0
   970  0054                     __pcstackBANK0:	
   971  0054                     ?_I2C_INIT:	
   972  0054                     ___aldiv@counter:	
   973                           ; 1 bytes @ 0x0
   974                           
   975  0054                     utoa@v:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0054                     I2C_INIT@c:	
   979                           ; 2 bytes @ 0x0
   980                           
   981                           
   982                           ; 4 bytes @ 0x0
   983  0054                     	ds	1
   984  0055                     ___aldiv@sign:	
   985                           
   986                           ; 1 bytes @ 0x1
   987  0055                     	ds	1
   988  0056                     utoa@c:	
   989  0056                     ___aldiv@quotient:	
   990                           ; 1 bytes @ 0x2
   991                           
   992                           
   993                           ; 4 bytes @ 0x2
   994  0056                     	ds	1
   995  0057                     utoa@buf:	
   996                           
   997                           ; 1 bytes @ 0x3
   998  0057                     	ds	1
   999  0058                     ??_I2C_INIT:	
  1000  0058                     ?_itoa:	
  1001                           ; 1 bytes @ 0x4
  1002                           
  1003  0058                     itoa@val:	
  1004                           ; 1 bytes @ 0x4
  1005                           
  1006                           
  1007                           ; 2 bytes @ 0x4
  1008  0058                     	ds	2
  1009  005A                     ?_UART_INIT:	
  1010  005A                     itoa@base:	
  1011                           ; 1 bytes @ 0x6
  1012                           
  1013  005A                     UART_INIT@baudrate:	
  1014                           ; 2 bytes @ 0x6
  1015                           
  1016                           
  1017                           ; 4 bytes @ 0x6
  1018  005A                     	ds	3
  1019  005D                     itoa@buf:	
  1020                           
  1021                           ; 1 bytes @ 0x9
  1022  005D                     	ds	1
  1023  005E                     ??_UART_INIT:	
  1024                           
  1025                           ; 1 bytes @ 0xA
  1026  005E                     	ds	12
  1027  006A                     ??_main:	
  1028                           
  1029                           ; 1 bytes @ 0x16
  1030  006A                     	ds	3
  1031                           
  1032                           	psect	maintext
  1033  040F                     __pmaintext:	
  1034 ;;
  1035 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1036 ;;
  1037 ;; *************** function _main *****************
  1038 ;; Defined at:
  1039 ;;		line 95 in file "MASTERR_I2C.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : B00/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          0       3       0       0       0
  1056 ;;      Totals:         0       3       0       0       0
  1057 ;;Total ram usage:        3 bytes
  1058 ;; Hardware stack levels required when called:    3
  1059 ;; This function calls:
  1060 ;;		_I2C_INIT
  1061 ;;		_I2C_Master_Read
  1062 ;;		_I2C_Master_Start
  1063 ;;		_I2C_Master_Stop
  1064 ;;		_I2C_Master_Write
  1065 ;;		_SETUP
  1066 ;;		_UART_INIT
  1067 ;;		_UART_WRITE
  1068 ;;		___awdiv
  1069 ;;		___awmod
  1070 ;;		_inicializacion
  1071 ;;		_itoa
  1072 ;;		_lcd_cmd
  1073 ;;		_lcd_msg
  1074 ;;		_strcat
  1075 ;; This function is called by:
  1076 ;;		Startup code after reset
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _main
  1082  040F                     _main:	
  1083  040F                     l1833:	
  1084                           ;incstack = 0
  1085                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1086                           
  1087                           
  1088                           ;MASTERR_I2C.c: 96:     SETUP();
  1089  040F  120A  158A  2780  120A  118A  	fcall	_SETUP
  1090                           
  1091                           ;MASTERR_I2C.c: 97:     I2C_INIT(100000);
  1092  0414  3000               	movlw	0
  1093  0415  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0416  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0417  00D7               	movwf	I2C_INIT@c+3
  1096  0418  3001               	movlw	1
  1097  0419  00D6               	movwf	I2C_INIT@c+2
  1098  041A  3086               	movlw	134
  1099  041B  00D5               	movwf	I2C_INIT@c+1
  1100  041C  30A0               	movlw	160
  1101  041D  00D4               	movwf	I2C_INIT@c
  1102  041E  120A  118A  20C1  120A  118A  	fcall	_I2C_INIT
  1103                           
  1104                           ;MASTERR_I2C.c: 98:     inicializacion();
  1105  0423  120A  158A  2795  120A  118A  	fcall	_inicializacion
  1106                           
  1107                           ;MASTERR_I2C.c: 99:     UART_INIT(9600);
  1108  0428  3000               	movlw	0
  1109  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1110  042A  1303               	bcf	3,6	;RP1=0, select bank0
  1111  042B  00DD               	movwf	UART_INIT@baudrate+3
  1112  042C  3000               	movlw	0
  1113  042D  00DC               	movwf	UART_INIT@baudrate+2
  1114  042E  3025               	movlw	37
  1115  042F  00DB               	movwf	UART_INIT@baudrate+1
  1116  0430  3080               	movlw	128
  1117  0431  00DA               	movwf	UART_INIT@baudrate
  1118  0432  120A  118A  21D0  120A  118A  	fcall	_UART_INIT
  1119  0437                     l151:	
  1120                           ;MASTERR_I2C.c: 101:     while(1){
  1121                           
  1122                           
  1123                           ;MASTERR_I2C.c: 103:         I2C_Master_Start();
  1124  0437  120A  158A  2718  120A  118A  	fcall	_I2C_Master_Start
  1125                           
  1126                           ;MASTERR_I2C.c: 104:         I2C_Master_Write(0x31);
  1127  043C  3031               	movlw	49
  1128  043D  00F0               	movwf	I2C_Master_Write@d
  1129  043E  3000               	movlw	0
  1130  043F  00F1               	movwf	I2C_Master_Write@d+1
  1131  0440  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Write
  1132                           
  1133                           ;MASTERR_I2C.c: 105:         analogic_digital_b = I2C_Master_Read(0);
  1134  0445  3000               	movlw	0
  1135  0446  00F0               	movwf	I2C_Master_Read@a
  1136  0447  00F1               	movwf	I2C_Master_Read@a+1
  1137  0448  120A  118A  2093  120A  118A  	fcall	_I2C_Master_Read
  1138  044D  0870               	movf	?_I2C_Master_Read,w
  1139  044E  1283               	bcf	3,5	;RP0=0, select bank0
  1140  044F  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0450  00EA               	movwf	??_main
  1142  0451  086A               	movf	??_main,w
  1143  0452  00CC               	movwf	_analogic_digital_b
  1144                           
  1145                           ;MASTERR_I2C.c: 106:         I2C_Master_Stop();
  1146  0453  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Stop
  1147  0458                     l1835:	
  1148                           
  1149                           ;MASTERR_I2C.c: 107:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1150  0458  3003               	movlw	3
  1151  0459  1283               	bcf	3,5	;RP0=0, select bank0
  1152  045A  1303               	bcf	3,6	;RP1=0, select bank0
  1153  045B  00EC               	movwf	??_main+2
  1154  045C  3008               	movlw	8
  1155  045D  00EB               	movwf	??_main+1
  1156  045E  3076               	movlw	118
  1157  045F  00EA               	movwf	??_main
  1158  0460                     u1407:	
  1159  0460  0BEA               	decfsz	??_main,f
  1160  0461  2C60               	goto	u1407
  1161  0462  0BEB               	decfsz	??_main+1,f
  1162  0463  2C60               	goto	u1407
  1163  0464  0BEC               	decfsz	??_main+2,f
  1164  0465  2C60               	goto	u1407
  1165  0466  0000               	nop
  1166  0467                     l1837:	
  1167                           
  1168                           ;MASTERR_I2C.c: 110:         CONTLUZA = analogic_digital_b/10;
  1169  0467  300A               	movlw	10
  1170  0468  00F0               	movwf	___awdiv@divisor
  1171  0469  3000               	movlw	0
  1172  046A  00F1               	movwf	___awdiv@divisor+1
  1173  046B  1283               	bcf	3,5	;RP0=0, select bank0
  1174  046C  1303               	bcf	3,6	;RP1=0, select bank0
  1175  046D  084C               	movf	_analogic_digital_b,w
  1176  046E  00EA               	movwf	??_main
  1177  046F  01EB               	clrf	??_main+1
  1178  0470  086A               	movf	??_main,w
  1179  0471  00F2               	movwf	___awdiv@dividend
  1180  0472  086B               	movf	??_main+1,w
  1181  0473  00F3               	movwf	___awdiv@dividend+1
  1182  0474  120A  118A  2299  120A  118A  	fcall	___awdiv
  1183  0479  0871               	movf	?___awdiv+1,w
  1184  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1185  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1186  047C  00C7               	movwf	_CONTLUZA+1
  1187  047D  0870               	movf	?___awdiv,w
  1188  047E  00C6               	movwf	_CONTLUZA
  1189  047F                     l1839:	
  1190                           
  1191                           ;MASTERR_I2C.c: 111:         itoa(CONTLUZA_CHAR,CONTLUZA,10);
  1192  047F  0847               	movf	_CONTLUZA+1,w
  1193  0480  00D9               	movwf	itoa@val+1
  1194  0481  0846               	movf	_CONTLUZA,w
  1195  0482  00D8               	movwf	itoa@val
  1196  0483  300A               	movlw	10
  1197  0484  00DA               	movwf	itoa@base
  1198  0485  3000               	movlw	0
  1199  0486  00DB               	movwf	itoa@base+1
  1200  0487  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1201  0488  120A  158A  27B4  120A  118A  	fcall	_itoa
  1202  048D                     l1841:	
  1203                           
  1204                           ;MASTERR_I2C.c: 112:         CONTLUZB = analogic_digital_b%10;
  1205  048D  300A               	movlw	10
  1206  048E  00F0               	movwf	___awmod@divisor
  1207  048F  3000               	movlw	0
  1208  0490  00F1               	movwf	___awmod@divisor+1
  1209  0491  1283               	bcf	3,5	;RP0=0, select bank0
  1210  0492  1303               	bcf	3,6	;RP1=0, select bank0
  1211  0493  084C               	movf	_analogic_digital_b,w
  1212  0494  00EA               	movwf	??_main
  1213  0495  01EB               	clrf	??_main+1
  1214  0496  086A               	movf	??_main,w
  1215  0497  00F2               	movwf	___awmod@dividend
  1216  0498  086B               	movf	??_main+1,w
  1217  0499  00F3               	movwf	___awmod@dividend+1
  1218  049A  120A  118A  2177  120A  118A  	fcall	___awmod
  1219  049F  0871               	movf	?___awmod+1,w
  1220  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1221  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1222  04A2  00C5               	movwf	_CONTLUZB+1
  1223  04A3  0870               	movf	?___awmod,w
  1224  04A4  00C4               	movwf	_CONTLUZB
  1225  04A5                     l1843:	
  1226                           
  1227                           ;MASTERR_I2C.c: 113:         itoa(CONTLUZB_CHAR,CONTLUZB,10);
  1228  04A5  0845               	movf	_CONTLUZB+1,w
  1229  04A6  00D9               	movwf	itoa@val+1
  1230  04A7  0844               	movf	_CONTLUZB,w
  1231  04A8  00D8               	movwf	itoa@val
  1232  04A9  300A               	movlw	10
  1233  04AA  00DA               	movwf	itoa@base
  1234  04AB  3000               	movlw	0
  1235  04AC  00DB               	movwf	itoa@base+1
  1236  04AD  30E9               	movlw	(low (_CONTLUZB_CHAR| 0))& (0+255)
  1237  04AE  120A  158A  27B4  120A  118A  	fcall	_itoa
  1238  04B3                     l1845:	
  1239                           
  1240                           ;MASTERR_I2C.c: 114:         strcat(CONTLUZA_CHAR,CONTLUZB_CHAR);
  1241  04B3  30E9               	movlw	(low (_CONTLUZB_CHAR| 0))& (0+255)
  1242  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  1243  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  1244  04B6  00EA               	movwf	??_main
  1245  04B7  086A               	movf	??_main,w
  1246  04B8  00F0               	movwf	strcat@from
  1247  04B9  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1248  04BA  120A  118A  206A  120A  118A  	fcall	_strcat
  1249  04BF                     l1847:	
  1250                           
  1251                           ;MASTERR_I2C.c: 117:         I2C_Master_Start();
  1252  04BF  120A  158A  2718  120A  118A  	fcall	_I2C_Master_Start
  1253  04C4                     l1849:	
  1254                           
  1255                           ;MASTERR_I2C.c: 118:         I2C_Master_Write(0x31);
  1256  04C4  3031               	movlw	49
  1257  04C5  00F0               	movwf	I2C_Master_Write@d
  1258  04C6  3000               	movlw	0
  1259  04C7  00F1               	movwf	I2C_Master_Write@d+1
  1260  04C8  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Write
  1261  04CD                     l1851:	
  1262                           
  1263                           ;MASTERR_I2C.c: 119:         T_byte1 = I2C_Master_Read(0);
  1264  04CD  3000               	movlw	0
  1265  04CE  00F0               	movwf	I2C_Master_Read@a
  1266  04CF  00F1               	movwf	I2C_Master_Read@a+1
  1267  04D0  120A  118A  2093  120A  118A  	fcall	_I2C_Master_Read
  1268  04D5  0870               	movf	?_I2C_Master_Read,w
  1269  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1270  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1271  04D8  00EA               	movwf	??_main
  1272  04D9  086A               	movf	??_main,w
  1273  04DA  00CA               	movwf	_T_byte1
  1274  04DB                     l1853:	
  1275                           
  1276                           ;MASTERR_I2C.c: 120:         I2C_Master_Stop();
  1277  04DB  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Stop
  1278  04E0                     l1855:	
  1279                           
  1280                           ;MASTERR_I2C.c: 121:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1281  04E0  3003               	movlw	3
  1282  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1283  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1284  04E3  00EC               	movwf	??_main+2
  1285  04E4  3008               	movlw	8
  1286  04E5  00EB               	movwf	??_main+1
  1287  04E6  3076               	movlw	118
  1288  04E7  00EA               	movwf	??_main
  1289  04E8                     u1417:	
  1290  04E8  0BEA               	decfsz	??_main,f
  1291  04E9  2CE8               	goto	u1417
  1292  04EA  0BEB               	decfsz	??_main+1,f
  1293  04EB  2CE8               	goto	u1417
  1294  04EC  0BEC               	decfsz	??_main+2,f
  1295  04ED  2CE8               	goto	u1417
  1296  04EE  0000               	nop
  1297  04EF                     l1857:	
  1298                           
  1299                           ;MASTERR_I2C.c: 125:         decT = T_byte1/10;
  1300  04EF  300A               	movlw	10
  1301  04F0  00F0               	movwf	___awdiv@divisor
  1302  04F1  3000               	movlw	0
  1303  04F2  00F1               	movwf	___awdiv@divisor+1
  1304  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1305  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1306  04F5  084A               	movf	_T_byte1,w
  1307  04F6  00EA               	movwf	??_main
  1308  04F7  01EB               	clrf	??_main+1
  1309  04F8  086A               	movf	??_main,w
  1310  04F9  00F2               	movwf	___awdiv@dividend
  1311  04FA  086B               	movf	??_main+1,w
  1312  04FB  00F3               	movwf	___awdiv@dividend+1
  1313  04FC  120A  118A  2299  120A  118A  	fcall	___awdiv
  1314  0501  0871               	movf	?___awdiv+1,w
  1315  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1316  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1317  0504  00C1               	movwf	_decT+1
  1318  0505  0870               	movf	?___awdiv,w
  1319  0506  00C0               	movwf	_decT
  1320                           
  1321                           ;MASTERR_I2C.c: 126:         itoa(decT_char,decT,10);
  1322  0507  0841               	movf	_decT+1,w
  1323  0508  00D9               	movwf	itoa@val+1
  1324  0509  0840               	movf	_decT,w
  1325  050A  00D8               	movwf	itoa@val
  1326  050B  300A               	movlw	10
  1327  050C  00DA               	movwf	itoa@base
  1328  050D  3000               	movlw	0
  1329  050E  00DB               	movwf	itoa@base+1
  1330  050F  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1331  0510  120A  158A  27B4  120A  118A  	fcall	_itoa
  1332  0515                     l1859:	
  1333                           
  1334                           ;MASTERR_I2C.c: 127:         uniT = T_byte1%10;
  1335  0515  300A               	movlw	10
  1336  0516  00F0               	movwf	___awmod@divisor
  1337  0517  3000               	movlw	0
  1338  0518  00F1               	movwf	___awmod@divisor+1
  1339  0519  1283               	bcf	3,5	;RP0=0, select bank0
  1340  051A  1303               	bcf	3,6	;RP1=0, select bank0
  1341  051B  084A               	movf	_T_byte1,w
  1342  051C  00EA               	movwf	??_main
  1343  051D  01EB               	clrf	??_main+1
  1344  051E  086A               	movf	??_main,w
  1345  051F  00F2               	movwf	___awmod@dividend
  1346  0520  086B               	movf	??_main+1,w
  1347  0521  00F3               	movwf	___awmod@dividend+1
  1348  0522  120A  118A  2177  120A  118A  	fcall	___awmod
  1349  0527  0871               	movf	?___awmod+1,w
  1350  0528  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0529  1303               	bcf	3,6	;RP1=0, select bank0
  1352  052A  00C3               	movwf	_uniT+1
  1353  052B  0870               	movf	?___awmod,w
  1354  052C  00C2               	movwf	_uniT
  1355  052D                     l1861:	
  1356                           
  1357                           ;MASTERR_I2C.c: 128:         itoa(uniT_char,uniT ,10);
  1358  052D  0843               	movf	_uniT+1,w
  1359  052E  00D9               	movwf	itoa@val+1
  1360  052F  0842               	movf	_uniT,w
  1361  0530  00D8               	movwf	itoa@val
  1362  0531  300A               	movlw	10
  1363  0532  00DA               	movwf	itoa@base
  1364  0533  3000               	movlw	0
  1365  0534  00DB               	movwf	itoa@base+1
  1366  0535  30C6               	movlw	(low (_uniT_char| 0))& (0+255)
  1367  0536  120A  158A  27B4  120A  118A  	fcall	_itoa
  1368  053B                     l1863:	
  1369                           
  1370                           ;MASTERR_I2C.c: 129:         strcat(decT_char,uniT_char);
  1371  053B  30C6               	movlw	(low (_uniT_char| 0))& (0+255)
  1372  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1373  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1374  053E  00EA               	movwf	??_main
  1375  053F  086A               	movf	??_main,w
  1376  0540  00F0               	movwf	strcat@from
  1377  0541  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1378  0542  120A  118A  206A  120A  118A  	fcall	_strcat
  1379  0547                     l1865:	
  1380                           
  1381                           ;MASTERR_I2C.c: 132:         I2C_Master_Start();
  1382  0547  120A  158A  2718  120A  118A  	fcall	_I2C_Master_Start
  1383  054C                     l1867:	
  1384                           
  1385                           ;MASTERR_I2C.c: 133:         I2C_Master_Write(0x11);
  1386  054C  3011               	movlw	17
  1387  054D  00F0               	movwf	I2C_Master_Write@d
  1388  054E  3000               	movlw	0
  1389  054F  00F1               	movwf	I2C_Master_Write@d+1
  1390  0550  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Write
  1391  0555                     l1869:	
  1392                           
  1393                           ;MASTERR_I2C.c: 134:         CONTADOR = I2C_Master_Read(0);
  1394  0555  3000               	movlw	0
  1395  0556  00F0               	movwf	I2C_Master_Read@a
  1396  0557  00F1               	movwf	I2C_Master_Read@a+1
  1397  0558  120A  118A  2093  120A  118A  	fcall	_I2C_Master_Read
  1398  055D  0870               	movf	?_I2C_Master_Read,w
  1399  055E  1283               	bcf	3,5	;RP0=0, select bank0
  1400  055F  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0560  00EA               	movwf	??_main
  1402  0561  086A               	movf	??_main,w
  1403  0562  00CD               	movwf	_CONTADOR
  1404  0563                     l1871:	
  1405                           
  1406                           ;MASTERR_I2C.c: 135:         I2C_Master_Stop();
  1407  0563  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Stop
  1408  0568                     l1873:	
  1409                           
  1410                           ;MASTERR_I2C.c: 136:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1411  0568  3003               	movlw	3
  1412  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1413  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1414  056B  00EC               	movwf	??_main+2
  1415  056C  3008               	movlw	8
  1416  056D  00EB               	movwf	??_main+1
  1417  056E  3076               	movlw	118
  1418  056F  00EA               	movwf	??_main
  1419  0570                     u1427:	
  1420  0570  0BEA               	decfsz	??_main,f
  1421  0571  2D70               	goto	u1427
  1422  0572  0BEB               	decfsz	??_main+1,f
  1423  0573  2D70               	goto	u1427
  1424  0574  0BEC               	decfsz	??_main+2,f
  1425  0575  2D70               	goto	u1427
  1426  0576  0000               	nop
  1427  0577                     l1875:	
  1428                           
  1429                           ;MASTERR_I2C.c: 140:         CONTD = CONTADOR/10;
  1430  0577  300A               	movlw	10
  1431  0578  00F0               	movwf	___awdiv@divisor
  1432  0579  3000               	movlw	0
  1433  057A  00F1               	movwf	___awdiv@divisor+1
  1434  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1435  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1436  057D  084D               	movf	_CONTADOR,w
  1437  057E  00EA               	movwf	??_main
  1438  057F  01EB               	clrf	??_main+1
  1439  0580  086A               	movf	??_main,w
  1440  0581  00F2               	movwf	___awdiv@dividend
  1441  0582  086B               	movf	??_main+1,w
  1442  0583  00F3               	movwf	___awdiv@dividend+1
  1443  0584  120A  118A  2299  120A  118A  	fcall	___awdiv
  1444  0589  0871               	movf	?___awdiv+1,w
  1445  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1446  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1447  058C  00B3               	movwf	_CONTD+1
  1448  058D  0870               	movf	?___awdiv,w
  1449  058E  00B2               	movwf	_CONTD
  1450  058F                     l1877:	
  1451                           
  1452                           ;MASTERR_I2C.c: 141:         itoa(CONTD_CHAR,CONTD,10);
  1453  058F  0833               	movf	_CONTD+1,w
  1454  0590  00D9               	movwf	itoa@val+1
  1455  0591  0832               	movf	_CONTD,w
  1456  0592  00D8               	movwf	itoa@val
  1457  0593  300A               	movlw	10
  1458  0594  00DA               	movwf	itoa@base
  1459  0595  3000               	movlw	0
  1460  0596  00DB               	movwf	itoa@base+1
  1461  0597  30DA               	movlw	(low (_CONTD_CHAR| 0))& (0+255)
  1462  0598  120A  158A  27B4  120A  118A  	fcall	_itoa
  1463  059D                     l1879:	
  1464                           
  1465                           ;MASTERR_I2C.c: 142:         CONTU = CONTADOR%10;
  1466  059D  300A               	movlw	10
  1467  059E  00F0               	movwf	___awmod@divisor
  1468  059F  3000               	movlw	0
  1469  05A0  00F1               	movwf	___awmod@divisor+1
  1470  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1471  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1472  05A3  084D               	movf	_CONTADOR,w
  1473  05A4  00EA               	movwf	??_main
  1474  05A5  01EB               	clrf	??_main+1
  1475  05A6  086A               	movf	??_main,w
  1476  05A7  00F2               	movwf	___awmod@dividend
  1477  05A8  086B               	movf	??_main+1,w
  1478  05A9  00F3               	movwf	___awmod@dividend+1
  1479  05AA  120A  118A  2177  120A  118A  	fcall	___awmod
  1480  05AF  0871               	movf	?___awmod+1,w
  1481  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1482  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1483  05B2  00AF               	movwf	_CONTU+1
  1484  05B3  0870               	movf	?___awmod,w
  1485  05B4  00AE               	movwf	_CONTU
  1486  05B5                     l1881:	
  1487                           
  1488                           ;MASTERR_I2C.c: 143:         itoa(CONTU_CHAR,CONTU,10);
  1489  05B5  082F               	movf	_CONTU+1,w
  1490  05B6  00D9               	movwf	itoa@val+1
  1491  05B7  082E               	movf	_CONTU,w
  1492  05B8  00D8               	movwf	itoa@val
  1493  05B9  300A               	movlw	10
  1494  05BA  00DA               	movwf	itoa@base
  1495  05BB  3000               	movlw	0
  1496  05BC  00DB               	movwf	itoa@base+1
  1497  05BD  30D5               	movlw	(low (_CONTU_CHAR| 0))& (0+255)
  1498  05BE  120A  158A  27B4  120A  118A  	fcall	_itoa
  1499  05C3                     l1883:	
  1500                           
  1501                           ;MASTERR_I2C.c: 146:         I2C_Master_Start();
  1502  05C3  120A  158A  2718  120A  118A  	fcall	_I2C_Master_Start
  1503  05C8                     l1885:	
  1504                           
  1505                           ;MASTERR_I2C.c: 147:         I2C_Master_Write(0x21);
  1506  05C8  3021               	movlw	33
  1507  05C9  00F0               	movwf	I2C_Master_Write@d
  1508  05CA  3000               	movlw	0
  1509  05CB  00F1               	movwf	I2C_Master_Write@d+1
  1510  05CC  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Write
  1511  05D1                     l1887:	
  1512                           
  1513                           ;MASTERR_I2C.c: 148:         analogic_digital_a = I2C_Master_Read(0);
  1514  05D1  3000               	movlw	0
  1515  05D2  00F0               	movwf	I2C_Master_Read@a
  1516  05D3  00F1               	movwf	I2C_Master_Read@a+1
  1517  05D4  120A  118A  2093  120A  118A  	fcall	_I2C_Master_Read
  1518  05D9  0870               	movf	?_I2C_Master_Read,w
  1519  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1520  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1521  05DC  00EA               	movwf	??_main
  1522  05DD  086A               	movf	??_main,w
  1523  05DE  00CE               	movwf	_analogic_digital_a
  1524  05DF                     l1889:	
  1525                           
  1526                           ;MASTERR_I2C.c: 149:         I2C_Master_Stop();
  1527  05DF  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Stop
  1528  05E4                     l1891:	
  1529                           
  1530                           ;MASTERR_I2C.c: 150:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1531  05E4  3003               	movlw	3
  1532  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1533  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1534  05E7  00EC               	movwf	??_main+2
  1535  05E8  3008               	movlw	8
  1536  05E9  00EB               	movwf	??_main+1
  1537  05EA  3076               	movlw	118
  1538  05EB  00EA               	movwf	??_main
  1539  05EC                     u1437:	
  1540  05EC  0BEA               	decfsz	??_main,f
  1541  05ED  2DEC               	goto	u1437
  1542  05EE  0BEB               	decfsz	??_main+1,f
  1543  05EF  2DEC               	goto	u1437
  1544  05F0  0BEC               	decfsz	??_main+2,f
  1545  05F1  2DEC               	goto	u1437
  1546  05F2  0000               	nop
  1547  05F3                     l1893:	
  1548                           
  1549                           ;MASTERR_I2C.c: 154:          DC1 = analogic_digital_a/10;
  1550  05F3  300A               	movlw	10
  1551  05F4  00F0               	movwf	___awdiv@divisor
  1552  05F5  3000               	movlw	0
  1553  05F6  00F1               	movwf	___awdiv@divisor+1
  1554  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1555  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1556  05F9  084E               	movf	_analogic_digital_a,w
  1557  05FA  00EA               	movwf	??_main
  1558  05FB  01EB               	clrf	??_main+1
  1559  05FC  086A               	movf	??_main,w
  1560  05FD  00F2               	movwf	___awdiv@dividend
  1561  05FE  086B               	movf	??_main+1,w
  1562  05FF  00F3               	movwf	___awdiv@dividend+1
  1563  0600  120A  118A  2299  120A  118A  	fcall	___awdiv
  1564  0605  0871               	movf	?___awdiv+1,w
  1565  0606  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0607  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0608  00AB               	movwf	_DC1+1
  1568  0609  0870               	movf	?___awdiv,w
  1569  060A  00AA               	movwf	_DC1
  1570                           
  1571                           ;MASTERR_I2C.c: 155:         itoa(ADCA_CHARA,DC1,10);
  1572  060B  082B               	movf	_DC1+1,w
  1573  060C  00D9               	movwf	itoa@val+1
  1574  060D  082A               	movf	_DC1,w
  1575  060E  00D8               	movwf	itoa@val
  1576  060F  300A               	movlw	10
  1577  0610  00DA               	movwf	itoa@base
  1578  0611  3000               	movlw	0
  1579  0612  00DB               	movwf	itoa@base+1
  1580  0613  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1581  0614  120A  158A  27B4  120A  118A  	fcall	_itoa
  1582  0619                     l1895:	
  1583                           
  1584                           ;MASTERR_I2C.c: 156:         DC2 = analogic_digital_a%10;
  1585  0619  300A               	movlw	10
  1586  061A  00F0               	movwf	___awmod@divisor
  1587  061B  3000               	movlw	0
  1588  061C  00F1               	movwf	___awmod@divisor+1
  1589  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1590  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1591  061F  084E               	movf	_analogic_digital_a,w
  1592  0620  00EA               	movwf	??_main
  1593  0621  01EB               	clrf	??_main+1
  1594  0622  086A               	movf	??_main,w
  1595  0623  00F2               	movwf	___awmod@dividend
  1596  0624  086B               	movf	??_main+1,w
  1597  0625  00F3               	movwf	___awmod@dividend+1
  1598  0626  120A  118A  2177  120A  118A  	fcall	___awmod
  1599  062B  0871               	movf	?___awmod+1,w
  1600  062C  1283               	bcf	3,5	;RP0=0, select bank0
  1601  062D  1303               	bcf	3,6	;RP1=0, select bank0
  1602  062E  00BB               	movwf	_DC2+1
  1603  062F  0870               	movf	?___awmod,w
  1604  0630  00BA               	movwf	_DC2
  1605  0631                     l1897:	
  1606                           
  1607                           ;MASTERR_I2C.c: 157:         itoa(ADCB_CHARB,DC2,10);
  1608  0631  083B               	movf	_DC2+1,w
  1609  0632  00D9               	movwf	itoa@val+1
  1610  0633  083A               	movf	_DC2,w
  1611  0634  00D8               	movwf	itoa@val
  1612  0635  300A               	movlw	10
  1613  0636  00DA               	movwf	itoa@base
  1614  0637  3000               	movlw	0
  1615  0638  00DB               	movwf	itoa@base+1
  1616  0639  30CB               	movlw	(low (_ADCB_CHARB| 0))& (0+255)
  1617  063A  120A  158A  27B4  120A  118A  	fcall	_itoa
  1618  063F                     l1899:	
  1619                           
  1620                           ;MASTERR_I2C.c: 158:         strcat(ADCA_CHARA,ADCB_CHARB);
  1621  063F  30CB               	movlw	(low (_ADCB_CHARB| 0))& (0+255)
  1622  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0642  00EA               	movwf	??_main
  1625  0643  086A               	movf	??_main,w
  1626  0644  00F0               	movwf	strcat@from
  1627  0645  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1628  0646  120A  118A  206A  120A  118A  	fcall	_strcat
  1629  064B                     l1901:	
  1630                           
  1631                           ;MASTERR_I2C.c: 161:         I2C_Master_Start();
  1632  064B  120A  158A  2718  120A  118A  	fcall	_I2C_Master_Start
  1633  0650                     l1903:	
  1634                           
  1635                           ;MASTERR_I2C.c: 162:         I2C_Master_Write(0x21);
  1636  0650  3021               	movlw	33
  1637  0651  00F0               	movwf	I2C_Master_Write@d
  1638  0652  3000               	movlw	0
  1639  0653  00F1               	movwf	I2C_Master_Write@d+1
  1640  0654  120A  158A  272A  120A  118A  	fcall	_I2C_Master_Write
  1641  0659                     l1905:	
  1642                           
  1643                           ;MASTERR_I2C.c: 163:         SONICO = I2C_Master_Read(0);
  1644  0659  3000               	movlw	0
  1645  065A  00F0               	movwf	I2C_Master_Read@a
  1646  065B  00F1               	movwf	I2C_Master_Read@a+1
  1647  065C  120A  118A  2093  120A  118A  	fcall	_I2C_Master_Read
  1648  0661  0870               	movf	?_I2C_Master_Read,w
  1649  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0664  00EA               	movwf	??_main
  1652  0665  086A               	movf	??_main,w
  1653  0666  00CB               	movwf	_SONICO
  1654  0667                     l1907:	
  1655                           
  1656                           ;MASTERR_I2C.c: 164:         I2C_Master_Stop();
  1657  0667  120A  158A  2721  120A  118A  	fcall	_I2C_Master_Stop
  1658  066C                     l1909:	
  1659                           
  1660                           ;MASTERR_I2C.c: 165:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1661  066C  3003               	movlw	3
  1662  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1663  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1664  066F  00EC               	movwf	??_main+2
  1665  0670  3008               	movlw	8
  1666  0671  00EB               	movwf	??_main+1
  1667  0672  3076               	movlw	118
  1668  0673  00EA               	movwf	??_main
  1669  0674                     u1447:	
  1670  0674  0BEA               	decfsz	??_main,f
  1671  0675  2E74               	goto	u1447
  1672  0676  0BEB               	decfsz	??_main+1,f
  1673  0677  2E74               	goto	u1447
  1674  0678  0BEC               	decfsz	??_main+2,f
  1675  0679  2E74               	goto	u1447
  1676  067A  0000               	nop
  1677  067B                     l1911:	
  1678                           
  1679                           ;MASTERR_I2C.c: 169:         SONICOD = SONICO/10;
  1680  067B  300A               	movlw	10
  1681  067C  00F0               	movwf	___awdiv@divisor
  1682  067D  3000               	movlw	0
  1683  067E  00F1               	movwf	___awdiv@divisor+1
  1684  067F  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0680  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0681  084B               	movf	_SONICO,w
  1687  0682  00EA               	movwf	??_main
  1688  0683  01EB               	clrf	??_main+1
  1689  0684  086A               	movf	??_main,w
  1690  0685  00F2               	movwf	___awdiv@dividend
  1691  0686  086B               	movf	??_main+1,w
  1692  0687  00F3               	movwf	___awdiv@dividend+1
  1693  0688  120A  118A  2299  120A  118A  	fcall	___awdiv
  1694  068D  0871               	movf	?___awdiv+1,w
  1695  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1696  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0690  00B1               	movwf	_SONICOD+1
  1698  0691  0870               	movf	?___awdiv,w
  1699  0692  00B0               	movwf	_SONICOD
  1700  0693                     l1913:	
  1701                           
  1702                           ;MASTERR_I2C.c: 170:         itoa(SONICOD_CHAR,SONICOD,10);
  1703  0693  0831               	movf	_SONICOD+1,w
  1704  0694  00D9               	movwf	itoa@val+1
  1705  0695  0830               	movf	_SONICOD,w
  1706  0696  00D8               	movwf	itoa@val
  1707  0697  300A               	movlw	10
  1708  0698  00DA               	movwf	itoa@base
  1709  0699  3000               	movlw	0
  1710  069A  00DB               	movwf	itoa@base+1
  1711  069B  30E4               	movlw	(low (_SONICOD_CHAR| 0))& (0+255)
  1712  069C  120A  158A  27B4  120A  118A  	fcall	_itoa
  1713  06A1                     l1915:	
  1714                           
  1715                           ;MASTERR_I2C.c: 171:         SONICOU = SONICO%10;
  1716  06A1  300A               	movlw	10
  1717  06A2  00F0               	movwf	___awmod@divisor
  1718  06A3  3000               	movlw	0
  1719  06A4  00F1               	movwf	___awmod@divisor+1
  1720  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1721  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  1722  06A7  084B               	movf	_SONICO,w
  1723  06A8  00EA               	movwf	??_main
  1724  06A9  01EB               	clrf	??_main+1
  1725  06AA  086A               	movf	??_main,w
  1726  06AB  00F2               	movwf	___awmod@dividend
  1727  06AC  086B               	movf	??_main+1,w
  1728  06AD  00F3               	movwf	___awmod@dividend+1
  1729  06AE  120A  118A  2177  120A  118A  	fcall	___awmod
  1730  06B3  0871               	movf	?___awmod+1,w
  1731  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1732  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1733  06B6  00AD               	movwf	_SONICOU+1
  1734  06B7  0870               	movf	?___awmod,w
  1735  06B8  00AC               	movwf	_SONICOU
  1736  06B9                     l1917:	
  1737                           
  1738                           ;MASTERR_I2C.c: 172:         itoa(SONICOU_CHAR,SONICOU,10);
  1739  06B9  082D               	movf	_SONICOU+1,w
  1740  06BA  00D9               	movwf	itoa@val+1
  1741  06BB  082C               	movf	_SONICOU,w
  1742  06BC  00D8               	movwf	itoa@val
  1743  06BD  300A               	movlw	10
  1744  06BE  00DA               	movwf	itoa@base
  1745  06BF  3000               	movlw	0
  1746  06C0  00DB               	movwf	itoa@base+1
  1747  06C1  30DF               	movlw	(low (_SONICOU_CHAR| 0))& (0+255)
  1748  06C2  120A  158A  27B4  120A  118A  	fcall	_itoa
  1749  06C7                     l1919:	
  1750                           
  1751                           ;MASTERR_I2C.c: 176:         if(RA0==0){
  1752  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1753  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1754  06C9  1805               	btfsc	5,0	;volatile
  1755  06CA  2ECC               	goto	u1361
  1756  06CB  2ECD               	goto	u1360
  1757  06CC                     u1361:	
  1758  06CC  2F2F               	goto	l1947
  1759  06CD                     u1360:	
  1760  06CD                     l1921:	
  1761                           
  1762                           ;MASTERR_I2C.c: 177:             if(S0==1){
  1763  06CD  0349               	decf	_S0,w
  1764  06CE  1D03               	btfss	3,2
  1765  06CF  2ED1               	goto	u1371
  1766  06D0  2ED2               	goto	u1370
  1767  06D1                     u1371:	
  1768  06D1  2EDB               	goto	l1927
  1769  06D2                     u1370:	
  1770  06D2                     l1923:	
  1771                           
  1772                           ;MASTERR_I2C.c: 178:             lcd_cmd(0x01);
  1773  06D2  3001               	movlw	1
  1774  06D3  120A  158A  275C  120A  118A  	fcall	_lcd_cmd
  1775  06D8                     l1925:	
  1776                           
  1777                           ;MASTERR_I2C.c: 179:             S0=0;
  1778  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  1779  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  1780  06DA  01C9               	clrf	_S0
  1781  06DB                     l1927:	
  1782                           
  1783                           ;MASTERR_I2C.c: 181:         lcd_cmd(0x80);
  1784  06DB  3080               	movlw	128
  1785  06DC  120A  158A  275C  120A  118A  	fcall	_lcd_cmd
  1786  06E1                     l1929:	
  1787                           
  1788                           ;MASTERR_I2C.c: 182:         lcd_msg("TEMP CARROS LUZ ");
  1789  06E1  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1790  06E2  00F3               	movwf	lcd_msg@c
  1791  06E3  3080               	movlw	128
  1792  06E4  00F4               	movwf	lcd_msg@c+1
  1793  06E5  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1794  06EA                     l1931:	
  1795                           
  1796                           ;MASTERR_I2C.c: 183:         lcd_cmd(0xC0);
  1797  06EA  30C0               	movlw	192
  1798  06EB  120A  158A  275C  120A  118A  	fcall	_lcd_cmd
  1799  06F0                     l1933:	
  1800                           
  1801                           ;MASTERR_I2C.c: 184:         lcd_msg(" ");
  1802  06F0  3028               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1803  06F1  00F3               	movwf	lcd_msg@c
  1804  06F2  3080               	movlw	128
  1805  06F3  00F4               	movwf	lcd_msg@c+1
  1806  06F4  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1807  06F9                     l1935:	
  1808                           
  1809                           ;MASTERR_I2C.c: 185:         lcd_msg(decT_char);
  1810  06F9  30C1               	movlw	(low (_decT_char| 0))& (0+255)
  1811  06FA  00F3               	movwf	lcd_msg@c
  1812  06FB  3000               	movlw	0
  1813  06FC  00F4               	movwf	lcd_msg@c+1
  1814  06FD  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1815  0702                     l1937:	
  1816                           
  1817                           ;MASTERR_I2C.c: 186:         lcd_msg("    ");
  1818  0702  3025               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1819  0703  00F3               	movwf	lcd_msg@c
  1820  0704  3080               	movlw	128
  1821  0705  00F4               	movwf	lcd_msg@c+1
  1822  0706  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1823  070B                     l1939:	
  1824                           
  1825                           ;MASTERR_I2C.c: 187:         lcd_msg(CONTU_CHAR);
  1826  070B  30D5               	movlw	(low (_CONTU_CHAR| 0))& (0+255)
  1827  070C  00F3               	movwf	lcd_msg@c
  1828  070D  3000               	movlw	0
  1829  070E  00F4               	movwf	lcd_msg@c+1
  1830  070F  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1831  0714                     l1941:	
  1832                           
  1833                           ;MASTERR_I2C.c: 188:         lcd_msg("    ");
  1834  0714  3025               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1835  0715  00F3               	movwf	lcd_msg@c
  1836  0716  3080               	movlw	128
  1837  0717  00F4               	movwf	lcd_msg@c+1
  1838  0718  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1839  071D                     l1943:	
  1840                           
  1841                           ;MASTERR_I2C.c: 189:         lcd_msg(CONTLUZA_CHAR);
  1842  071D  304F               	movlw	(low (_CONTLUZA_CHAR| 0))& (0+255)
  1843  071E  00F3               	movwf	lcd_msg@c
  1844  071F  3000               	movlw	0
  1845  0720  00F4               	movwf	lcd_msg@c+1
  1846  0721  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1847  0726                     l1945:	
  1848                           
  1849                           ;MASTERR_I2C.c: 190:         lcd_msg(" ");
  1850  0726  3028               	movlw	(low (((STR_9+5)-__stringbase)| (0+32768)))& (0+255)
  1851  0727  00F3               	movwf	lcd_msg@c
  1852  0728  3080               	movlw	128
  1853  0729  00F4               	movwf	lcd_msg@c+1
  1854  072A  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1855  072F                     l1947:	
  1856                           
  1857                           ;MASTERR_I2C.c: 194:         if(RA0 == 1){
  1858  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0731  1C05               	btfss	5,0	;volatile
  1861  0732  2F34               	goto	u1381
  1862  0733  2F35               	goto	u1380
  1863  0734                     u1381:	
  1864  0734  2F86               	goto	l1959
  1865  0735                     u1380:	
  1866  0735                     l1949:	
  1867                           
  1868                           ;MASTERR_I2C.c: 195:             if(S0==0){
  1869  0735  0849               	movf	_S0,w
  1870  0736  1D03               	btfss	3,2
  1871  0737  2F39               	goto	u1391
  1872  0738  2F3A               	goto	u1390
  1873  0739                     u1391:	
  1874  0739  2F44               	goto	l155
  1875  073A                     u1390:	
  1876  073A                     l1951:	
  1877                           
  1878                           ;MASTERR_I2C.c: 196:             lcd_cmd(0x01);
  1879  073A  3001               	movlw	1
  1880  073B  120A  158A  275C  120A  118A  	fcall	_lcd_cmd
  1881  0740                     l1953:	
  1882                           
  1883                           ;MASTERR_I2C.c: 197:             S0=1;
  1884  0740  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0741  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0742  01C9               	clrf	_S0
  1887  0743  0AC9               	incf	_S0,f
  1888  0744                     l155:	
  1889                           ;MASTERR_I2C.c: 198:             }
  1890                           
  1891                           
  1892                           ;MASTERR_I2C.c: 199:             lcd_cmd(0x80);
  1893  0744  3080               	movlw	128
  1894  0745  120A  158A  275C  120A  118A  	fcall	_lcd_cmd
  1895  074A                     l1955:	
  1896                           
  1897                           ;MASTERR_I2C.c: 200:             lcd_msg(" FUERZA ULTRA   ");
  1898  074A  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1899  074B  00F3               	movwf	lcd_msg@c
  1900  074C  3080               	movlw	128
  1901  074D  00F4               	movwf	lcd_msg@c+1
  1902  074E  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1903  0753                     l1957:	
  1904                           
  1905                           ;MASTERR_I2C.c: 201:             lcd_cmd(0xC0);
  1906  0753  30C0               	movlw	192
  1907  0754  120A  158A  275C  120A  118A  	fcall	_lcd_cmd
  1908                           
  1909                           ;MASTERR_I2C.c: 202:             lcd_msg("  ");
  1910  0759  3027               	movlw	(low (((STR_9+4)-__stringbase)| (0+32768)))& (0+255)
  1911  075A  00F3               	movwf	lcd_msg@c
  1912  075B  3080               	movlw	128
  1913  075C  00F4               	movwf	lcd_msg@c+1
  1914  075D  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1915                           
  1916                           ;MASTERR_I2C.c: 203:             lcd_msg(ADCA_CHARA);
  1917  0762  30D0               	movlw	(low (_ADCA_CHARA| 0))& (0+255)
  1918  0763  00F3               	movwf	lcd_msg@c
  1919  0764  3000               	movlw	0
  1920  0765  00F4               	movwf	lcd_msg@c+1
  1921  0766  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1922                           
  1923                           ;MASTERR_I2C.c: 204:             lcd_msg("     ");
  1924  076B  3024               	movlw	(low (((STR_9+1)-__stringbase)| (0+32768)))& (0+255)
  1925  076C  00F3               	movwf	lcd_msg@c
  1926  076D  3080               	movlw	128
  1927  076E  00F4               	movwf	lcd_msg@c+1
  1928  076F  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1929                           
  1930                           ;MASTERR_I2C.c: 205:             lcd_msg(SONICOU_CHAR);
  1931  0774  30DF               	movlw	(low (_SONICOU_CHAR| 0))& (0+255)
  1932  0775  00F3               	movwf	lcd_msg@c
  1933  0776  3000               	movlw	0
  1934  0777  00F4               	movwf	lcd_msg@c+1
  1935  0778  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1936                           
  1937                           ;MASTERR_I2C.c: 206:             lcd_msg("      ");
  1938  077D  3023               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1939  077E  00F3               	movwf	lcd_msg@c
  1940  077F  3080               	movlw	128
  1941  0780  00F4               	movwf	lcd_msg@c+1
  1942  0781  120A  158A  27DA  120A  118A  	fcall	_lcd_msg
  1943  0786                     l1959:	
  1944                           
  1945                           ;MASTERR_I2C.c: 209:         UART_WRITE(T_byte1);
  1946  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0788  084A               	movf	_T_byte1,w
  1949  0789  120A  158A  2734  120A  118A  	fcall	_UART_WRITE
  1950  078E                     l1961:	
  1951                           
  1952                           ;MASTERR_I2C.c: 210:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1953  078E  3003               	movlw	3
  1954  078F  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0790  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0791  00EB               	movwf	??_main+1
  1957  0792  3097               	movlw	151
  1958  0793  00EA               	movwf	??_main
  1959  0794                     u1457:	
  1960  0794  0BEA               	decfsz	??_main,f
  1961  0795  2F94               	goto	u1457
  1962  0796  0BEB               	decfsz	??_main+1,f
  1963  0797  2F94               	goto	u1457
  1964  0798                     l1963:	
  1965                           
  1966                           ;MASTERR_I2C.c: 211:         UART_WRITE(CONTADOR);
  1967  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1969  079A  084D               	movf	_CONTADOR,w
  1970  079B  120A  158A  2734  120A  118A  	fcall	_UART_WRITE
  1971  07A0                     l1965:	
  1972                           
  1973                           ;MASTERR_I2C.c: 212:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1974  07A0  3003               	movlw	3
  1975  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  1976  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  1977  07A3  00EB               	movwf	??_main+1
  1978  07A4  3097               	movlw	151
  1979  07A5  00EA               	movwf	??_main
  1980  07A6                     u1467:	
  1981  07A6  0BEA               	decfsz	??_main,f
  1982  07A7  2FA6               	goto	u1467
  1983  07A8  0BEB               	decfsz	??_main+1,f
  1984  07A9  2FA6               	goto	u1467
  1985  07AA                     l1967:	
  1986                           
  1987                           ;MASTERR_I2C.c: 213:         UART_WRITE(analogic_digital_b);
  1988  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1989  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1990  07AC  084C               	movf	_analogic_digital_b,w
  1991  07AD  120A  158A  2734  120A  118A  	fcall	_UART_WRITE
  1992  07B2                     l1969:	
  1993                           
  1994                           ;MASTERR_I2C.c: 214:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1995  07B2  3003               	movlw	3
  1996  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1997  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1998  07B5  00EB               	movwf	??_main+1
  1999  07B6  3097               	movlw	151
  2000  07B7  00EA               	movwf	??_main
  2001  07B8                     u1477:	
  2002  07B8  0BEA               	decfsz	??_main,f
  2003  07B9  2FB8               	goto	u1477
  2004  07BA  0BEB               	decfsz	??_main+1,f
  2005  07BB  2FB8               	goto	u1477
  2006  07BC                     l1971:	
  2007                           
  2008                           ;MASTERR_I2C.c: 215:         UART_WRITE(analogic_digital_a);
  2009  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  2010  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  2011  07BE  084E               	movf	_analogic_digital_a,w
  2012  07BF  120A  158A  2734  120A  118A  	fcall	_UART_WRITE
  2013  07C4                     l1973:	
  2014                           
  2015                           ;MASTERR_I2C.c: 216:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2016  07C4  3003               	movlw	3
  2017  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  2018  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  2019  07C7  00EB               	movwf	??_main+1
  2020  07C8  3097               	movlw	151
  2021  07C9  00EA               	movwf	??_main
  2022  07CA                     u1487:	
  2023  07CA  0BEA               	decfsz	??_main,f
  2024  07CB  2FCA               	goto	u1487
  2025  07CC  0BEB               	decfsz	??_main+1,f
  2026  07CD  2FCA               	goto	u1487
  2027  07CE                     l1975:	
  2028                           
  2029                           ;MASTERR_I2C.c: 217:         UART_WRITE(SONICO);
  2030  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2031  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2032  07D0  084B               	movf	_SONICO,w
  2033  07D1  120A  158A  2734  120A  118A  	fcall	_UART_WRITE
  2034  07D6                     l1977:	
  2035                           
  2036                           ;MASTERR_I2C.c: 218:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2037  07D6  3003               	movlw	3
  2038  07D7  1283               	bcf	3,5	;RP0=0, select bank0
  2039  07D8  1303               	bcf	3,6	;RP1=0, select bank0
  2040  07D9  00EB               	movwf	??_main+1
  2041  07DA  3097               	movlw	151
  2042  07DB  00EA               	movwf	??_main
  2043  07DC                     u1497:	
  2044  07DC  0BEA               	decfsz	??_main,f
  2045  07DD  2FDC               	goto	u1497
  2046  07DE  0BEB               	decfsz	??_main+1,f
  2047  07DF  2FDC               	goto	u1497
  2048  07E0  2C37               	goto	l151
  2049  07E1  120A  118A  2800   	ljmp	start
  2050  07E4                     __end_of_main:	
  2051                           
  2052                           	psect	text1
  2053  006A                     __ptext1:	
  2054 ;; *************** function _strcat *****************
  2055 ;; Defined at:
  2056 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcat.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  to              1    wreg     PTR unsigned char 
  2059 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2060 ;;  from            1    0[COMMON] PTR const unsigned char 
  2061 ;;		 -> ADCB_CHARB(5), uniT_char(5), CONTLUZB_CHAR(5), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  to              1    2[COMMON] PTR unsigned char 
  2064 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2065 ;;  cp              1    3[COMMON] PTR unsigned char 
  2066 ;;		 -> ADCA_CHARA(5), decT_char(5), CONTLUZA_CHAR(5), 
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      PTR unsigned char 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         1       0       0       0       0
  2077 ;;      Locals:         2       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0
  2079 ;;      Totals:         4       0       0       0       0
  2080 ;;Total ram usage:        4 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		_main
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           
  2090                           ;psect for function _strcat
  2091  006A                     _strcat:	
  2092                           
  2093                           ;incstack = 0
  2094                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2095                           ;strcat@to stored from wreg
  2096  006A  00F2               	movwf	strcat@to
  2097  006B                     l1729:	
  2098  006B  0872               	movf	strcat@to,w
  2099  006C  00F1               	movwf	??_strcat
  2100  006D  0871               	movf	??_strcat,w
  2101  006E  00F3               	movwf	strcat@cp
  2102  006F  2874               	goto	l1733
  2103  0070                     l1731:	
  2104  0070  3001               	movlw	1
  2105  0071  00F1               	movwf	??_strcat
  2106  0072  0871               	movf	??_strcat,w
  2107  0073  07F3               	addwf	strcat@cp,f
  2108  0074                     l1733:	
  2109  0074  0873               	movf	strcat@cp,w
  2110  0075  0084               	movwf	4
  2111  0076  1383               	bcf	3,7	;select IRP bank0
  2112  0077  0800               	movf	0,w
  2113  0078  1D03               	btfss	3,2
  2114  0079  287B               	goto	u1131
  2115  007A  287C               	goto	u1130
  2116  007B                     u1131:	
  2117  007B  2870               	goto	l1731
  2118  007C                     u1130:	
  2119  007C  2885               	goto	l1737
  2120  007D                     l1735:	
  2121  007D  3001               	movlw	1
  2122  007E  00F1               	movwf	??_strcat
  2123  007F  0871               	movf	??_strcat,w
  2124  0080  07F3               	addwf	strcat@cp,f
  2125  0081  3001               	movlw	1
  2126  0082  00F1               	movwf	??_strcat
  2127  0083  0871               	movf	??_strcat,w
  2128  0084  07F0               	addwf	strcat@from,f
  2129  0085                     l1737:	
  2130  0085  0870               	movf	strcat@from,w
  2131  0086  0084               	movwf	4
  2132  0087  0800               	movf	0,w
  2133  0088  00F1               	movwf	??_strcat
  2134  0089  0873               	movf	strcat@cp,w
  2135  008A  0084               	movwf	4
  2136  008B  0871               	movf	??_strcat,w
  2137  008C  0080               	movwf	0
  2138  008D  0800               	movf	0,w
  2139  008E  1D03               	btfss	3,2
  2140  008F  2891               	goto	u1141
  2141  0090  2892               	goto	u1140
  2142  0091                     u1141:	
  2143  0091  287D               	goto	l1735
  2144  0092                     u1140:	
  2145  0092                     l831:	
  2146  0092  0008               	return
  2147  0093                     __end_of_strcat:	
  2148                           
  2149                           	psect	text2
  2150  0FDA                     __ptext2:	
  2151 ;; *************** function _lcd_msg *****************
  2152 ;; Defined at:
  2153 ;;		line 52 in file "PANTALLALCD.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  c               2    3[COMMON] PTR unsigned char 
  2156 ;;		 -> STR_9(7), STR_8(6), STR_7(3), STR_6(17), 
  2157 ;;		 -> STR_5(2), STR_4(5), STR_3(5), STR_2(2), 
  2158 ;;		 -> STR_1(17), SONICOU_CHAR(5), ADCA_CHARA(5), CONTU_CHAR(5), 
  2159 ;;		 -> decT_char(5), CONTLUZA_CHAR(5), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      void 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2171 ;;      Params:         2       0       0       0       0
  2172 ;;      Locals:         0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0
  2174 ;;      Totals:         2       0       0       0       0
  2175 ;;Total ram usage:        2 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    2
  2178 ;; This function calls:
  2179 ;;		_lcd_dwr
  2180 ;; This function is called by:
  2181 ;;		_main
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           
  2186                           ;psect for function _lcd_msg
  2187  0FDA                     _lcd_msg:	
  2188  0FDA                     l1739:	
  2189                           ;incstack = 0
  2190                           ; Regs used in _lcd_msg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2191                           
  2192                           
  2193                           ;PANTALLALCD.c: 53:     while(*c != 0)
  2194  0FDA  2FEF               	goto	l1745
  2195  0FDB                     l1741:	
  2196                           
  2197                           ;PANTALLALCD.c: 54:         lcd_dwr(*c++);
  2198  0FDB  0874               	movf	lcd_msg@c+1,w
  2199  0FDC  00FF               	movwf	btemp+1
  2200  0FDD  0873               	movf	lcd_msg@c,w
  2201  0FDE  0084               	movwf	4
  2202  0FDF  120A  118A  2003  120A  158A  	fcall	stringtab
  2203  0FE4  120A  158A  276E  120A  158A  	fcall	_lcd_dwr
  2204  0FE9                     l1743:	
  2205  0FE9  3001               	movlw	1
  2206  0FEA  07F3               	addwf	lcd_msg@c,f
  2207  0FEB  1803               	skipnc
  2208  0FEC  0AF4               	incf	lcd_msg@c+1,f
  2209  0FED  3000               	movlw	0
  2210  0FEE  07F4               	addwf	lcd_msg@c+1,f
  2211  0FEF                     l1745:	
  2212                           
  2213                           ;PANTALLALCD.c: 53:     while(*c != 0)
  2214  0FEF  0874               	movf	lcd_msg@c+1,w
  2215  0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0FF2  00FF               	movwf	btemp+1
  2218  0FF3  0873               	movf	lcd_msg@c,w
  2219  0FF4  0084               	movwf	4
  2220  0FF5  120A  118A  2003  120A  158A  	fcall	stringtab
  2221  0FFA  3A00               	xorlw	0
  2222  0FFB  1D03               	skipz
  2223  0FFC  2FFE               	goto	u1151
  2224  0FFD  2FFF               	goto	u1150
  2225  0FFE                     u1151:	
  2226  0FFE  2FDB               	goto	l1741
  2227  0FFF                     u1150:	
  2228  0FFF                     l195:	
  2229  0FFF  0008               	return
  2230  1000                     __end_of_lcd_msg:	
  2231                           
  2232                           	psect	text3
  2233  0F6E                     __ptext3:	
  2234 ;; *************** function _lcd_dwr *****************
  2235 ;; Defined at:
  2236 ;;		line 43 in file "PANTALLALCD.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  x               1    wreg     unsigned char 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  x               1    2[COMMON] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         0       0       0       0       0
  2251 ;;      Locals:         1       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0
  2253 ;;      Totals:         1       0       0       0       0
  2254 ;;Total ram usage:        1 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    1
  2257 ;; This function calls:
  2258 ;;		_lcd_lat
  2259 ;;		_lcd_ready
  2260 ;; This function is called by:
  2261 ;;		_lcd_msg
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _lcd_dwr
  2267  0F6E                     _lcd_dwr:	
  2268                           
  2269                           ;incstack = 0
  2270                           ; Regs used in _lcd_dwr: [wreg+status,2+status,0+pclath+cstack]
  2271                           ;lcd_dwr@x stored from wreg
  2272  0F6E  00F2               	movwf	lcd_dwr@x
  2273  0F6F                     l1537:	
  2274                           
  2275                           ;PANTALLALCD.c: 44:     lcd_ready();
  2276  0F6F  120A  118A  2041  120A  158A  	fcall	_lcd_ready
  2277  0F74                     l1539:	
  2278                           
  2279                           ;PANTALLALCD.c: 45:     PORTB = x;
  2280  0F74  0872               	movf	lcd_dwr@x,w
  2281  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0F77  0086               	movwf	6	;volatile
  2284  0F78                     l1541:	
  2285                           
  2286                           ;PANTALLALCD.c: 46:     RD5 = 1;
  2287  0F78  1688               	bsf	8,5	;volatile
  2288  0F79                     l1543:	
  2289                           
  2290                           ;PANTALLALCD.c: 47:     RD6 = 0;
  2291  0F79  1308               	bcf	8,6	;volatile
  2292  0F7A                     l1545:	
  2293                           
  2294                           ;PANTALLALCD.c: 48:     lcd_lat();
  2295  0F7A  120A  158A  274D  120A  158A  	fcall	_lcd_lat
  2296  0F7F                     l189:	
  2297  0F7F  0008               	return
  2298  0F80                     __end_of_lcd_dwr:	
  2299                           
  2300                           	psect	text4
  2301  0FB4                     __ptext4:	
  2302 ;; *************** function _itoa *****************
  2303 ;; Defined at:
  2304 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  buf             1    wreg     PTR unsigned char 
  2307 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2308 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2309 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2310 ;;  val             2    4[BANK0 ] int 
  2311 ;;  base            2    6[BANK0 ] int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  buf             1    9[BANK0 ] PTR unsigned char 
  2314 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2315 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2316 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2317 ;;  cp              1    0        PTR unsigned char 
  2318 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2319 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2320 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      PTR unsigned char 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       4       0       0       0
  2331 ;;      Locals:         0       2       0       0       0
  2332 ;;      Temps:          1       0       0       0       0
  2333 ;;      Totals:         1       6       0       0       0
  2334 ;;Total ram usage:        7 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    2
  2337 ;; This function calls:
  2338 ;;		_utoa
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _itoa
  2346  0FB4                     _itoa:	
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2350                           ;itoa@buf stored from wreg
  2351  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0FB6  00DD               	movwf	itoa@buf
  2354  0FB7                     l1715:	
  2355  0FB7                     l1717:	
  2356  0FB7  1FD9               	btfss	itoa@val+1,7
  2357  0FB8  2FBA               	goto	u1121
  2358  0FB9  2FBB               	goto	u1120
  2359  0FBA                     u1121:	
  2360  0FBA  2FCB               	goto	l1725
  2361  0FBB                     u1120:	
  2362  0FBB                     l1719:	
  2363  0FBB  302D               	movlw	45
  2364  0FBC  00FD               	movwf	??_itoa
  2365  0FBD  085D               	movf	itoa@buf,w
  2366  0FBE  0084               	movwf	4
  2367  0FBF  087D               	movf	??_itoa,w
  2368  0FC0  1383               	bcf	3,7	;select IRP bank0
  2369  0FC1  0080               	movwf	0
  2370  0FC2                     l1721:	
  2371  0FC2  3001               	movlw	1
  2372  0FC3  00FD               	movwf	??_itoa
  2373  0FC4  087D               	movf	??_itoa,w
  2374  0FC5  07DD               	addwf	itoa@buf,f
  2375  0FC6                     l1723:	
  2376  0FC6  09D8               	comf	itoa@val,f
  2377  0FC7  09D9               	comf	itoa@val+1,f
  2378  0FC8  0AD8               	incf	itoa@val,f
  2379  0FC9  1903               	skipnz
  2380  0FCA  0AD9               	incf	itoa@val+1,f
  2381  0FCB                     l1725:	
  2382  0FCB  0859               	movf	itoa@val+1,w
  2383  0FCC  00F9               	movwf	utoa@val+1
  2384  0FCD  0858               	movf	itoa@val,w
  2385  0FCE  00F8               	movwf	utoa@val
  2386  0FCF  085B               	movf	itoa@base+1,w
  2387  0FD0  00FB               	movwf	utoa@base+1
  2388  0FD1  085A               	movf	itoa@base,w
  2389  0FD2  00FA               	movwf	utoa@base
  2390  0FD3  085D               	movf	itoa@buf,w
  2391  0FD4  120A  118A  2300  120A  158A  	fcall	_utoa
  2392  0FD9                     l814:	
  2393  0FD9  0008               	return
  2394  0FDA                     __end_of_itoa:	
  2395                           
  2396                           	psect	text5
  2397  0300                     __ptext5:	
  2398 ;; *************** function _utoa *****************
  2399 ;; Defined at:
  2400 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\itoa.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  buf             1    wreg     PTR unsigned char 
  2403 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2404 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2405 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2406 ;;  val             2    8[COMMON] unsigned int 
  2407 ;;  base            2   10[COMMON] int 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  2410 ;;		 -> SONICOU_CHAR(5), SONICOD_CHAR(5), ADCB_CHARB(5), ADCA_CHARA(5), 
  2411 ;;		 -> CONTU_CHAR(5), CONTD_CHAR(5), uniT_char(5), decT_char(5), 
  2412 ;;		 -> CONTLUZB_CHAR(5), CONTLUZA_CHAR(5), 
  2413 ;;  v               2    0[BANK0 ] unsigned int 
  2414 ;;  c               1    2[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      PTR unsigned char 
  2417 ;; Registers used:
  2418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         4       0       0       0       0
  2425 ;;      Locals:         0       4       0       0       0
  2426 ;;      Temps:          1       0       0       0       0
  2427 ;;      Totals:         5       4       0       0       0
  2428 ;;Total ram usage:        9 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    1
  2431 ;; This function calls:
  2432 ;;		___lwdiv
  2433 ;;		___lwmod
  2434 ;; This function is called by:
  2435 ;;		_itoa
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _utoa
  2441  0300                     _utoa:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2445                           ;utoa@buf stored from wreg
  2446  0300  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0301  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0302  00D7               	movwf	utoa@buf
  2449  0303                     l1617:	
  2450  0303  0879               	movf	utoa@val+1,w
  2451  0304  00D5               	movwf	utoa@v+1
  2452  0305  0878               	movf	utoa@val,w
  2453  0306  00D4               	movwf	utoa@v
  2454  0307                     l1619:	
  2455  0307  087B               	movf	utoa@base+1,w
  2456  0308  00F1               	movwf	___lwdiv@divisor+1
  2457  0309  087A               	movf	utoa@base,w
  2458  030A  00F0               	movwf	___lwdiv@divisor
  2459  030B  0855               	movf	utoa@v+1,w
  2460  030C  00F3               	movwf	___lwdiv@dividend+1
  2461  030D  0854               	movf	utoa@v,w
  2462  030E  00F2               	movwf	___lwdiv@dividend
  2463  030F  120A  118A  2133  120A  118A  	fcall	___lwdiv
  2464  0314  0871               	movf	?___lwdiv+1,w
  2465  0315  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0316  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0317  00D5               	movwf	utoa@v+1
  2468  0318  0870               	movf	?___lwdiv,w
  2469  0319  00D4               	movwf	utoa@v
  2470  031A                     l1621:	
  2471  031A  3001               	movlw	1
  2472  031B  00FC               	movwf	??_utoa
  2473  031C  087C               	movf	??_utoa,w
  2474  031D  07D7               	addwf	utoa@buf,f
  2475  031E                     l1623:	
  2476  031E  0854               	movf	utoa@v,w
  2477  031F  0455               	iorwf	utoa@v+1,w
  2478  0320  1D03               	btfss	3,2
  2479  0321  2B23               	goto	u1041
  2480  0322  2B24               	goto	u1040
  2481  0323                     u1041:	
  2482  0323  2B07               	goto	l1619
  2483  0324                     u1040:	
  2484  0324                     l1625:	
  2485  0324  0857               	movf	utoa@buf,w
  2486  0325  0084               	movwf	4
  2487  0326  1383               	bcf	3,7	;select IRP bank0
  2488  0327  0180               	clrf	0
  2489  0328                     l1627:	
  2490  0328  3001               	movlw	1
  2491  0329  02D7               	subwf	utoa@buf,f
  2492  032A                     l1629:	
  2493  032A  087B               	movf	utoa@base+1,w
  2494  032B  00F1               	movwf	___lwmod@divisor+1
  2495  032C  087A               	movf	utoa@base,w
  2496  032D  00F0               	movwf	___lwmod@divisor
  2497  032E  0879               	movf	utoa@val+1,w
  2498  032F  00F3               	movwf	___lwmod@dividend+1
  2499  0330  0878               	movf	utoa@val,w
  2500  0331  00F2               	movwf	___lwmod@dividend
  2501  0332  120A  118A  20F9  120A  118A  	fcall	___lwmod
  2502  0337  0870               	movf	?___lwmod,w
  2503  0338  00FC               	movwf	??_utoa
  2504  0339  087C               	movf	??_utoa,w
  2505  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2506  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2507  033C  00D6               	movwf	utoa@c
  2508  033D                     l1631:	
  2509  033D  087B               	movf	utoa@base+1,w
  2510  033E  00F1               	movwf	___lwdiv@divisor+1
  2511  033F  087A               	movf	utoa@base,w
  2512  0340  00F0               	movwf	___lwdiv@divisor
  2513  0341  0879               	movf	utoa@val+1,w
  2514  0342  00F3               	movwf	___lwdiv@dividend+1
  2515  0343  0878               	movf	utoa@val,w
  2516  0344  00F2               	movwf	___lwdiv@dividend
  2517  0345  120A  118A  2133  120A  118A  	fcall	___lwdiv
  2518  034A  0871               	movf	?___lwdiv+1,w
  2519  034B  00F9               	movwf	utoa@val+1
  2520  034C  0870               	movf	?___lwdiv,w
  2521  034D  00F8               	movwf	utoa@val
  2522  034E                     l1633:	
  2523  034E  300A               	movlw	10
  2524  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2525  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2526  0351  0256               	subwf	utoa@c,w
  2527  0352  1C03               	skipc
  2528  0353  2B55               	goto	u1051
  2529  0354  2B56               	goto	u1050
  2530  0355                     u1051:	
  2531  0355  2B5A               	goto	l820
  2532  0356                     u1050:	
  2533  0356                     l1635:	
  2534  0356  3007               	movlw	7
  2535  0357  00FC               	movwf	??_utoa
  2536  0358  087C               	movf	??_utoa,w
  2537  0359  07D6               	addwf	utoa@c,f
  2538  035A                     l820:	
  2539  035A  3030               	movlw	48
  2540  035B  00FC               	movwf	??_utoa
  2541  035C  087C               	movf	??_utoa,w
  2542  035D  07D6               	addwf	utoa@c,f
  2543  035E                     l1637:	
  2544  035E  0856               	movf	utoa@c,w
  2545  035F  00FC               	movwf	??_utoa
  2546  0360  0857               	movf	utoa@buf,w
  2547  0361  0084               	movwf	4
  2548  0362  087C               	movf	??_utoa,w
  2549  0363  1383               	bcf	3,7	;select IRP bank0
  2550  0364  0080               	movwf	0
  2551  0365                     l1639:	
  2552  0365  3001               	movlw	1
  2553  0366  02D7               	subwf	utoa@buf,f
  2554  0367                     l1641:	
  2555  0367  0878               	movf	utoa@val,w
  2556  0368  0479               	iorwf	utoa@val+1,w
  2557  0369  1D03               	btfss	3,2
  2558  036A  2B6C               	goto	u1061
  2559  036B  2B6D               	goto	u1060
  2560  036C                     u1061:	
  2561  036C  2B2A               	goto	l1629
  2562  036D                     u1060:	
  2563  036D                     l1643:	
  2564                           
  2565                           ;	Return value of _utoa is never used
  2566  036D  3001               	movlw	1
  2567  036E  00FC               	movwf	??_utoa
  2568  036F  087C               	movf	??_utoa,w
  2569  0370  07D7               	addwf	utoa@buf,f
  2570  0371                     l822:	
  2571  0371  0008               	return
  2572  0372                     __end_of_utoa:	
  2573                           
  2574                           	psect	text6
  2575  00F9                     __ptext6:	
  2576 ;; *************** function ___lwmod *****************
  2577 ;; Defined at:
  2578 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  divisor         2    0[COMMON] unsigned int 
  2581 ;;  dividend        2    2[COMMON] unsigned int 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;  counter         1    5[COMMON] unsigned char 
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  2    0[COMMON] unsigned int 
  2586 ;; Registers used:
  2587 ;;		wreg, status,2, status,0
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2593 ;;      Params:         4       0       0       0       0
  2594 ;;      Locals:         1       0       0       0       0
  2595 ;;      Temps:          1       0       0       0       0
  2596 ;;      Totals:         6       0       0       0       0
  2597 ;;Total ram usage:        6 bytes
  2598 ;; Hardware stack levels used:    1
  2599 ;; This function calls:
  2600 ;;		Nothing
  2601 ;; This function is called by:
  2602 ;;		_utoa
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function ___lwmod
  2608  00F9                     ___lwmod:	
  2609  00F9                     l1503:	
  2610                           ;incstack = 0
  2611                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2612                           
  2613  00F9  0870               	movf	___lwmod@divisor,w
  2614  00FA  0471               	iorwf	___lwmod@divisor+1,w
  2615  00FB  1903               	btfsc	3,2
  2616  00FC  28FE               	goto	u791
  2617  00FD  28FF               	goto	u790
  2618  00FE                     u791:	
  2619  00FE  292E               	goto	l1521
  2620  00FF                     u790:	
  2621  00FF                     l1505:	
  2622  00FF  01F5               	clrf	___lwmod@counter
  2623  0100  0AF5               	incf	___lwmod@counter,f
  2624  0101  290D               	goto	l1511
  2625  0102                     l1507:	
  2626  0102  3001               	movlw	1
  2627  0103                     u805:	
  2628  0103  1003               	clrc
  2629  0104  0DF0               	rlf	___lwmod@divisor,f
  2630  0105  0DF1               	rlf	___lwmod@divisor+1,f
  2631  0106  3EFF               	addlw	-1
  2632  0107  1D03               	skipz
  2633  0108  2903               	goto	u805
  2634  0109                     l1509:	
  2635  0109  3001               	movlw	1
  2636  010A  00F4               	movwf	??___lwmod
  2637  010B  0874               	movf	??___lwmod,w
  2638  010C  07F5               	addwf	___lwmod@counter,f
  2639  010D                     l1511:	
  2640  010D  1FF1               	btfss	___lwmod@divisor+1,7
  2641  010E  2910               	goto	u811
  2642  010F  2911               	goto	u810
  2643  0110                     u811:	
  2644  0110  2902               	goto	l1507
  2645  0111                     u810:	
  2646  0111                     l1513:	
  2647  0111  0871               	movf	___lwmod@divisor+1,w
  2648  0112  0273               	subwf	___lwmod@dividend+1,w
  2649  0113  1D03               	skipz
  2650  0114  2917               	goto	u825
  2651  0115  0870               	movf	___lwmod@divisor,w
  2652  0116  0272               	subwf	___lwmod@dividend,w
  2653  0117                     u825:	
  2654  0117  1C03               	skipc
  2655  0118  291A               	goto	u821
  2656  0119  291B               	goto	u820
  2657  011A                     u821:	
  2658  011A  2921               	goto	l1517
  2659  011B                     u820:	
  2660  011B                     l1515:	
  2661  011B  0870               	movf	___lwmod@divisor,w
  2662  011C  02F2               	subwf	___lwmod@dividend,f
  2663  011D  0871               	movf	___lwmod@divisor+1,w
  2664  011E  1C03               	skipc
  2665  011F  03F3               	decf	___lwmod@dividend+1,f
  2666  0120  02F3               	subwf	___lwmod@dividend+1,f
  2667  0121                     l1517:	
  2668  0121  3001               	movlw	1
  2669  0122                     u835:	
  2670  0122  1003               	clrc
  2671  0123  0CF1               	rrf	___lwmod@divisor+1,f
  2672  0124  0CF0               	rrf	___lwmod@divisor,f
  2673  0125  3EFF               	addlw	-1
  2674  0126  1D03               	skipz
  2675  0127  2922               	goto	u835
  2676  0128                     l1519:	
  2677  0128  3001               	movlw	1
  2678  0129  02F5               	subwf	___lwmod@counter,f
  2679  012A  1D03               	btfss	3,2
  2680  012B  292D               	goto	u841
  2681  012C  292E               	goto	u840
  2682  012D                     u841:	
  2683  012D  2911               	goto	l1513
  2684  012E                     u840:	
  2685  012E                     l1521:	
  2686  012E  0873               	movf	___lwmod@dividend+1,w
  2687  012F  00F1               	movwf	?___lwmod+1
  2688  0130  0872               	movf	___lwmod@dividend,w
  2689  0131  00F0               	movwf	?___lwmod
  2690  0132                     l648:	
  2691  0132  0008               	return
  2692  0133                     __end_of___lwmod:	
  2693                           
  2694                           	psect	text7
  2695  0133                     __ptext7:	
  2696 ;; *************** function ___lwdiv *****************
  2697 ;; Defined at:
  2698 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;  divisor         2    0[COMMON] unsigned int 
  2701 ;;  dividend        2    2[COMMON] unsigned int 
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;  quotient        2    5[COMMON] unsigned int 
  2704 ;;  counter         1    7[COMMON] unsigned char 
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  2    0[COMMON] unsigned int 
  2707 ;; Registers used:
  2708 ;;		wreg, status,2, status,0
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2714 ;;      Params:         4       0       0       0       0
  2715 ;;      Locals:         3       0       0       0       0
  2716 ;;      Temps:          1       0       0       0       0
  2717 ;;      Totals:         8       0       0       0       0
  2718 ;;Total ram usage:        8 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; This function calls:
  2721 ;;		Nothing
  2722 ;; This function is called by:
  2723 ;;		_utoa
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           
  2728                           ;psect for function ___lwdiv
  2729  0133                     ___lwdiv:	
  2730  0133                     l1477:	
  2731                           ;incstack = 0
  2732                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2733                           
  2734  0133  01F5               	clrf	___lwdiv@quotient
  2735  0134  01F6               	clrf	___lwdiv@quotient+1
  2736  0135                     l1479:	
  2737  0135  0870               	movf	___lwdiv@divisor,w
  2738  0136  0471               	iorwf	___lwdiv@divisor+1,w
  2739  0137  1903               	btfsc	3,2
  2740  0138  293A               	goto	u721
  2741  0139  293B               	goto	u720
  2742  013A                     u721:	
  2743  013A  2972               	goto	l1499
  2744  013B                     u720:	
  2745  013B                     l1481:	
  2746  013B  01F7               	clrf	___lwdiv@counter
  2747  013C  0AF7               	incf	___lwdiv@counter,f
  2748  013D  2949               	goto	l1487
  2749  013E                     l1483:	
  2750  013E  3001               	movlw	1
  2751  013F                     u735:	
  2752  013F  1003               	clrc
  2753  0140  0DF0               	rlf	___lwdiv@divisor,f
  2754  0141  0DF1               	rlf	___lwdiv@divisor+1,f
  2755  0142  3EFF               	addlw	-1
  2756  0143  1D03               	skipz
  2757  0144  293F               	goto	u735
  2758  0145                     l1485:	
  2759  0145  3001               	movlw	1
  2760  0146  00F4               	movwf	??___lwdiv
  2761  0147  0874               	movf	??___lwdiv,w
  2762  0148  07F7               	addwf	___lwdiv@counter,f
  2763  0149                     l1487:	
  2764  0149  1FF1               	btfss	___lwdiv@divisor+1,7
  2765  014A  294C               	goto	u741
  2766  014B  294D               	goto	u740
  2767  014C                     u741:	
  2768  014C  293E               	goto	l1483
  2769  014D                     u740:	
  2770  014D                     l1489:	
  2771  014D  3001               	movlw	1
  2772  014E                     u755:	
  2773  014E  1003               	clrc
  2774  014F  0DF5               	rlf	___lwdiv@quotient,f
  2775  0150  0DF6               	rlf	___lwdiv@quotient+1,f
  2776  0151  3EFF               	addlw	-1
  2777  0152  1D03               	skipz
  2778  0153  294E               	goto	u755
  2779  0154  0871               	movf	___lwdiv@divisor+1,w
  2780  0155  0273               	subwf	___lwdiv@dividend+1,w
  2781  0156  1D03               	skipz
  2782  0157  295A               	goto	u765
  2783  0158  0870               	movf	___lwdiv@divisor,w
  2784  0159  0272               	subwf	___lwdiv@dividend,w
  2785  015A                     u765:	
  2786  015A  1C03               	skipc
  2787  015B  295D               	goto	u761
  2788  015C  295E               	goto	u760
  2789  015D                     u761:	
  2790  015D  2965               	goto	l1495
  2791  015E                     u760:	
  2792  015E                     l1491:	
  2793  015E  0870               	movf	___lwdiv@divisor,w
  2794  015F  02F2               	subwf	___lwdiv@dividend,f
  2795  0160  0871               	movf	___lwdiv@divisor+1,w
  2796  0161  1C03               	skipc
  2797  0162  03F3               	decf	___lwdiv@dividend+1,f
  2798  0163  02F3               	subwf	___lwdiv@dividend+1,f
  2799  0164                     l1493:	
  2800  0164  1475               	bsf	___lwdiv@quotient,0
  2801  0165                     l1495:	
  2802  0165  3001               	movlw	1
  2803  0166                     u775:	
  2804  0166  1003               	clrc
  2805  0167  0CF1               	rrf	___lwdiv@divisor+1,f
  2806  0168  0CF0               	rrf	___lwdiv@divisor,f
  2807  0169  3EFF               	addlw	-1
  2808  016A  1D03               	skipz
  2809  016B  2966               	goto	u775
  2810  016C                     l1497:	
  2811  016C  3001               	movlw	1
  2812  016D  02F7               	subwf	___lwdiv@counter,f
  2813  016E  1D03               	btfss	3,2
  2814  016F  2971               	goto	u781
  2815  0170  2972               	goto	u780
  2816  0171                     u781:	
  2817  0171  294D               	goto	l1489
  2818  0172                     u780:	
  2819  0172                     l1499:	
  2820  0172  0876               	movf	___lwdiv@quotient+1,w
  2821  0173  00F1               	movwf	?___lwdiv+1
  2822  0174  0875               	movf	___lwdiv@quotient,w
  2823  0175  00F0               	movwf	?___lwdiv
  2824  0176                     l638:	
  2825  0176  0008               	return
  2826  0177                     __end_of___lwdiv:	
  2827                           
  2828                           	psect	text8
  2829  0F95                     __ptext8:	
  2830 ;; *************** function _inicializacion *****************
  2831 ;; Defined at:
  2832 ;;		line 58 in file "PANTALLALCD.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  1    wreg      void 
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    2
  2853 ;; This function calls:
  2854 ;;		_lcd_cmd
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _inicializacion
  2862  0F95                     _inicializacion:	
  2863  0F95                     l1667:	
  2864                           ;incstack = 0
  2865                           ; Regs used in _inicializacion: [wreg+status,2+status,0+pclath+cstack]
  2866                           
  2867                           
  2868                           ;PANTALLALCD.c: 59:     lcd_cmd(0x38);
  2869  0F95  3038               	movlw	56
  2870  0F96  120A  158A  275C  120A  158A  	fcall	_lcd_cmd
  2871                           
  2872                           ;PANTALLALCD.c: 60:     lcd_cmd(0x0C);
  2873  0F9B  300C               	movlw	12
  2874  0F9C  120A  158A  275C  120A  158A  	fcall	_lcd_cmd
  2875                           
  2876                           ;PANTALLALCD.c: 61:     lcd_cmd(0x01);
  2877  0FA1  3001               	movlw	1
  2878  0FA2  120A  158A  275C  120A  158A  	fcall	_lcd_cmd
  2879                           
  2880                           ;PANTALLALCD.c: 62:     lcd_cmd(0x06);
  2881  0FA7  3006               	movlw	6
  2882  0FA8  120A  158A  275C  120A  158A  	fcall	_lcd_cmd
  2883                           
  2884                           ;PANTALLALCD.c: 63:     lcd_cmd(0x80);
  2885  0FAD  3080               	movlw	128
  2886  0FAE  120A  158A  275C  120A  158A  	fcall	_lcd_cmd
  2887  0FB3                     l198:	
  2888  0FB3  0008               	return
  2889  0FB4                     __end_of_inicializacion:	
  2890                           
  2891                           	psect	text9
  2892  0F5C                     __ptext9:	
  2893 ;; *************** function _lcd_cmd *****************
  2894 ;; Defined at:
  2895 ;;		line 10 in file "PANTALLALCD.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  x               1    wreg     unsigned char 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  x               1    2[COMMON] unsigned char 
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0, pclath, cstack
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2909 ;;      Params:         0       0       0       0       0
  2910 ;;      Locals:         1       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0
  2912 ;;      Totals:         1       0       0       0       0
  2913 ;;Total ram usage:        1 bytes
  2914 ;; Hardware stack levels used:    1
  2915 ;; Hardware stack levels required when called:    1
  2916 ;; This function calls:
  2917 ;;		_lcd_lat
  2918 ;;		_lcd_ready
  2919 ;; This function is called by:
  2920 ;;		_main
  2921 ;;		_inicializacion
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           
  2926                           ;psect for function _lcd_cmd
  2927  0F5C                     _lcd_cmd:	
  2928                           
  2929                           ;incstack = 0
  2930                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2931                           ;lcd_cmd@x stored from wreg
  2932  0F5C  00F2               	movwf	lcd_cmd@x
  2933  0F5D                     l1525:	
  2934                           
  2935                           ;PANTALLALCD.c: 11:     lcd_ready();
  2936  0F5D  120A  118A  2041  120A  158A  	fcall	_lcd_ready
  2937  0F62                     l1527:	
  2938                           
  2939                           ;PANTALLALCD.c: 12:     PORTB = x;
  2940  0F62  0872               	movf	lcd_cmd@x,w
  2941  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0F65  0086               	movwf	6	;volatile
  2944  0F66                     l1529:	
  2945                           
  2946                           ;PANTALLALCD.c: 13:     RD5 = 0;
  2947  0F66  1288               	bcf	8,5	;volatile
  2948  0F67                     l1531:	
  2949                           
  2950                           ;PANTALLALCD.c: 14:     RD6 = 0;
  2951  0F67  1308               	bcf	8,6	;volatile
  2952  0F68                     l1533:	
  2953                           
  2954                           ;PANTALLALCD.c: 15:     lcd_lat();
  2955  0F68  120A  158A  274D  120A  158A  	fcall	_lcd_lat
  2956  0F6D                     l178:	
  2957  0F6D  0008               	return
  2958  0F6E                     __end_of_lcd_cmd:	
  2959                           
  2960                           	psect	text10
  2961  0041                     __ptext10:	
  2962 ;; *************** function _lcd_ready *****************
  2963 ;; Defined at:
  2964 ;;		line 25 in file "PANTALLALCD.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1    wreg      void 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2978 ;;      Params:         0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0
  2980 ;;      Temps:          2       0       0       0       0
  2981 ;;      Totals:         2       0       0       0       0
  2982 ;;Total ram usage:        2 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; This function calls:
  2985 ;;		Nothing
  2986 ;; This function is called by:
  2987 ;;		_lcd_cmd
  2988 ;;		_lcd_dwr
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           
  2993                           ;psect for function _lcd_ready
  2994  0041                     _lcd_ready:	
  2995  0041                     l1449:	
  2996                           ;incstack = 0
  2997                           ; Regs used in _lcd_ready: [wreg+status,2+status,0]
  2998                           
  2999                           
  3000                           ;PANTALLALCD.c: 26:     PORTB = 0xFF;
  3001  0041  30FF               	movlw	255
  3002  0042  1283               	bcf	3,5	;RP0=0, select bank0
  3003  0043  1303               	bcf	3,6	;RP1=0, select bank0
  3004  0044  0086               	movwf	6	;volatile
  3005  0045                     l1451:	
  3006                           
  3007                           ;PANTALLALCD.c: 27:     PORTB &= 0x80;
  3008  0045  3080               	movlw	128
  3009  0046  00F0               	movwf	??_lcd_ready
  3010  0047  0870               	movf	??_lcd_ready,w
  3011  0048  0586               	andwf	6,f	;volatile
  3012  0049                     l1453:	
  3013                           
  3014                           ;PANTALLALCD.c: 28:     RD5 = 0;
  3015  0049  1288               	bcf	8,5	;volatile
  3016  004A                     l1455:	
  3017                           
  3018                           ;PANTALLALCD.c: 29:     RD6 = 1;
  3019  004A  1708               	bsf	8,6	;volatile
  3020  004B                     l1457:	
  3021                           
  3022                           ;PANTALLALCD.c: 30:     RD7 = 0;
  3023  004B  1388               	bcf	8,7	;volatile
  3024  004C                     l1459:	
  3025                           
  3026                           ;PANTALLALCD.c: 31:     _delay((unsigned long)((30)*(8000000/4000.0)));
  3027  004C  304E               	movlw	78
  3028  004D  00F1               	movwf	??_lcd_ready+1
  3029  004E  30EB               	movlw	235
  3030  004F  00F0               	movwf	??_lcd_ready
  3031  0050                     u1507:	
  3032  0050  0BF0               	decfsz	??_lcd_ready,f
  3033  0051  2850               	goto	u1507
  3034  0052  0BF1               	decfsz	??_lcd_ready+1,f
  3035  0053  2850               	goto	u1507
  3036  0054                     l1461:	
  3037                           
  3038                           ;PANTALLALCD.c: 32:     RD7 = 1;
  3039  0054  1283               	bcf	3,5	;RP0=0, select bank0
  3040  0055  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0056  1788               	bsf	8,7	;volatile
  3042                           
  3043                           ;PANTALLALCD.c: 33:     if (PORTB == 0x80){
  3044  0057  3080               	movlw	128
  3045  0058  0606               	xorwf	6,w	;volatile
  3046  0059  1D03               	btfss	3,2
  3047  005A  285C               	goto	u711
  3048  005B  285D               	goto	u710
  3049  005C                     u711:	
  3050  005C  2869               	goto	l186
  3051  005D                     u710:	
  3052  005D                     l1463:	
  3053                           
  3054                           ;PANTALLALCD.c: 34:     RD7 = 0;
  3055  005D  1388               	bcf	8,7	;volatile
  3056  005E                     l1465:	
  3057                           
  3058                           ;PANTALLALCD.c: 35:     _delay((unsigned long)((30)*(8000000/4000.0)));
  3059  005E  304E               	movlw	78
  3060  005F  00F1               	movwf	??_lcd_ready+1
  3061  0060  30EB               	movlw	235
  3062  0061  00F0               	movwf	??_lcd_ready
  3063  0062                     u1517:	
  3064  0062  0BF0               	decfsz	??_lcd_ready,f
  3065  0063  2862               	goto	u1517
  3066  0064  0BF1               	decfsz	??_lcd_ready+1,f
  3067  0065  2862               	goto	u1517
  3068  0066                     l1467:	
  3069                           
  3070                           ;PANTALLALCD.c: 36:     RD7 = 1;
  3071  0066  1283               	bcf	3,5	;RP0=0, select bank0
  3072  0067  1303               	bcf	3,6	;RP1=0, select bank0
  3073  0068  1788               	bsf	8,7	;volatile
  3074  0069                     l186:	
  3075                           ;PANTALLALCD.c: 37:     }
  3076                           
  3077  0069  0008               	return
  3078  006A                     __end_of_lcd_ready:	
  3079                           
  3080                           	psect	text11
  3081  0F4D                     __ptext11:	
  3082 ;; *************** function _lcd_lat *****************
  3083 ;; Defined at:
  3084 ;;		line 19 in file "PANTALLALCD.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used:    1
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_lcd_cmd
  3108 ;;		_lcd_dwr
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _lcd_lat
  3114  0F4D                     _lcd_lat:	
  3115  0F4D                     l1469:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _lcd_lat: [wreg]
  3118                           
  3119                           
  3120                           ;PANTALLALCD.c: 20:     RD7 = 1;
  3121  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  3122  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  3123  0F4F  1788               	bsf	8,7	;volatile
  3124  0F50                     l1471:	
  3125                           
  3126                           ;PANTALLALCD.c: 21:    _delay((unsigned long)((30)*(8000000/4000.0)));
  3127  0F50  304E               	movlw	78
  3128  0F51  00F1               	movwf	??_lcd_lat+1
  3129  0F52  30EB               	movlw	235
  3130  0F53  00F0               	movwf	??_lcd_lat
  3131  0F54                     u1527:	
  3132  0F54  0BF0               	decfsz	??_lcd_lat,f
  3133  0F55  2F54               	goto	u1527
  3134  0F56  0BF1               	decfsz	??_lcd_lat+1,f
  3135  0F57  2F54               	goto	u1527
  3136  0F58                     l1473:	
  3137                           
  3138                           ;PANTALLALCD.c: 22:    RD7 = 0;
  3139  0F58  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0F59  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0F5A  1388               	bcf	8,7	;volatile
  3142  0F5B                     l181:	
  3143  0F5B  0008               	return
  3144  0F5C                     __end_of_lcd_lat:	
  3145                           
  3146                           	psect	text12
  3147  0177                     __ptext12:	
  3148 ;; *************** function ___awmod *****************
  3149 ;; Defined at:
  3150 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  divisor         2    0[COMMON] int 
  3153 ;;  dividend        2    2[COMMON] int 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  sign            1    6[COMMON] unsigned char 
  3156 ;;  counter         1    5[COMMON] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  2    0[COMMON] int 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         4       0       0       0       0
  3167 ;;      Locals:         2       0       0       0       0
  3168 ;;      Temps:          1       0       0       0       0
  3169 ;;      Totals:         7       0       0       0       0
  3170 ;;Total ram usage:        7 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           
  3180                           ;psect for function ___awmod
  3181  0177                     ___awmod:	
  3182  0177                     l1795:	
  3183                           ;incstack = 0
  3184                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3185                           
  3186  0177  01F6               	clrf	___awmod@sign
  3187  0178                     l1797:	
  3188  0178  1FF3               	btfss	___awmod@dividend+1,7
  3189  0179  297B               	goto	u1271
  3190  017A  297C               	goto	u1270
  3191  017B                     u1271:	
  3192  017B  2983               	goto	l1803
  3193  017C                     u1270:	
  3194  017C                     l1799:	
  3195  017C  09F2               	comf	___awmod@dividend,f
  3196  017D  09F3               	comf	___awmod@dividend+1,f
  3197  017E  0AF2               	incf	___awmod@dividend,f
  3198  017F  1903               	skipnz
  3199  0180  0AF3               	incf	___awmod@dividend+1,f
  3200  0181                     l1801:	
  3201  0181  01F6               	clrf	___awmod@sign
  3202  0182  0AF6               	incf	___awmod@sign,f
  3203  0183                     l1803:	
  3204  0183  1FF1               	btfss	___awmod@divisor+1,7
  3205  0184  2986               	goto	u1281
  3206  0185  2987               	goto	u1280
  3207  0186                     u1281:	
  3208  0186  298C               	goto	l1807
  3209  0187                     u1280:	
  3210  0187                     l1805:	
  3211  0187  09F0               	comf	___awmod@divisor,f
  3212  0188  09F1               	comf	___awmod@divisor+1,f
  3213  0189  0AF0               	incf	___awmod@divisor,f
  3214  018A  1903               	skipnz
  3215  018B  0AF1               	incf	___awmod@divisor+1,f
  3216  018C                     l1807:	
  3217  018C  0870               	movf	___awmod@divisor,w
  3218  018D  0471               	iorwf	___awmod@divisor+1,w
  3219  018E  1903               	btfsc	3,2
  3220  018F  2991               	goto	u1291
  3221  0190  2992               	goto	u1290
  3222  0191                     u1291:	
  3223  0191  29C1               	goto	l1825
  3224  0192                     u1290:	
  3225  0192                     l1809:	
  3226  0192  01F5               	clrf	___awmod@counter
  3227  0193  0AF5               	incf	___awmod@counter,f
  3228  0194  29A0               	goto	l1815
  3229  0195                     l1811:	
  3230  0195  3001               	movlw	1
  3231  0196                     u1305:	
  3232  0196  1003               	clrc
  3233  0197  0DF0               	rlf	___awmod@divisor,f
  3234  0198  0DF1               	rlf	___awmod@divisor+1,f
  3235  0199  3EFF               	addlw	-1
  3236  019A  1D03               	skipz
  3237  019B  2996               	goto	u1305
  3238  019C                     l1813:	
  3239  019C  3001               	movlw	1
  3240  019D  00F4               	movwf	??___awmod
  3241  019E  0874               	movf	??___awmod,w
  3242  019F  07F5               	addwf	___awmod@counter,f
  3243  01A0                     l1815:	
  3244  01A0  1FF1               	btfss	___awmod@divisor+1,7
  3245  01A1  29A3               	goto	u1311
  3246  01A2  29A4               	goto	u1310
  3247  01A3                     u1311:	
  3248  01A3  2995               	goto	l1811
  3249  01A4                     u1310:	
  3250  01A4                     l1817:	
  3251  01A4  0871               	movf	___awmod@divisor+1,w
  3252  01A5  0273               	subwf	___awmod@dividend+1,w
  3253  01A6  1D03               	skipz
  3254  01A7  29AA               	goto	u1325
  3255  01A8  0870               	movf	___awmod@divisor,w
  3256  01A9  0272               	subwf	___awmod@dividend,w
  3257  01AA                     u1325:	
  3258  01AA  1C03               	skipc
  3259  01AB  29AD               	goto	u1321
  3260  01AC  29AE               	goto	u1320
  3261  01AD                     u1321:	
  3262  01AD  29B4               	goto	l1821
  3263  01AE                     u1320:	
  3264  01AE                     l1819:	
  3265  01AE  0870               	movf	___awmod@divisor,w
  3266  01AF  02F2               	subwf	___awmod@dividend,f
  3267  01B0  0871               	movf	___awmod@divisor+1,w
  3268  01B1  1C03               	skipc
  3269  01B2  03F3               	decf	___awmod@dividend+1,f
  3270  01B3  02F3               	subwf	___awmod@dividend+1,f
  3271  01B4                     l1821:	
  3272  01B4  3001               	movlw	1
  3273  01B5                     u1335:	
  3274  01B5  1003               	clrc
  3275  01B6  0CF1               	rrf	___awmod@divisor+1,f
  3276  01B7  0CF0               	rrf	___awmod@divisor,f
  3277  01B8  3EFF               	addlw	-1
  3278  01B9  1D03               	skipz
  3279  01BA  29B5               	goto	u1335
  3280  01BB                     l1823:	
  3281  01BB  3001               	movlw	1
  3282  01BC  02F5               	subwf	___awmod@counter,f
  3283  01BD  1D03               	btfss	3,2
  3284  01BE  29C0               	goto	u1341
  3285  01BF  29C1               	goto	u1340
  3286  01C0                     u1341:	
  3287  01C0  29A4               	goto	l1817
  3288  01C1                     u1340:	
  3289  01C1                     l1825:	
  3290  01C1  0876               	movf	___awmod@sign,w
  3291  01C2  1903               	btfsc	3,2
  3292  01C3  29C5               	goto	u1351
  3293  01C4  29C6               	goto	u1350
  3294  01C5                     u1351:	
  3295  01C5  29CB               	goto	l1829
  3296  01C6                     u1350:	
  3297  01C6                     l1827:	
  3298  01C6  09F2               	comf	___awmod@dividend,f
  3299  01C7  09F3               	comf	___awmod@dividend+1,f
  3300  01C8  0AF2               	incf	___awmod@dividend,f
  3301  01C9  1903               	skipnz
  3302  01CA  0AF3               	incf	___awmod@dividend+1,f
  3303  01CB                     l1829:	
  3304  01CB  0873               	movf	___awmod@dividend+1,w
  3305  01CC  00F1               	movwf	?___awmod+1
  3306  01CD  0872               	movf	___awmod@dividend,w
  3307  01CE  00F0               	movwf	?___awmod
  3308  01CF                     l532:	
  3309  01CF  0008               	return
  3310  01D0                     __end_of___awmod:	
  3311                           
  3312                           	psect	text13
  3313  0299                     __ptext13:	
  3314 ;; *************** function ___awdiv *****************
  3315 ;; Defined at:
  3316 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  divisor         2    0[COMMON] int 
  3319 ;;  dividend        2    2[COMMON] int 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  quotient        2    7[COMMON] int 
  3322 ;;  sign            1    6[COMMON] unsigned char 
  3323 ;;  counter         1    5[COMMON] unsigned char 
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  2    0[COMMON] int 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3333 ;;      Params:         4       0       0       0       0
  3334 ;;      Locals:         4       0       0       0       0
  3335 ;;      Temps:          1       0       0       0       0
  3336 ;;      Totals:         9       0       0       0       0
  3337 ;;Total ram usage:        9 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function ___awdiv
  3348  0299                     ___awdiv:	
  3349  0299                     l1751:	
  3350                           ;incstack = 0
  3351                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3352                           
  3353  0299  01F6               	clrf	___awdiv@sign
  3354  029A                     l1753:	
  3355  029A  1FF1               	btfss	___awdiv@divisor+1,7
  3356  029B  2A9D               	goto	u1171
  3357  029C  2A9E               	goto	u1170
  3358  029D                     u1171:	
  3359  029D  2AA5               	goto	l1759
  3360  029E                     u1170:	
  3361  029E                     l1755:	
  3362  029E  09F0               	comf	___awdiv@divisor,f
  3363  029F  09F1               	comf	___awdiv@divisor+1,f
  3364  02A0  0AF0               	incf	___awdiv@divisor,f
  3365  02A1  1903               	skipnz
  3366  02A2  0AF1               	incf	___awdiv@divisor+1,f
  3367  02A3                     l1757:	
  3368  02A3  01F6               	clrf	___awdiv@sign
  3369  02A4  0AF6               	incf	___awdiv@sign,f
  3370  02A5                     l1759:	
  3371  02A5  1FF3               	btfss	___awdiv@dividend+1,7
  3372  02A6  2AA8               	goto	u1181
  3373  02A7  2AA9               	goto	u1180
  3374  02A8                     u1181:	
  3375  02A8  2AB2               	goto	l1765
  3376  02A9                     u1180:	
  3377  02A9                     l1761:	
  3378  02A9  09F2               	comf	___awdiv@dividend,f
  3379  02AA  09F3               	comf	___awdiv@dividend+1,f
  3380  02AB  0AF2               	incf	___awdiv@dividend,f
  3381  02AC  1903               	skipnz
  3382  02AD  0AF3               	incf	___awdiv@dividend+1,f
  3383  02AE                     l1763:	
  3384  02AE  3001               	movlw	1
  3385  02AF  00F4               	movwf	??___awdiv
  3386  02B0  0874               	movf	??___awdiv,w
  3387  02B1  06F6               	xorwf	___awdiv@sign,f
  3388  02B2                     l1765:	
  3389  02B2  01F7               	clrf	___awdiv@quotient
  3390  02B3  01F8               	clrf	___awdiv@quotient+1
  3391  02B4                     l1767:	
  3392  02B4  0870               	movf	___awdiv@divisor,w
  3393  02B5  0471               	iorwf	___awdiv@divisor+1,w
  3394  02B6  1903               	btfsc	3,2
  3395  02B7  2AB9               	goto	u1191
  3396  02B8  2ABA               	goto	u1190
  3397  02B9                     u1191:	
  3398  02B9  2AF1               	goto	l1787
  3399  02BA                     u1190:	
  3400  02BA                     l1769:	
  3401  02BA  01F5               	clrf	___awdiv@counter
  3402  02BB  0AF5               	incf	___awdiv@counter,f
  3403  02BC  2AC8               	goto	l1775
  3404  02BD                     l1771:	
  3405  02BD  3001               	movlw	1
  3406  02BE                     u1205:	
  3407  02BE  1003               	clrc
  3408  02BF  0DF0               	rlf	___awdiv@divisor,f
  3409  02C0  0DF1               	rlf	___awdiv@divisor+1,f
  3410  02C1  3EFF               	addlw	-1
  3411  02C2  1D03               	skipz
  3412  02C3  2ABE               	goto	u1205
  3413  02C4                     l1773:	
  3414  02C4  3001               	movlw	1
  3415  02C5  00F4               	movwf	??___awdiv
  3416  02C6  0874               	movf	??___awdiv,w
  3417  02C7  07F5               	addwf	___awdiv@counter,f
  3418  02C8                     l1775:	
  3419  02C8  1FF1               	btfss	___awdiv@divisor+1,7
  3420  02C9  2ACB               	goto	u1211
  3421  02CA  2ACC               	goto	u1210
  3422  02CB                     u1211:	
  3423  02CB  2ABD               	goto	l1771
  3424  02CC                     u1210:	
  3425  02CC                     l1777:	
  3426  02CC  3001               	movlw	1
  3427  02CD                     u1225:	
  3428  02CD  1003               	clrc
  3429  02CE  0DF7               	rlf	___awdiv@quotient,f
  3430  02CF  0DF8               	rlf	___awdiv@quotient+1,f
  3431  02D0  3EFF               	addlw	-1
  3432  02D1  1D03               	skipz
  3433  02D2  2ACD               	goto	u1225
  3434  02D3  0871               	movf	___awdiv@divisor+1,w
  3435  02D4  0273               	subwf	___awdiv@dividend+1,w
  3436  02D5  1D03               	skipz
  3437  02D6  2AD9               	goto	u1235
  3438  02D7  0870               	movf	___awdiv@divisor,w
  3439  02D8  0272               	subwf	___awdiv@dividend,w
  3440  02D9                     u1235:	
  3441  02D9  1C03               	skipc
  3442  02DA  2ADC               	goto	u1231
  3443  02DB  2ADD               	goto	u1230
  3444  02DC                     u1231:	
  3445  02DC  2AE4               	goto	l1783
  3446  02DD                     u1230:	
  3447  02DD                     l1779:	
  3448  02DD  0870               	movf	___awdiv@divisor,w
  3449  02DE  02F2               	subwf	___awdiv@dividend,f
  3450  02DF  0871               	movf	___awdiv@divisor+1,w
  3451  02E0  1C03               	skipc
  3452  02E1  03F3               	decf	___awdiv@dividend+1,f
  3453  02E2  02F3               	subwf	___awdiv@dividend+1,f
  3454  02E3                     l1781:	
  3455  02E3  1477               	bsf	___awdiv@quotient,0
  3456  02E4                     l1783:	
  3457  02E4  3001               	movlw	1
  3458  02E5                     u1245:	
  3459  02E5  1003               	clrc
  3460  02E6  0CF1               	rrf	___awdiv@divisor+1,f
  3461  02E7  0CF0               	rrf	___awdiv@divisor,f
  3462  02E8  3EFF               	addlw	-1
  3463  02E9  1D03               	skipz
  3464  02EA  2AE5               	goto	u1245
  3465  02EB                     l1785:	
  3466  02EB  3001               	movlw	1
  3467  02EC  02F5               	subwf	___awdiv@counter,f
  3468  02ED  1D03               	btfss	3,2
  3469  02EE  2AF0               	goto	u1251
  3470  02EF  2AF1               	goto	u1250
  3471  02F0                     u1251:	
  3472  02F0  2ACC               	goto	l1777
  3473  02F1                     u1250:	
  3474  02F1                     l1787:	
  3475  02F1  0876               	movf	___awdiv@sign,w
  3476  02F2  1903               	btfsc	3,2
  3477  02F3  2AF5               	goto	u1261
  3478  02F4  2AF6               	goto	u1260
  3479  02F5                     u1261:	
  3480  02F5  2AFB               	goto	l1791
  3481  02F6                     u1260:	
  3482  02F6                     l1789:	
  3483  02F6  09F7               	comf	___awdiv@quotient,f
  3484  02F7  09F8               	comf	___awdiv@quotient+1,f
  3485  02F8  0AF7               	incf	___awdiv@quotient,f
  3486  02F9  1903               	skipnz
  3487  02FA  0AF8               	incf	___awdiv@quotient+1,f
  3488  02FB                     l1791:	
  3489  02FB  0878               	movf	___awdiv@quotient+1,w
  3490  02FC  00F1               	movwf	?___awdiv+1
  3491  02FD  0877               	movf	___awdiv@quotient,w
  3492  02FE  00F0               	movwf	?___awdiv
  3493  02FF                     l519:	
  3494  02FF  0008               	return
  3495  0300                     __end_of___awdiv:	
  3496                           
  3497                           	psect	text14
  3498  0F34                     __ptext14:	
  3499 ;; *************** function _UART_WRITE *****************
  3500 ;; Defined at:
  3501 ;;		line 31 in file "UART.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;  data            1    wreg     unsigned char 
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  data            1    0[COMMON] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       0       0       0       0
  3516 ;;      Locals:         1       0       0       0       0
  3517 ;;      Temps:          0       0       0       0       0
  3518 ;;      Totals:         1       0       0       0       0
  3519 ;;Total ram usage:        1 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _UART_WRITE
  3530  0F34                     _UART_WRITE:	
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _UART_WRITE: [wreg]
  3534                           ;UART_WRITE@data stored from wreg
  3535  0F34  00F0               	movwf	UART_WRITE@data
  3536  0F35                     l1747:	
  3537  0F35                     l277:	
  3538                           ;UART.c: 32:   while(!TXSTAbits.TRMT);
  3539                           
  3540  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  3541  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  3542  0F37  1C98               	btfss	24,1	;volatile
  3543  0F38  2F3A               	goto	u1161
  3544  0F39  2F3B               	goto	u1160
  3545  0F3A                     u1161:	
  3546  0F3A  2F35               	goto	l277
  3547  0F3B                     u1160:	
  3548  0F3B                     l1749:	
  3549                           
  3550                           ;UART.c: 33:   TXREG = data;
  3551  0F3B  0870               	movf	UART_WRITE@data,w
  3552  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0F3E  0099               	movwf	25	;volatile
  3555  0F3F                     l280:	
  3556  0F3F  0008               	return
  3557  0F40                     __end_of_UART_WRITE:	
  3558                           
  3559                           	psect	text15
  3560  01D0                     __ptext15:	
  3561 ;; *************** function _UART_INIT *****************
  3562 ;; Defined at:
  3563 ;;		line 6 in file "UART.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  baudrate        4    6[BANK0 ] const long 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      unsigned char 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3577 ;;      Params:         0       4       0       0       0
  3578 ;;      Locals:         0       0       0       0       0
  3579 ;;      Temps:          0      12       0       0       0
  3580 ;;      Totals:         0      16       0       0       0
  3581 ;;Total ram usage:       16 bytes
  3582 ;; Hardware stack levels used:    1
  3583 ;; Hardware stack levels required when called:    1
  3584 ;; This function calls:
  3585 ;;		___aldiv
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _UART_INIT
  3593  01D0                     _UART_INIT:	
  3594  01D0                     l1671:	
  3595                           ;incstack = 0
  3596                           ; Regs used in _UART_INIT: [wreg+status,2+status,0+pclath+cstack]
  3597                           
  3598                           
  3599                           ;UART.c: 7:  SPBRG = (8000000 - baudrate*16)/(baudrate*16);
  3600  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  3601  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  3602  01D2  085A               	movf	UART_INIT@baudrate,w
  3603  01D3  00DE               	movwf	??_UART_INIT
  3604  01D4  085B               	movf	UART_INIT@baudrate+1,w
  3605  01D5  00DF               	movwf	??_UART_INIT+1
  3606  01D6  085C               	movf	UART_INIT@baudrate+2,w
  3607  01D7  00E0               	movwf	??_UART_INIT+2
  3608  01D8  085D               	movf	UART_INIT@baudrate+3,w
  3609  01D9  00E1               	movwf	??_UART_INIT+3
  3610  01DA  3004               	movlw	4
  3611  01DB                     u1085:	
  3612  01DB  1003               	clrc
  3613  01DC  0DDE               	rlf	??_UART_INIT,f
  3614  01DD  0DDF               	rlf	??_UART_INIT+1,f
  3615  01DE  0DE0               	rlf	??_UART_INIT+2,f
  3616  01DF  0DE1               	rlf	??_UART_INIT+3,f
  3617  01E0                     u1080:	
  3618  01E0  3EFF               	addlw	-1
  3619  01E1  1D03               	skipz
  3620  01E2  29DB               	goto	u1085
  3621  01E3  0861               	movf	??_UART_INIT+3,w
  3622  01E4  00F3               	movwf	___aldiv@divisor+3
  3623  01E5  0860               	movf	??_UART_INIT+2,w
  3624  01E6  00F2               	movwf	___aldiv@divisor+2
  3625  01E7  085F               	movf	??_UART_INIT+1,w
  3626  01E8  00F1               	movwf	___aldiv@divisor+1
  3627  01E9  085E               	movf	??_UART_INIT,w
  3628  01EA  00F0               	movwf	___aldiv@divisor
  3629  01EB  085A               	movf	UART_INIT@baudrate,w
  3630  01EC  00E2               	movwf	??_UART_INIT+4
  3631  01ED  085B               	movf	UART_INIT@baudrate+1,w
  3632  01EE  00E3               	movwf	??_UART_INIT+5
  3633  01EF  085C               	movf	UART_INIT@baudrate+2,w
  3634  01F0  00E4               	movwf	??_UART_INIT+6
  3635  01F1  085D               	movf	UART_INIT@baudrate+3,w
  3636  01F2  00E5               	movwf	??_UART_INIT+7
  3637  01F3  3004               	movlw	4
  3638  01F4                     u1095:	
  3639  01F4  1003               	clrc
  3640  01F5  0DE2               	rlf	??_UART_INIT+4,f
  3641  01F6  0DE3               	rlf	??_UART_INIT+5,f
  3642  01F7  0DE4               	rlf	??_UART_INIT+6,f
  3643  01F8  0DE5               	rlf	??_UART_INIT+7,f
  3644  01F9                     u1090:	
  3645  01F9  3EFF               	addlw	-1
  3646  01FA  1D03               	skipz
  3647  01FB  29F4               	goto	u1095
  3648  01FC  3000               	movlw	0
  3649  01FD  00E6               	movwf	??_UART_INIT+8
  3650  01FE  3012               	movlw	18
  3651  01FF  00E7               	movwf	??_UART_INIT+9
  3652  0200  307A               	movlw	122
  3653  0201  00E8               	movwf	??_UART_INIT+10
  3654  0202  3000               	movlw	0
  3655  0203  00E9               	movwf	??_UART_INIT+11
  3656  0204  0862               	movf	??_UART_INIT+4,w
  3657  0205  02E6               	subwf	??_UART_INIT+8,f
  3658  0206  0863               	movf	??_UART_INIT+5,w
  3659  0207  1C03               	skipc
  3660  0208  0F63               	incfsz	??_UART_INIT+5,w
  3661  0209  2A0B               	goto	u1101
  3662  020A  2A0C               	goto	u1102
  3663  020B                     u1101:	
  3664  020B  02E7               	subwf	??_UART_INIT+9,f
  3665  020C                     u1102:	
  3666  020C  0864               	movf	??_UART_INIT+6,w
  3667  020D  1C03               	skipc
  3668  020E  0F64               	incfsz	??_UART_INIT+6,w
  3669  020F  2A11               	goto	u1103
  3670  0210  2A12               	goto	u1104
  3671  0211                     u1103:	
  3672  0211  02E8               	subwf	??_UART_INIT+10,f
  3673  0212                     u1104:	
  3674  0212  0865               	movf	??_UART_INIT+7,w
  3675  0213  1C03               	skipc
  3676  0214  0F65               	incfsz	??_UART_INIT+7,w
  3677  0215  2A17               	goto	u1105
  3678  0216  2A18               	goto	u1106
  3679  0217                     u1105:	
  3680  0217  02E9               	subwf	??_UART_INIT+11,f
  3681  0218                     u1106:	
  3682  0218  0869               	movf	??_UART_INIT+11,w
  3683  0219  00F7               	movwf	___aldiv@dividend+3
  3684  021A  0868               	movf	??_UART_INIT+10,w
  3685  021B  00F6               	movwf	___aldiv@dividend+2
  3686  021C  0867               	movf	??_UART_INIT+9,w
  3687  021D  00F5               	movwf	___aldiv@dividend+1
  3688  021E  0866               	movf	??_UART_INIT+8,w
  3689  021F  00F4               	movwf	___aldiv@dividend
  3690  0220  120A  118A  2372  120A  118A  	fcall	___aldiv
  3691  0225  0870               	movf	?___aldiv,w
  3692  0226  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0227  1303               	bcf	3,6	;RP1=0, select bank1
  3694  0228  0099               	movwf	25	;volatile
  3695  0229                     l1673:	
  3696                           
  3697                           ;UART.c: 8:      TXSTAbits.BRGH = 1;
  3698  0229  1518               	bsf	24,2	;volatile
  3699  022A                     l1675:	
  3700                           
  3701                           ;UART.c: 9:     TXSTAbits.TXEN = 1;
  3702  022A  1698               	bsf	24,5	;volatile
  3703  022B                     l1677:	
  3704                           
  3705                           ;UART.c: 10:     TXSTAbits.SYNC = 0;
  3706  022B  1218               	bcf	24,4	;volatile
  3707  022C                     l1679:	
  3708                           
  3709                           ;UART.c: 11:     TXSTAbits.TX9 = 0;
  3710  022C  1318               	bcf	24,6	;volatile
  3711  022D                     l1681:	
  3712                           
  3713                           ;UART.c: 13:     RCSTAbits.CREN = 1;
  3714  022D  1283               	bcf	3,5	;RP0=0, select bank0
  3715  022E  1303               	bcf	3,6	;RP1=0, select bank0
  3716  022F  1618               	bsf	24,4	;volatile
  3717  0230                     l1683:	
  3718                           
  3719                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  3720  0230  1798               	bsf	24,7	;volatile
  3721  0231                     l1685:	
  3722                           
  3723                           ;UART.c: 15:     RCSTAbits.RX9 = 0;
  3724  0231  1318               	bcf	24,6	;volatile
  3725  0232                     l270:	
  3726  0232  0008               	return
  3727  0233                     __end_of_UART_INIT:	
  3728                           
  3729                           	psect	text16
  3730  0372                     __ptext16:	
  3731 ;; *************** function ___aldiv *****************
  3732 ;; Defined at:
  3733 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  divisor         4    0[COMMON] long 
  3736 ;;  dividend        4    4[COMMON] long 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;  quotient        4    2[BANK0 ] long 
  3739 ;;  sign            1    1[BANK0 ] unsigned char 
  3740 ;;  counter         1    0[BANK0 ] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  4    0[COMMON] long 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3750 ;;      Params:         8       0       0       0       0
  3751 ;;      Locals:         0       6       0       0       0
  3752 ;;      Temps:          1       0       0       0       0
  3753 ;;      Totals:         9       6       0       0       0
  3754 ;;Total ram usage:       15 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; This function calls:
  3757 ;;		Nothing
  3758 ;; This function is called by:
  3759 ;;		_UART_INIT
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function ___aldiv
  3765  0372                     ___aldiv:	
  3766  0372                     l1577:	
  3767                           ;incstack = 0
  3768                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3769                           
  3770  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0374  01D5               	clrf	___aldiv@sign
  3773  0375                     l1579:	
  3774  0375  1FF3               	btfss	___aldiv@divisor+3,7
  3775  0376  2B78               	goto	u941
  3776  0377  2B79               	goto	u940
  3777  0378                     u941:	
  3778  0378  2B86               	goto	l431
  3779  0379                     u940:	
  3780  0379                     l1581:	
  3781  0379  09F0               	comf	___aldiv@divisor,f
  3782  037A  09F1               	comf	___aldiv@divisor+1,f
  3783  037B  09F2               	comf	___aldiv@divisor+2,f
  3784  037C  09F3               	comf	___aldiv@divisor+3,f
  3785  037D  0AF0               	incf	___aldiv@divisor,f
  3786  037E  1903               	skipnz
  3787  037F  0AF1               	incf	___aldiv@divisor+1,f
  3788  0380  1903               	skipnz
  3789  0381  0AF2               	incf	___aldiv@divisor+2,f
  3790  0382  1903               	skipnz
  3791  0383  0AF3               	incf	___aldiv@divisor+3,f
  3792  0384  01D5               	clrf	___aldiv@sign
  3793  0385  0AD5               	incf	___aldiv@sign,f
  3794  0386                     l431:	
  3795  0386  1FF7               	btfss	___aldiv@dividend+3,7
  3796  0387  2B89               	goto	u951
  3797  0388  2B8A               	goto	u950
  3798  0389                     u951:	
  3799  0389  2B99               	goto	l1587
  3800  038A                     u950:	
  3801  038A                     l1583:	
  3802  038A  09F4               	comf	___aldiv@dividend,f
  3803  038B  09F5               	comf	___aldiv@dividend+1,f
  3804  038C  09F6               	comf	___aldiv@dividend+2,f
  3805  038D  09F7               	comf	___aldiv@dividend+3,f
  3806  038E  0AF4               	incf	___aldiv@dividend,f
  3807  038F  1903               	skipnz
  3808  0390  0AF5               	incf	___aldiv@dividend+1,f
  3809  0391  1903               	skipnz
  3810  0392  0AF6               	incf	___aldiv@dividend+2,f
  3811  0393  1903               	skipnz
  3812  0394  0AF7               	incf	___aldiv@dividend+3,f
  3813  0395                     l1585:	
  3814  0395  3001               	movlw	1
  3815  0396  00F8               	movwf	??___aldiv
  3816  0397  0878               	movf	??___aldiv,w
  3817  0398  06D5               	xorwf	___aldiv@sign,f
  3818  0399                     l1587:	
  3819  0399  3000               	movlw	0
  3820  039A  00D9               	movwf	___aldiv@quotient+3
  3821  039B  3000               	movlw	0
  3822  039C  00D8               	movwf	___aldiv@quotient+2
  3823  039D  3000               	movlw	0
  3824  039E  00D7               	movwf	___aldiv@quotient+1
  3825  039F  3000               	movlw	0
  3826  03A0  00D6               	movwf	___aldiv@quotient
  3827  03A1                     l1589:	
  3828  03A1  0873               	movf	___aldiv@divisor+3,w
  3829  03A2  0472               	iorwf	___aldiv@divisor+2,w
  3830  03A3  0471               	iorwf	___aldiv@divisor+1,w
  3831  03A4  0470               	iorwf	___aldiv@divisor,w
  3832  03A5  1903               	skipnz
  3833  03A6  2BA8               	goto	u961
  3834  03A7  2BA9               	goto	u960
  3835  03A8                     u961:	
  3836  03A8  2BF6               	goto	l1609
  3837  03A9                     u960:	
  3838  03A9                     l1591:	
  3839  03A9  01D4               	clrf	___aldiv@counter
  3840  03AA  0AD4               	incf	___aldiv@counter,f
  3841  03AB  2BB9               	goto	l1595
  3842  03AC                     l1593:	
  3843  03AC  3001               	movlw	1
  3844  03AD  00F8               	movwf	??___aldiv
  3845  03AE                     u975:	
  3846  03AE  1003               	clrc
  3847  03AF  0DF0               	rlf	___aldiv@divisor,f
  3848  03B0  0DF1               	rlf	___aldiv@divisor+1,f
  3849  03B1  0DF2               	rlf	___aldiv@divisor+2,f
  3850  03B2  0DF3               	rlf	___aldiv@divisor+3,f
  3851  03B3  0BF8               	decfsz	??___aldiv,f
  3852  03B4  2BAE               	goto	u975
  3853  03B5  3001               	movlw	1
  3854  03B6  00F8               	movwf	??___aldiv
  3855  03B7  0878               	movf	??___aldiv,w
  3856  03B8  07D4               	addwf	___aldiv@counter,f
  3857  03B9                     l1595:	
  3858  03B9  1FF3               	btfss	___aldiv@divisor+3,7
  3859  03BA  2BBC               	goto	u981
  3860  03BB  2BBD               	goto	u980
  3861  03BC                     u981:	
  3862  03BC  2BAC               	goto	l1593
  3863  03BD                     u980:	
  3864  03BD                     l1597:	
  3865  03BD  3001               	movlw	1
  3866  03BE  00F8               	movwf	??___aldiv
  3867  03BF                     u995:	
  3868  03BF  1003               	clrc
  3869  03C0  0DD6               	rlf	___aldiv@quotient,f
  3870  03C1  0DD7               	rlf	___aldiv@quotient+1,f
  3871  03C2  0DD8               	rlf	___aldiv@quotient+2,f
  3872  03C3  0DD9               	rlf	___aldiv@quotient+3,f
  3873  03C4  0BF8               	decfsz	??___aldiv,f
  3874  03C5  2BBF               	goto	u995
  3875  03C6                     l1599:	
  3876  03C6  0873               	movf	___aldiv@divisor+3,w
  3877  03C7  0277               	subwf	___aldiv@dividend+3,w
  3878  03C8  1D03               	skipz
  3879  03C9  2BD4               	goto	u1005
  3880  03CA  0872               	movf	___aldiv@divisor+2,w
  3881  03CB  0276               	subwf	___aldiv@dividend+2,w
  3882  03CC  1D03               	skipz
  3883  03CD  2BD4               	goto	u1005
  3884  03CE  0871               	movf	___aldiv@divisor+1,w
  3885  03CF  0275               	subwf	___aldiv@dividend+1,w
  3886  03D0  1D03               	skipz
  3887  03D1  2BD4               	goto	u1005
  3888  03D2  0870               	movf	___aldiv@divisor,w
  3889  03D3  0274               	subwf	___aldiv@dividend,w
  3890  03D4                     u1005:	
  3891  03D4  1C03               	skipc
  3892  03D5  2BD7               	goto	u1001
  3893  03D6  2BD8               	goto	u1000
  3894  03D7                     u1001:	
  3895  03D7  2BE7               	goto	l1605
  3896  03D8                     u1000:	
  3897  03D8                     l1601:	
  3898  03D8  0870               	movf	___aldiv@divisor,w
  3899  03D9  02F4               	subwf	___aldiv@dividend,f
  3900  03DA  0871               	movf	___aldiv@divisor+1,w
  3901  03DB  1C03               	skipc
  3902  03DC  0F71               	incfsz	___aldiv@divisor+1,w
  3903  03DD  02F5               	subwf	___aldiv@dividend+1,f
  3904  03DE  0872               	movf	___aldiv@divisor+2,w
  3905  03DF  1C03               	skipc
  3906  03E0  0F72               	incfsz	___aldiv@divisor+2,w
  3907  03E1  02F6               	subwf	___aldiv@dividend+2,f
  3908  03E2  0873               	movf	___aldiv@divisor+3,w
  3909  03E3  1C03               	skipc
  3910  03E4  0F73               	incfsz	___aldiv@divisor+3,w
  3911  03E5  02F7               	subwf	___aldiv@dividend+3,f
  3912  03E6                     l1603:	
  3913  03E6  1456               	bsf	___aldiv@quotient,0
  3914  03E7                     l1605:	
  3915  03E7  3001               	movlw	1
  3916  03E8                     u1015:	
  3917  03E8  1003               	clrc
  3918  03E9  0CF3               	rrf	___aldiv@divisor+3,f
  3919  03EA  0CF2               	rrf	___aldiv@divisor+2,f
  3920  03EB  0CF1               	rrf	___aldiv@divisor+1,f
  3921  03EC  0CF0               	rrf	___aldiv@divisor,f
  3922  03ED  3EFF               	addlw	-1
  3923  03EE  1D03               	skipz
  3924  03EF  2BE8               	goto	u1015
  3925  03F0                     l1607:	
  3926  03F0  3001               	movlw	1
  3927  03F1  02D4               	subwf	___aldiv@counter,f
  3928  03F2  1D03               	btfss	3,2
  3929  03F3  2BF5               	goto	u1021
  3930  03F4  2BF6               	goto	u1020
  3931  03F5                     u1021:	
  3932  03F5  2BBD               	goto	l1597
  3933  03F6                     u1020:	
  3934  03F6                     l1609:	
  3935  03F6  0855               	movf	___aldiv@sign,w
  3936  03F7  1903               	btfsc	3,2
  3937  03F8  2BFA               	goto	u1031
  3938  03F9  2BFB               	goto	u1030
  3939  03FA                     u1031:	
  3940  03FA  2C06               	goto	l1613
  3941  03FB                     u1030:	
  3942  03FB                     l1611:	
  3943  03FB  09D6               	comf	___aldiv@quotient,f
  3944  03FC  09D7               	comf	___aldiv@quotient+1,f
  3945  03FD  09D8               	comf	___aldiv@quotient+2,f
  3946  03FE  09D9               	comf	___aldiv@quotient+3,f
  3947  03FF  0AD6               	incf	___aldiv@quotient,f
  3948  0400  1903               	skipnz
  3949  0401  0AD7               	incf	___aldiv@quotient+1,f
  3950  0402  1903               	skipnz
  3951  0403  0AD8               	incf	___aldiv@quotient+2,f
  3952  0404  1903               	skipnz
  3953  0405  0AD9               	incf	___aldiv@quotient+3,f
  3954  0406                     l1613:	
  3955  0406  0859               	movf	___aldiv@quotient+3,w
  3956  0407  00F3               	movwf	?___aldiv+3
  3957  0408  0858               	movf	___aldiv@quotient+2,w
  3958  0409  00F2               	movwf	?___aldiv+2
  3959  040A  0857               	movf	___aldiv@quotient+1,w
  3960  040B  00F1               	movwf	?___aldiv+1
  3961  040C  0856               	movf	___aldiv@quotient,w
  3962  040D  00F0               	movwf	?___aldiv
  3963  040E                     l441:	
  3964  040E  0008               	return
  3965  040F                     __end_of___aldiv:	
  3966                           
  3967                           	psect	text17
  3968  0F80                     __ptext17:	
  3969 ;; *************** function _SETUP *****************
  3970 ;; Defined at:
  3971 ;;		line 222 in file "MASTERR_I2C.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; This function calls:
  3992 ;;		Nothing
  3993 ;; This function is called by:
  3994 ;;		_main
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _SETUP
  4000  0F80                     _SETUP:	
  4001  0F80                     l1647:	
  4002                           ;incstack = 0
  4003                           ; Regs used in _SETUP: [wreg+status,2]
  4004                           
  4005                           
  4006                           ;MASTERR_I2C.c: 223:      TRISA=0b00000001;
  4007  0F80  3001               	movlw	1
  4008  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  4009  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  4010  0F83  0085               	movwf	5	;volatile
  4011  0F84                     l1649:	
  4012                           
  4013                           ;MASTERR_I2C.c: 224:     TRISB=0;
  4014  0F84  0186               	clrf	6	;volatile
  4015  0F85                     l1651:	
  4016                           
  4017                           ;MASTERR_I2C.c: 225:     TRISC=0b000011000;
  4018  0F85  3018               	movlw	24
  4019  0F86  0087               	movwf	7	;volatile
  4020                           
  4021                           ;MASTERR_I2C.c: 226:     TRISD=0;
  4022  0F87  0188               	clrf	8	;volatile
  4023                           
  4024                           ;MASTERR_I2C.c: 227:     TRISE=0;
  4025  0F88  0189               	clrf	9	;volatile
  4026                           
  4027                           ;MASTERR_I2C.c: 228:     ANSEL = 0b00000000;
  4028  0F89  1683               	bsf	3,5	;RP0=1, select bank3
  4029  0F8A  1703               	bsf	3,6	;RP1=1, select bank3
  4030  0F8B  0188               	clrf	8	;volatile
  4031                           
  4032                           ;MASTERR_I2C.c: 229:     ANSELH =0b00000000;
  4033  0F8C  0189               	clrf	9	;volatile
  4034                           
  4035                           ;MASTERR_I2C.c: 230:     PORTA=0;
  4036  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4037  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4038  0F8F  0185               	clrf	5	;volatile
  4039                           
  4040                           ;MASTERR_I2C.c: 231:     PORTB=0;
  4041  0F90  0186               	clrf	6	;volatile
  4042                           
  4043                           ;MASTERR_I2C.c: 232:     PORTC=0;
  4044  0F91  0187               	clrf	7	;volatile
  4045                           
  4046                           ;MASTERR_I2C.c: 233:     PORTD=0;
  4047  0F92  0188               	clrf	8	;volatile
  4048                           
  4049                           ;MASTERR_I2C.c: 234:     PORTE=0;
  4050  0F93  0189               	clrf	9	;volatile
  4051  0F94                     l161:	
  4052  0F94  0008               	return
  4053  0F95                     __end_of_SETUP:	
  4054                           
  4055                           	psect	text18
  4056  0F2A                     __ptext18:	
  4057 ;; *************** function _I2C_Master_Write *****************
  4058 ;; Defined at:
  4059 ;;		line 44 in file "I2C.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  d               2    0[COMMON] unsigned int 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;		None
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  1    wreg      void 
  4066 ;; Registers used:
  4067 ;;		wreg, status,2, status,0, pclath, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4073 ;;      Params:         2       0       0       0       0
  4074 ;;      Locals:         0       0       0       0       0
  4075 ;;      Temps:          0       0       0       0       0
  4076 ;;      Totals:         2       0       0       0       0
  4077 ;;Total ram usage:        2 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    1
  4080 ;; This function calls:
  4081 ;;		_I2C_Master_Wait
  4082 ;; This function is called by:
  4083 ;;		_main
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           
  4088                           ;psect for function _I2C_Master_Write
  4089  0F2A                     _I2C_Master_Write:	
  4090  0F2A                     l1691:	
  4091                           ;incstack = 0
  4092                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4093                           
  4094                           
  4095                           ;I2C.c: 45:     I2C_Master_Wait();
  4096  0F2A  120A  158A  2740  120A  158A  	fcall	_I2C_Master_Wait
  4097  0F2F                     l1693:	
  4098                           
  4099                           ;I2C.c: 46:     SSPBUF = d;
  4100  0F2F  0870               	movf	I2C_Master_Write@d,w
  4101  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  4102  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  4103  0F32  0093               	movwf	19	;volatile
  4104  0F33                     l247:	
  4105  0F33  0008               	return
  4106  0F34                     __end_of_I2C_Master_Write:	
  4107                           
  4108                           	psect	text19
  4109  0F21                     __ptext19:	
  4110 ;; *************** function _I2C_Master_Stop *****************
  4111 ;; Defined at:
  4112 ;;		line 35 in file "I2C.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, pclath, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    1
  4133 ;; This function calls:
  4134 ;;		_I2C_Master_Wait
  4135 ;; This function is called by:
  4136 ;;		_main
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           
  4141                           ;psect for function _I2C_Master_Stop
  4142  0F21                     _I2C_Master_Stop:	
  4143  0F21                     l1711:	
  4144                           ;incstack = 0
  4145                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4146                           
  4147                           
  4148                           ;I2C.c: 36:     I2C_Master_Wait();
  4149  0F21  120A  158A  2740  120A  158A  	fcall	_I2C_Master_Wait
  4150  0F26                     l1713:	
  4151                           
  4152                           ;I2C.c: 37:     SSPCON2bits.PEN = 1;
  4153  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  4154  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  4155  0F28  1511               	bsf	17,2	;volatile
  4156  0F29                     l244:	
  4157  0F29  0008               	return
  4158  0F2A                     __end_of_I2C_Master_Stop:	
  4159                           
  4160                           	psect	text20
  4161  0F18                     __ptext20:	
  4162 ;; *************** function _I2C_Master_Start *****************
  4163 ;; Defined at:
  4164 ;;		line 21 in file "I2C.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      void 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0, pclath, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0
  4181 ;;      Totals:         0       0       0       0       0
  4182 ;;Total ram usage:        0 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:    1
  4185 ;; This function calls:
  4186 ;;		_I2C_Master_Wait
  4187 ;; This function is called by:
  4188 ;;		_main
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _I2C_Master_Start
  4194  0F18                     _I2C_Master_Start:	
  4195  0F18                     l1687:	
  4196                           ;incstack = 0
  4197                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4198                           
  4199                           
  4200                           ;I2C.c: 22:     I2C_Master_Wait();
  4201  0F18  120A  158A  2740  120A  158A  	fcall	_I2C_Master_Wait
  4202  0F1D                     l1689:	
  4203                           
  4204                           ;I2C.c: 23:     SSPCON2bits.SEN = 1;
  4205  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  4206  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  4207  0F1F  1411               	bsf	17,0	;volatile
  4208  0F20                     l238:	
  4209  0F20  0008               	return
  4210  0F21                     __end_of_I2C_Master_Start:	
  4211                           
  4212                           	psect	text21
  4213  0093                     __ptext21:	
  4214 ;; *************** function _I2C_Master_Read *****************
  4215 ;; Defined at:
  4216 ;;		line 52 in file "I2C.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  a               2    0[COMMON] unsigned short 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  temp            2    4[COMMON] unsigned short 
  4221 ;; Return value:  Size  Location     Type
  4222 ;;                  2    0[COMMON] unsigned short 
  4223 ;; Registers used:
  4224 ;;		wreg, status,2, status,0, pclath, cstack
  4225 ;; Tracked objects:
  4226 ;;		On entry : 0/0
  4227 ;;		On exit  : 0/0
  4228 ;;		Unchanged: 0/0
  4229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4230 ;;      Params:         2       0       0       0       0
  4231 ;;      Locals:         2       0       0       0       0
  4232 ;;      Temps:          2       0       0       0       0
  4233 ;;      Totals:         6       0       0       0       0
  4234 ;;Total ram usage:        6 bytes
  4235 ;; Hardware stack levels used:    1
  4236 ;; Hardware stack levels required when called:    1
  4237 ;; This function calls:
  4238 ;;		_I2C_Master_Wait
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;; This function uses a non-reentrant model
  4242 ;;
  4243                           
  4244                           
  4245                           ;psect for function _I2C_Master_Read
  4246  0093                     _I2C_Master_Read:	
  4247  0093                     l1695:	
  4248                           ;incstack = 0
  4249                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4250                           
  4251                           
  4252                           ;I2C.c: 53:     unsigned short temp;;I2C.c: 54:     I2C_Master_Wait();
  4253  0093  120A  158A  2740  120A  118A  	fcall	_I2C_Master_Wait
  4254  0098                     l1697:	
  4255                           
  4256                           ;I2C.c: 55:     RCEN = 1;
  4257  0098  1683               	bsf	3,5	;RP0=1, select bank1
  4258  0099  1303               	bcf	3,6	;RP1=0, select bank1
  4259  009A  1591               	bsf	17,3	;volatile
  4260                           
  4261                           ;I2C.c: 56:     I2C_Master_Wait();
  4262  009B  120A  158A  2740  120A  118A  	fcall	_I2C_Master_Wait
  4263  00A0                     l1699:	
  4264                           
  4265                           ;I2C.c: 57:     temp = SSPBUF;
  4266  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4267  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4268  00A2  0813               	movf	19,w	;volatile
  4269  00A3  00F2               	movwf	??_I2C_Master_Read
  4270  00A4  01F3               	clrf	??_I2C_Master_Read+1
  4271  00A5  0872               	movf	??_I2C_Master_Read,w
  4272  00A6  00F4               	movwf	I2C_Master_Read@temp
  4273  00A7  0873               	movf	??_I2C_Master_Read+1,w
  4274  00A8  00F5               	movwf	I2C_Master_Read@temp+1
  4275  00A9                     l1701:	
  4276                           
  4277                           ;I2C.c: 58:     I2C_Master_Wait();
  4278  00A9  120A  158A  2740  120A  118A  	fcall	_I2C_Master_Wait
  4279  00AE                     l1703:	
  4280                           
  4281                           ;I2C.c: 59:     if(a == 1){
  4282  00AE  0370               	decf	I2C_Master_Read@a,w
  4283  00AF  0471               	iorwf	I2C_Master_Read@a+1,w
  4284  00B0  1D03               	btfss	3,2
  4285  00B1  28B3               	goto	u1111
  4286  00B2  28B4               	goto	u1110
  4287  00B3                     u1111:	
  4288  00B3  28B8               	goto	l250
  4289  00B4                     u1110:	
  4290  00B4                     l1705:	
  4291                           
  4292                           ;I2C.c: 60:         SSPCON2bits.ACKDT = 0;
  4293  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  4294  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  4295  00B6  1291               	bcf	17,5	;volatile
  4296                           
  4297                           ;I2C.c: 61:     }
  4298  00B7  28BB               	goto	l251
  4299  00B8                     l250:	
  4300                           ;I2C.c: 62:     else{
  4301                           
  4302                           
  4303                           ;I2C.c: 63:         SSPCON2bits.ACKDT = 1;
  4304  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  4305  00B9  1303               	bcf	3,6	;RP1=0, select bank1
  4306  00BA  1691               	bsf	17,5	;volatile
  4307  00BB                     l251:	
  4308                           ;I2C.c: 64:     }
  4309                           
  4310                           
  4311                           ;I2C.c: 65:     SSPCON2bits.ACKEN = 1;
  4312  00BB  1611               	bsf	17,4	;volatile
  4313  00BC                     l1707:	
  4314                           
  4315                           ;I2C.c: 66:     return temp;
  4316  00BC  0875               	movf	I2C_Master_Read@temp+1,w
  4317  00BD  00F1               	movwf	?_I2C_Master_Read+1
  4318  00BE  0874               	movf	I2C_Master_Read@temp,w
  4319  00BF  00F0               	movwf	?_I2C_Master_Read
  4320  00C0                     l252:	
  4321  00C0  0008               	return
  4322  00C1                     __end_of_I2C_Master_Read:	
  4323                           
  4324                           	psect	text22
  4325  0F40                     __ptext22:	
  4326 ;; *************** function _I2C_Master_Wait *****************
  4327 ;; Defined at:
  4328 ;;		line 15 in file "I2C.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         0       0       0       0       0
  4344 ;;      Temps:          0       0       0       0       0
  4345 ;;      Totals:         0       0       0       0       0
  4346 ;;Total ram usage:        0 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_I2C_Master_Start
  4352 ;;		_I2C_Master_Stop
  4353 ;;		_I2C_Master_Write
  4354 ;;		_I2C_Master_Read
  4355 ;;		_I2C_Master_RepeatedStart
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           
  4360                           ;psect for function _I2C_Master_Wait
  4361  0F40                     _I2C_Master_Wait:	
  4362  0F40                     l1549:	
  4363                           ;incstack = 0
  4364                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4365                           
  4366  0F40                     l232:	
  4367                           ;I2C.c: 16:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4368                           
  4369  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  4370  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  4371  0F42  1914               	btfsc	20,2	;volatile
  4372  0F43  2F45               	goto	u851
  4373  0F44  2F46               	goto	u850
  4374  0F45                     u851:	
  4375  0F45  2F40               	goto	l232
  4376  0F46                     u850:	
  4377  0F46                     l1551:	
  4378  0F46  0811               	movf	17,w	;volatile
  4379  0F47  391F               	andlw	31
  4380  0F48  1D03               	btfss	3,2
  4381  0F49  2F4B               	goto	u861
  4382  0F4A  2F4C               	goto	u860
  4383  0F4B                     u861:	
  4384  0F4B  2F40               	goto	l232
  4385  0F4C                     u860:	
  4386  0F4C                     l235:	
  4387  0F4C  0008               	return
  4388  0F4D                     __end_of_I2C_Master_Wait:	
  4389                           
  4390                           	psect	text23
  4391  00C1                     __ptext23:	
  4392 ;; *************** function _I2C_INIT *****************
  4393 ;; Defined at:
  4394 ;;		line 5 in file "I2C.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  c               4    0[BANK0 ] const unsigned long 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, pclath, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4408 ;;      Params:         0       4       0       0       0
  4409 ;;      Locals:         0       0       0       0       0
  4410 ;;      Temps:          0       4       0       0       0
  4411 ;;      Totals:         0       8       0       0       0
  4412 ;;Total ram usage:        8 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:    1
  4415 ;; This function calls:
  4416 ;;		___lldiv
  4417 ;; This function is called by:
  4418 ;;		_main
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           
  4423                           ;psect for function _I2C_INIT
  4424  00C1                     _I2C_INIT:	
  4425  00C1                     l1653:	
  4426                           ;incstack = 0
  4427                           ; Regs used in _I2C_INIT: [wreg+status,2+status,0+pclath+cstack]
  4428                           
  4429                           
  4430                           ;I2C.c: 6:     SSPCON = 0b00101000;
  4431  00C1  3028               	movlw	40
  4432  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  4433  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  4434  00C4  0094               	movwf	20	;volatile
  4435  00C5                     l1655:	
  4436                           
  4437                           ;I2C.c: 7:     SSPCON2 = 0;
  4438  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  4439  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  4440  00C7  0191               	clrf	17	;volatile
  4441  00C8                     l1657:	
  4442                           
  4443                           ;I2C.c: 8:     SSPADD = (8000000/(4*c))-1;
  4444  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  4445  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  4446  00CA  0854               	movf	I2C_INIT@c,w
  4447  00CB  00D8               	movwf	??_I2C_INIT
  4448  00CC  0855               	movf	I2C_INIT@c+1,w
  4449  00CD  00D9               	movwf	??_I2C_INIT+1
  4450  00CE  0856               	movf	I2C_INIT@c+2,w
  4451  00CF  00DA               	movwf	??_I2C_INIT+2
  4452  00D0  0857               	movf	I2C_INIT@c+3,w
  4453  00D1  00DB               	movwf	??_I2C_INIT+3
  4454  00D2  3002               	movlw	2
  4455  00D3                     u1075:	
  4456  00D3  1003               	clrc
  4457  00D4  0DD8               	rlf	??_I2C_INIT,f
  4458  00D5  0DD9               	rlf	??_I2C_INIT+1,f
  4459  00D6  0DDA               	rlf	??_I2C_INIT+2,f
  4460  00D7  0DDB               	rlf	??_I2C_INIT+3,f
  4461  00D8                     u1070:	
  4462  00D8  3EFF               	addlw	-1
  4463  00D9  1D03               	skipz
  4464  00DA  28D3               	goto	u1075
  4465  00DB  085B               	movf	??_I2C_INIT+3,w
  4466  00DC  00F3               	movwf	___lldiv@divisor+3
  4467  00DD  085A               	movf	??_I2C_INIT+2,w
  4468  00DE  00F2               	movwf	___lldiv@divisor+2
  4469  00DF  0859               	movf	??_I2C_INIT+1,w
  4470  00E0  00F1               	movwf	___lldiv@divisor+1
  4471  00E1  0858               	movf	??_I2C_INIT,w
  4472  00E2  00F0               	movwf	___lldiv@divisor
  4473  00E3  3000               	movlw	0
  4474  00E4  00F7               	movwf	___lldiv@dividend+3
  4475  00E5  307A               	movlw	122
  4476  00E6  00F6               	movwf	___lldiv@dividend+2
  4477  00E7  3012               	movlw	18
  4478  00E8  00F5               	movwf	___lldiv@dividend+1
  4479  00E9  3000               	movlw	0
  4480  00EA  00F4               	movwf	___lldiv@dividend
  4481  00EB  120A  118A  2233  120A  118A  	fcall	___lldiv
  4482  00F0  0870               	movf	?___lldiv,w
  4483  00F1  3EFF               	addlw	255
  4484  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  4485  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  4486  00F4  0093               	movwf	19	;volatile
  4487  00F5                     l1659:	
  4488                           
  4489                           ;I2C.c: 9:     SSPSTAT = 0;
  4490  00F5  0194               	clrf	20	;volatile
  4491  00F6                     l1661:	
  4492                           
  4493                           ;I2C.c: 10:     TRISCbits.TRISC3 = 1;
  4494  00F6  1587               	bsf	7,3	;volatile
  4495  00F7                     l1663:	
  4496                           
  4497                           ;I2C.c: 11:     TRISCbits.TRISC4 = 1;
  4498  00F7  1607               	bsf	7,4	;volatile
  4499  00F8                     l229:	
  4500  00F8  0008               	return
  4501  00F9                     __end_of_I2C_INIT:	
  4502                           
  4503                           	psect	text24
  4504  0233                     __ptext24:	
  4505 ;; *************** function ___lldiv *****************
  4506 ;; Defined at:
  4507 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  divisor         4    0[COMMON] unsigned long 
  4510 ;;  dividend        4    4[COMMON] unsigned long 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  quotient        4    9[COMMON] unsigned long 
  4513 ;;  counter         1   13[COMMON] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  4    0[COMMON] unsigned long 
  4516 ;; Registers used:
  4517 ;;		wreg, status,2, status,0
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4523 ;;      Params:         8       0       0       0       0
  4524 ;;      Locals:         5       0       0       0       0
  4525 ;;      Temps:          1       0       0       0       0
  4526 ;;      Totals:        14       0       0       0       0
  4527 ;;Total ram usage:       14 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_I2C_INIT
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function ___lldiv
  4538  0233                     ___lldiv:	
  4539  0233                     l1553:	
  4540                           ;incstack = 0
  4541                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4542                           
  4543  0233  3000               	movlw	0
  4544  0234  00FC               	movwf	___lldiv@quotient+3
  4545  0235  3000               	movlw	0
  4546  0236  00FB               	movwf	___lldiv@quotient+2
  4547  0237  3000               	movlw	0
  4548  0238  00FA               	movwf	___lldiv@quotient+1
  4549  0239  3000               	movlw	0
  4550  023A  00F9               	movwf	___lldiv@quotient
  4551  023B  0873               	movf	___lldiv@divisor+3,w
  4552  023C  0472               	iorwf	___lldiv@divisor+2,w
  4553  023D  0471               	iorwf	___lldiv@divisor+1,w
  4554  023E  0470               	iorwf	___lldiv@divisor,w
  4555  023F  1903               	skipnz
  4556  0240  2A42               	goto	u871
  4557  0241  2A43               	goto	u870
  4558  0242                     u871:	
  4559  0242  2A90               	goto	l1573
  4560  0243                     u870:	
  4561  0243                     l1555:	
  4562  0243  01FD               	clrf	___lldiv@counter
  4563  0244  0AFD               	incf	___lldiv@counter,f
  4564  0245  2A53               	goto	l1559
  4565  0246                     l1557:	
  4566  0246  3001               	movlw	1
  4567  0247  00F8               	movwf	??___lldiv
  4568  0248                     u885:	
  4569  0248  1003               	clrc
  4570  0249  0DF0               	rlf	___lldiv@divisor,f
  4571  024A  0DF1               	rlf	___lldiv@divisor+1,f
  4572  024B  0DF2               	rlf	___lldiv@divisor+2,f
  4573  024C  0DF3               	rlf	___lldiv@divisor+3,f
  4574  024D  0BF8               	decfsz	??___lldiv,f
  4575  024E  2A48               	goto	u885
  4576  024F  3001               	movlw	1
  4577  0250  00F8               	movwf	??___lldiv
  4578  0251  0878               	movf	??___lldiv,w
  4579  0252  07FD               	addwf	___lldiv@counter,f
  4580  0253                     l1559:	
  4581  0253  1FF3               	btfss	___lldiv@divisor+3,7
  4582  0254  2A56               	goto	u891
  4583  0255  2A57               	goto	u890
  4584  0256                     u891:	
  4585  0256  2A46               	goto	l1557
  4586  0257                     u890:	
  4587  0257                     l1561:	
  4588  0257  3001               	movlw	1
  4589  0258  00F8               	movwf	??___lldiv
  4590  0259                     u905:	
  4591  0259  1003               	clrc
  4592  025A  0DF9               	rlf	___lldiv@quotient,f
  4593  025B  0DFA               	rlf	___lldiv@quotient+1,f
  4594  025C  0DFB               	rlf	___lldiv@quotient+2,f
  4595  025D  0DFC               	rlf	___lldiv@quotient+3,f
  4596  025E  0BF8               	decfsz	??___lldiv,f
  4597  025F  2A59               	goto	u905
  4598  0260                     l1563:	
  4599  0260  0873               	movf	___lldiv@divisor+3,w
  4600  0261  0277               	subwf	___lldiv@dividend+3,w
  4601  0262  1D03               	skipz
  4602  0263  2A6E               	goto	u915
  4603  0264  0872               	movf	___lldiv@divisor+2,w
  4604  0265  0276               	subwf	___lldiv@dividend+2,w
  4605  0266  1D03               	skipz
  4606  0267  2A6E               	goto	u915
  4607  0268  0871               	movf	___lldiv@divisor+1,w
  4608  0269  0275               	subwf	___lldiv@dividend+1,w
  4609  026A  1D03               	skipz
  4610  026B  2A6E               	goto	u915
  4611  026C  0870               	movf	___lldiv@divisor,w
  4612  026D  0274               	subwf	___lldiv@dividend,w
  4613  026E                     u915:	
  4614  026E  1C03               	skipc
  4615  026F  2A71               	goto	u911
  4616  0270  2A72               	goto	u910
  4617  0271                     u911:	
  4618  0271  2A81               	goto	l1569
  4619  0272                     u910:	
  4620  0272                     l1565:	
  4621  0272  0870               	movf	___lldiv@divisor,w
  4622  0273  02F4               	subwf	___lldiv@dividend,f
  4623  0274  0871               	movf	___lldiv@divisor+1,w
  4624  0275  1C03               	skipc
  4625  0276  0F71               	incfsz	___lldiv@divisor+1,w
  4626  0277  02F5               	subwf	___lldiv@dividend+1,f
  4627  0278  0872               	movf	___lldiv@divisor+2,w
  4628  0279  1C03               	skipc
  4629  027A  0F72               	incfsz	___lldiv@divisor+2,w
  4630  027B  02F6               	subwf	___lldiv@dividend+2,f
  4631  027C  0873               	movf	___lldiv@divisor+3,w
  4632  027D  1C03               	skipc
  4633  027E  0F73               	incfsz	___lldiv@divisor+3,w
  4634  027F  02F7               	subwf	___lldiv@dividend+3,f
  4635  0280                     l1567:	
  4636  0280  1479               	bsf	___lldiv@quotient,0
  4637  0281                     l1569:	
  4638  0281  3001               	movlw	1
  4639  0282                     u925:	
  4640  0282  1003               	clrc
  4641  0283  0CF3               	rrf	___lldiv@divisor+3,f
  4642  0284  0CF2               	rrf	___lldiv@divisor+2,f
  4643  0285  0CF1               	rrf	___lldiv@divisor+1,f
  4644  0286  0CF0               	rrf	___lldiv@divisor,f
  4645  0287  3EFF               	addlw	-1
  4646  0288  1D03               	skipz
  4647  0289  2A82               	goto	u925
  4648  028A                     l1571:	
  4649  028A  3001               	movlw	1
  4650  028B  02FD               	subwf	___lldiv@counter,f
  4651  028C  1D03               	btfss	3,2
  4652  028D  2A8F               	goto	u931
  4653  028E  2A90               	goto	u930
  4654  028F                     u931:	
  4655  028F  2A57               	goto	l1561
  4656  0290                     u930:	
  4657  0290                     l1573:	
  4658  0290  087C               	movf	___lldiv@quotient+3,w
  4659  0291  00F3               	movwf	?___lldiv+3
  4660  0292  087B               	movf	___lldiv@quotient+2,w
  4661  0293  00F2               	movwf	?___lldiv+2
  4662  0294  087A               	movf	___lldiv@quotient+1,w
  4663  0295  00F1               	movwf	?___lldiv+1
  4664  0296  0879               	movf	___lldiv@quotient,w
  4665  0297  00F0               	movwf	?___lldiv
  4666  0298                     l402:	
  4667  0298  0008               	return
  4668  0299                     __end_of___lldiv:	
  4669  007E                     btemp	set	126	;btemp
  4670  007E                     wtemp0	set	126


Data Sizes:
    Strings     41
    Constant    0
    Data        0
    BSS         135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      77
    BANK1            80      0      78
    BANK3            96      0       5
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 5
		 -> ADCB_CHARB(BANK1[5]), uniT_char(BANK1[5]), CONTLUZB_CHAR(BANK1[5]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    lcd_msg@c	PTR unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[7]), STR_8(CODE[6]), STR_7(CODE[3]), STR_6(CODE[17]), 
		 -> STR_5(CODE[2]), STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[2]), 
		 -> STR_1(CODE[17]), SONICOU_CHAR(BANK1[5]), ADCA_CHARA(BANK1[5]), CONTU_CHAR(BANK1[5]), 
		 -> decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 5
		 -> ADCA_CHARA(BANK1[5]), decT_char(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> SONICOU_CHAR(BANK1[5]), SONICOD_CHAR(BANK1[5]), ADCB_CHARB(BANK1[5]), ADCA_CHARA(BANK1[5]), 
		 -> CONTU_CHAR(BANK1[5]), CONTD_CHAR(BANK1[5]), uniT_char(BANK1[5]), decT_char(BANK1[5]), 
		 -> CONTLUZB_CHAR(BANK1[5]), CONTLUZA_CHAR(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_itoa
    _lcd_msg->_lcd_dwr
    _lcd_dwr->_lcd_lat
    _lcd_dwr->_lcd_ready
    _itoa->_utoa
    _utoa->___lwdiv
    _inicializacion->_lcd_cmd
    _lcd_cmd->_lcd_lat
    _lcd_cmd->_lcd_ready
    _UART_INIT->___aldiv
    _I2C_INIT->___lldiv

Critical Paths under _main in BANK0

    _main->_UART_INIT
    _itoa->_utoa
    _UART_INIT->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    8826
                                             22 BANK0      3     3      0
                           _I2C_INIT
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                              _SETUP
                          _UART_INIT
                         _UART_WRITE
                            ___awdiv
                            ___awmod
                     _inicializacion
                               _itoa
                            _lcd_cmd
                            _lcd_msg
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     3      1     425
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_msg                                              2     0      2    1131
                                              3 COMMON     2     0      2
                            _lcd_dwr
 ---------------------------------------------------------------------------------
 (2) _lcd_dwr                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 7     3      4    3277
                                             13 COMMON     1     1      0
                                              4 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    1264
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _inicializacion                                       0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              1     1      0      22
                                              2 COMMON     1     1      0
                            _lcd_lat
                          _lcd_ready
 ---------------------------------------------------------------------------------
 (3) _lcd_ready                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _lcd_lat                                              2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1056
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _UART_WRITE                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                           16    12      4     572
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     402
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     425
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_INIT                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_INIT
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _SETUP
   _UART_INIT
     ___aldiv
   _UART_WRITE
   ___awdiv
   ___awmod
   _inicializacion
     _lcd_cmd
       _lcd_lat
       _lcd_ready
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _lcd_cmd
     _lcd_lat
     _lcd_ready
   _lcd_msg
     _lcd_dwr
       _lcd_lat
       _lcd_ready
   _strcat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      4D       5       96.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      4E       7       97.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       5       9        5.2%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AE      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 19 21:50:04 2020

                        pc 0002                __CFG_CP$OFF 0000                         _S0 0049  
                       _S1 0048               ___awdiv@sign 0076                         fsr 0004  
                      l151 0437                        _DC1 002A                        l232 0F40  
                      _DC2 003A                        l161 0F94                        l402 0298  
                      l250 00B8                        l235 0F4C                        l251 00BB  
                      l155 0744                        l252 00C0                        l244 0F29  
                      l229 00F8                        l181 0F5B                        l238 0F20  
                      l270 0232                        l247 0F33                        l431 0386  
                      l280 0F3F                        l441 040E                        l186 0069  
                      l178 0F6D                        l195 0FFF                        l532 01CF  
                      l277 0F35                        l189 0F7F                        l198 0FB3  
                      l519 02FF                        l820 035A                        l638 0176  
                      l822 0371                        l814 0FD9                        l831 0092  
                      l648 0132                        _GIE 005F                        _RA0 0028  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
             __CFG_CPD$OFF 0000                        u710 005D                        u711 005C  
                      u720 013B                        u721 013A                        u810 0111  
                      u811 0110                        u740 014D                        u820 011B  
                      u741 014C                        u821 011A                        u805 0103  
                      u910 0272                        u911 0271                        u735 013F  
                      u760 015E                        u840 012E                        u905 0259  
                      u761 015D                        u841 012D                        u825 0117  
                      u930 0290                        u850 0F46                        u931 028F  
                      u915 026E                        u851 0F45                        u755 014E  
                      u835 0122                        u860 0F4C                        u940 0379  
                      u780 0172                        u925 0282                        u861 0F4B  
                      u941 0378                        u781 0171                        u765 015A  
                      u870 0243                        u950 038A                        u790 00FF  
                      u871 0242                        u951 0389                        u775 0166  
                      u791 00FE                        u960 03A9                        u961 03A8  
                      u890 0257                        u891 0256                        u980 03BD  
                      u885 0248                        u981 03BC                        u975 03AE  
                      u995 03BF                        _luz 00B9                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       l1511 010D                       l1503 00F9  
                     l1601 03D8                       l1513 0111                       l1505 00FF  
                     l1521 012E                       l1611 03FB                       l1603 03E6  
                     l1451 0045                       l1531 0F67                       l1515 011B  
                     l1507 0102                       l1701 00A9                       l1613 0406  
                     l1605 03E7                       l1461 0054                       l1453 0049  
                     l1533 0F68                       l1525 0F5D                       l1517 0121  
                     l1509 0109                       l1621 031A                       l1541 0F78  
                     l1551 0F46                       l1703 00AE                       l1711 0F21  
                     l1607 03F0                       l1471 0F50                       l1463 005D  
                     l1455 004A                       l1527 0F62                       l1519 0128  
                     l1631 033D                       l1623 031E                       l1543 0F79  
                     l1561 0257                       l1553 0233                       l1705 00B4  
                     l1713 0F26                       l1609 03F6                       l1801 0181  
                     l1473 0F58                       l1465 005E                       l1457 004B  
                     l1449 0041                       l1529 0F66                       l1481 013B  
                     l1641 0367                       l1633 034E                       l1625 0324  
                     l1617 0303                       l1721 0FC2                       l1545 0F7A  
                     l1537 0F6F                       l1571 028A                       l1563 0260  
                     l1555 0243                       l1707 00BC                       l1651 0F85  
                     l1811 0195                       l1803 0183                       l1467 0066  
                     l1459 004C                       l1491 015E                       l1483 013E  
                     l1643 036D                       l1635 0356                       l1627 0328  
                     l1619 0307                       l1723 0FC6                       l1715 0FB7  
                     l1539 0F74                       l1731 0070                       l1565 0272  
                     l1557 0246                       l1573 0290                       l1661 00F6  
                     l1653 00C1                       l1549 0F40                       l1581 0379  
                     l1821 01B4                       l1813 019C                       l1805 0187  
                     l1469 0F4D                       l1493 0164                       l1485 0145  
                     l1477 0133                       l1637 035E                       l1629 032A  
                     l1725 0FCB                       l1717 0FB7                       l1741 0FDB  
                     l1733 0074                       l1901 064B                       l1567 0280  
                     l1559 0253                       l1663 00F7                       l1655 00C5  
                     l1647 0F80                       l1591 03A9                       l1583 038A  
                     l1671 01D0                       l1751 0299                       l1823 01BB  
                     l1815 01A0                       l1807 018C                       l1495 0165  
                     l1487 0149                       l1479 0135                       l1639 0365  
                     l1719 0FBB                       l1743 0FE9                       l1735 007D  
                     l1911 067B                       l1903 0650                       l1569 0281  
                     l1657 00C8                       l1649 0F84                       l1593 03AC  
                     l1585 0395                       l1577 0372                       l1681 022D  
                     l1673 0229                       l1761 02A9                       l1753 029A  
                     l1817 01A4                       l1809 0192                       l1825 01C1  
                     l1497 016C                       l1489 014D                       l1745 0FEF  
                     l1737 0085                       l1729 006B                       l1921 06CD  
                     l1913 0693                       l1905 0659                       l1841 048D  
                     l1833 040F                       l1659 00F5                       l1691 0F2A  
                     l1595 03B9                       l1587 0399                       l1579 0375  
                     l1683 0230                       l1675 022A                       l1747 0F35  
                     l1771 02BD                       l1763 02AE                       l1755 029E  
                     l1827 01C6                       l1819 01AE                       l1667 0F95  
                     l1499 0172                       l1739 0FDA                       l1931 06EA  
                     l1923 06D2                       l1915 06A1                       l1907 0667  
                     l1851 04CD                       l1843 04A5                       l1835 0458  
                     l1693 0F2F                       l1597 03BD                       l1589 03A1  
                     l1685 0231                       l1677 022B                       l1749 0F3B  
                     l1781 02E3                       l1773 02C4                       l1765 02B2  
                     l1757 02A3                       l1829 01CB                       l1941 0714  
                     l1933 06F0                       l1925 06D8                       l1917 06B9  
                     l1909 066C                       l1861 052D                       l1853 04DB  
                     l1845 04B3                       l1837 0467                       l1695 0093  
                     l1687 0F18                       l1599 03C6                       l1679 022C  
                     l1791 02FB                       l1783 02E4                       l1775 02C8  
                     l1767 02B4                       l1759 02A5                       l1951 073A  
                     l1943 071D                       l1935 06F9                       l1927 06DB  
                     l1919 06C7                       l1871 0563                       l1863 053B  
                     l1855 04E0                       l1847 04BF                       l1839 047F  
                     l1697 0098                       l1689 0F1D                       l1785 02EB  
                     l1777 02CC                       l1769 02BA                       l1961 078E  
                     l1953 0740                       l1945 0726                       l1937 0702  
                     l1929 06E1                       l1881 05B5                       l1873 0568  
                     l1865 0547                       l1857 04EF                       l1849 04C4  
                     l1699 00A0                       l1779 02DD                       l1787 02F1  
                     l1795 0177                       l1971 07BC                       l1963 0798  
                     l1955 074A                       l1939 070B                       l1947 072F  
                     l1891 05E4                       l1883 05C3                       l1875 0577  
                     l1867 054C                       l1859 0515                       l1789 02F6  
                     l1797 0178                       l1973 07C4                       l1965 07A0  
                     l1957 0753                       l1949 0735                       l1893 05F3  
                     l1885 05C8                       l1877 058F                       l1869 0555  
                     l1799 017C                       l1975 07CE                       l1967 07AA  
                     l1959 0786                       l1895 0619                       l1887 05D1  
                     l1879 059D                       l1977 07D6                       l1969 07B2  
                     l1897 0631                       l1889 05DF                       l1899 063F  
                     STR_1 0024                       STR_2 003A                       STR_3 0037  
                     STR_4 0037                       STR_5 003A                       STR_6 0013  
                     STR_7 0039                       STR_8 0036                       STR_9 0035  
                     u1000 03D8                       u1001 03D7                       u1020 03F6  
                     u1021 03F5                       u1005 03D4                       u1101 020B  
                     u1110 00B4                       u1030 03FB                       u1102 020C  
                     u1111 00B3                       u1031 03FA                       u1015 03E8  
                     u1103 0211                       u1104 0212                       u1040 0324  
                     u1120 0FBB                       u1105 0217                       u1041 0323  
                     u1121 0FBA                       u1106 0218                       u1210 02CC  
                     u1050 0356                       u1130 007C                       u1211 02CB  
                     u1051 0355                       u1131 007B                       u1060 036D  
                     u1140 0092                       u1205 02BE                       u1061 036C  
                     u1141 0091                       u1070 00D8                       u1230 02DD  
                     u1310 01A4                       u1150 0FFF                       u1231 02DC  
                     u1311 01A3                       u1151 0FFE                       u1080 01E0  
                     u1160 0F3B                       u1320 01AE                       u1161 0F3A  
                     u1225 02CD                       u1321 01AD                       u1305 0196  
                     u1090 01F9                       u1250 02F1                       u1170 029E  
                     u1075 00D3                       u1251 02F0                       u1235 02D9  
                     u1171 029D                       u1260 02F6                       u1180 02A9  
                     u1340 01C1                       u1085 01DB                       u1261 02F5  
                     u1245 02E5                       u1181 02A8                       u1341 01C0  
                     u1325 01AA                       u1190 02BA                       u1350 01C6  
                     u1270 017C                       u1095 01F4                       u1191 02B9  
                     u1351 01C5                       u1335 01B5                       u1271 017B  
                     u1407 0460                       u1280 0187                       u1360 06CD  
                     u1281 0186                       u1361 06CC                       u1417 04E8  
                     u1290 0192                       u1370 06D2                       u1291 0191  
                     u1507 0050                       u1371 06D1                       u1427 0570  
                     u1380 0735                       u1517 0062                       u1381 0734  
                     u1437 05EC                       u1390 073A                       u1527 0F54  
                     u1391 0739                       u1447 0674                       u1457 0794  
                     u1467 07A6                       u1477 07B8                       u1487 07CA  
                     u1497 07DC                       _PEIE 005E                       _RCEN 048B  
             __CFG_WRT$OFF 0000           __end_of_I2C_INIT 00F9                       _decT 0040  
                     _main 040F                       _itoa 0FB4                       _uniT 0042  
                     btemp 007E                       _utoa 0300                       start 0000  
            __CFG_IESO$OFF 0000           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070            __end_of___aldiv 040F                      ?_main 0070  
                    _ADC_A 0024                      ?_itoa 0058            __end_of___awdiv 0300  
            __CFG_WDTE$OFF 0000            __end_of___awmod 01D0                      _ANSEL 0188  
          __end_of___lldiv 0299                      ?_utoa 0078            ___awdiv@divisor 0070  
                    _CONTD 0032                      _CONTU 002E            __end_of___lwdiv 0177  
          __end_of___lwmod 0133            ___awdiv@counter 0075                      _RCREG 001A  
              ?_UART_WRITE 0070                      _SETUP 0F80                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _LUZ_A 0034  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019         __size_of_UART_INIT 0063  
           __CFG_FCMEN$OFF 0000            __end_of_lcd_cmd 0F6E            __end_of_lcd_lat 0F5C  
          __end_of_lcd_dwr 0F80            __end_of_lcd_msg 1000                      _decHR 003C  
                    _uniHR 003E             __CFG_BOREN$OFF 0000                      pclath 000A  
                    utoa@c 0056                      utoa@v 0054                      status 0003  
                    wtemp0 007E             __CFG_MCLRE$OFF 0000            __initialization 07E4  
             __end_of_main 07E4               __end_of_itoa 0FDA               __end_of_utoa 0372  
                I2C_INIT@c 0054                     ??_main 006A                     ??_itoa 007D  
                   ??_utoa 007C                     ?_SETUP 0070          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___awdiv@dividend 0072                     _ANSELH 0189                     _SONICO 004B  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
  __size_of_inicializacion 001F                     _SSPCON 0014                     _SSPBUF 0013  
           __CFG_PWRTE$OFF 0000        __size_of_UART_WRITE 000C          __end_of_UART_INIT 0233  
                ??___aldiv 0078                  ??___awdiv 0074                  ??___awmod 0074  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 0074  
         ___awdiv@quotient 0077            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_lcd_cmd 0072                  ??_lcd_lat 0070                     _strcat 006A  
                ??_lcd_dwr 0072                  ??_lcd_msg 0075                  ?_I2C_INIT 0054  
           UART_WRITE@data 0070    __end_of__initialization 07FC              __end_of_SETUP 0F95  
           __pcstackCOMMON 0070                 ??_I2C_INIT 0058                    ??_SETUP 0070  
       __size_of_lcd_ready 0029                 __pbssBANK0 0020                 __pbssBANK1 00A0  
               __pbssBANK3 0190                 __pmaintext 040F                    _ADC_1_A 0028  
                  _ADC_1_B 0026                    ?_strcat 0070               ??_UART_WRITE 0070  
                  _SONICOD 0030                    _SONICOU 002C                    _LUZ_1_A 0038  
                  _LUZ_1_B 0036                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _inicializacion 0F95                    _T_byte1 004A  
       __end_of_UART_WRITE 0F40          __end_of_lcd_ready 006A                    ___aldiv 0372  
                  ___awdiv 0299                    ___awmod 0177                    ___lldiv 0233  
                  ___lwdiv 0133                    ___lwmod 00F9                    __ptext1 006A  
                  __ptext2 0FDA                    __ptext3 0F6E                    __ptext4 0FB4  
                  __ptext5 0300                    __ptext6 00F9                    __ptext7 0133  
                  __ptext8 0F95                    __ptext9 0F5C                    _lcd_cmd 0F5C  
                  _lcd_lat 0F4D                    _lcd_dwr 0F6E                    _lcd_msg 0FDA  
          __size_of_strcat 0029           ___awmod@dividend 0072           ___aldiv@dividend 0074  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
                  clrloop0 0F11                    _voltage 00BD     __end_of_inicializacion 0FB4  
     end_of_initialization 07FC                    itoa@buf 005D                    itoa@val 0058  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018           ___aldiv@quotient 0056  
         I2C_Master_Read@a 0070                    utoa@buf 0057                    utoa@val 0078  
                _UART_INIT 01D0                  _TRISCbits 0087          __size_of_I2C_INIT 0038  
          ?_inicializacion 0070                  _TXSTAbits 0098                 ?_UART_INIT 005A  
           __end_of_strcat 0093        start_initialization 07E4          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                   ??_strcat 0071  
                ___latbits 0002              __pcstackBANK0 0054                  _decT_char 00C1  
         _I2C_Master_Start 0F18           _I2C_Master_Write 0F2A           ___lwdiv@dividend 0072  
                 ?___aldiv 0070                   ?___awdiv 0070                   ?___awmod 0070  
                 ?___lldiv 0070                   ?___lwdiv 0070                   ?___lwmod 0070  
              ??_UART_INIT 005E                  _lcd_ready 0041                  __pstrings 0003  
                 ?_lcd_cmd 0070                   ?_lcd_lat 0070                   ?_lcd_dwr 0070  
                 ?_lcd_msg 0073                   _I2C_INIT 00C1             __size_of_SETUP 0015  
         ___lwdiv@quotient 0075                   _CONTADOR 004D                   _CONTLUZA 0046  
                 _CONTLUZB 0044            ___aldiv@divisor 0070            ___aldiv@counter 0054  
       _analogic_digital_a 004E         _analogic_digital_b 004C                  clear_ram0 0F10  
                 _PIR1bits 000C                   _POINTERA 0190                   _POINTERB 00A5  
                _uniT_char 00C6                 _ADCA_CHARA 00D0                 _ADCB_CHARB 00CB  
               _ADCC_CHARC 00A0                 ?_lcd_ready 0070                __stringbase 0012  
         ??_inicializacion 0073        I2C_Master_Read@temp 0074              _CONTLUZA_CHAR 004F  
            _CONTLUZB_CHAR 00E9           __size_of___aldiv 009D           __size_of___awdiv 0067  
         __size_of___awmod 0059           __size_of___lldiv 0066           __size_of___lwdiv 0044  
         __size_of___lwmod 003A         __end_of__stringtab 0013                   _decT_int 0020  
         __size_of_lcd_cmd 0012           __size_of_lcd_lat 000F           __size_of_lcd_dwr 0012  
         __size_of_lcd_msg 0026            _I2C_Master_Read 0093            _I2C_Master_Wait 0F40  
               strcat@from 0070            _I2C_Master_Stop 0F21            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0041                   __ptext11 0F4D  
                 __ptext20 0F18                   __ptext12 0177                   __ptext21 0093  
                 __ptext13 0299                   __ptext22 0F40                   __ptext14 0F34  
                 __ptext23 00C1                   __ptext15 01D0                   __ptext24 0233  
                 __ptext16 0372                   __ptext17 0F80                   __ptext18 0F2A  
                 __ptext19 0F21          __CFG_BOR4V$BOR40V 0000                 _CONTD_CHAR 00DA  
               _CONTU_CHAR 00D5          UART_INIT@baudrate 005A              __size_of_main 03D5  
             _SONICOD_CHAR 00E4              __size_of_itoa 0026              __size_of_utoa 0072  
             _SONICOU_CHAR 00DF                   _uniT_int 0022                   lcd_cmd@x 0072  
                 lcd_dwr@x 0072                   lcd_msg@c 0073                ??_lcd_ready 0070  
 __end_of_I2C_Master_Start 0F21   __end_of_I2C_Master_Write 0F34                   itoa@base 005A  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074                  stringcode 000D  
  __end_of_I2C_Master_Read 00C1    __end_of_I2C_Master_Wait 0F4D    __end_of_I2C_Master_Stop 0F2A  
                 utoa@base 007A                   strcat@cp 0073                 _LUZA_CHARA 00B4  
                 strcat@to 0072                 _LUZB_CHARB 00AF                 _UART_WRITE 0F34  
               _LUZC_CHARC 00AA           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003               ___aldiv@sign 0055                _SSPCON2bits 0091  
